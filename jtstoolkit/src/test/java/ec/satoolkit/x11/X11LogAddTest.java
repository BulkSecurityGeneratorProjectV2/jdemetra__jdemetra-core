/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.satoolkit.x11;

import data.Datax11;
import ec.satoolkit.DecompositionMode;
import ec.tstoolkit.timeseries.simplets.TsData;
import ec.tstoolkit.timeseries.simplets.TsFrequency;
import org.junit.Assert;
import org.junit.Test;
import utilities.CompareTsData;

/**
 *
 * @author Christiane Hofer
 */
public class X11LogAddTest {

    @Test
    public void HKAS_LogAddTest_halfyearly() {
        double tsValues[] = {50508, 74818, 66373, 53389, 57510, 49773, 53081, 72693, 63200, 77488, 58083, 64406, 80570, 88216, 82398, 90517, 120915, 115933, 140733, 162072, 162353, 181499, 164299, 163697, 125311};
        TsData ts = new TsData(TsFrequency.HalfYearly, 2006, 0, tsValues, true);
        X11Specification x11spec = new X11Specification();
        x11spec.setMode(DecompositionMode.LogAdditive);
        x11spec.setBiasCorrection(BiasCorrection.Legacy);
        X11Toolkit toolkit = X11Toolkit.create(x11spec);
        X11Kernel kernel = new X11Kernel();
        kernel.setToolkit(toolkit);
        X11Results rslt = kernel.process(ts);
        double[] v = {55581.19891884158, 67080.89376083516, 66640.95959407407, 57166.159534741426, 53796.188702388965, 51312.65443200686, 56181.126085534925, 65224.770421488734, 71386.30283602996, 68416.71143298682, 63330.33151972446, 64434.990595522846, 79369.32988381585, 86153.95056622777, 84913.79128516786, 91866.74557529477, 105926.4242135134, 120236.97614912104, 139900.37365136523, 158403.70364143312, 169588.90010339246, 173628.04678382125, 172845.68671328816, 152648.47150735758, 135814.99042597317};
        TsData d12 = new TsData(TsFrequency.HalfYearly, 2006, 0, v, true);
        Assert.assertTrue("D12 is wrong", CompareTsData.compareTS(d12, rslt.getData("d-tables.d12", TsData.class), 0.0000001));
    }

    @Test
    public void HKAS_LogAddTest_Monthly() {
        TsData ts = Datax11.O;
        X11Specification x11spec = new X11Specification();
        x11spec.setMode(DecompositionMode.LogAdditive);
            x11spec.setBiasCorrection(BiasCorrection.Legacy);
            X11Toolkit toolkit = X11Toolkit.create(x11spec);
        X11Kernel kernel = new X11Kernel();
        kernel.setToolkit(toolkit);
        X11Results rslt = kernel.process(ts);

        double[] v = {64.98937989480267, 65.34438830887844, 65.70115645126704, 66.03357404772267, 66.29029294441615, 66.45063808419697, 66.56319107308681, 66.6674597466078, 66.81964251768501, 67.0588832560046, 67.3960131017718, 67.84236945012435, 68.36927030790565, 68.90930889429768, 69.40428203261733, 69.82087709997296, 70.16898022462152, 70.48154701178305, 70.80035962279237, 71.15267138451915, 71.51756325206364, 71.86667663393807, 72.1744976391905, 72.43642933068796, 72.66467721785384, 72.88830643736904, 73.14228096138555, 73.45916762289096, 73.81570722388251, 74.17397720346479, 74.49471303347586, 74.76778779705825, 75.00948142259082, 75.25296566563217, 75.49443581026215, 75.69233359142348, 75.83091647144536, 75.93579421009254, 76.02890368221179, 76.14064081232348, 76.31318143917817, 76.56004708003185, 76.83679238755472, 77.09444070059378, 77.30638486733592, 77.45890937650373, 77.5833279917343, 77.72486835055471, 77.89701654571307, 78.07256846756354, 78.24051302070906, 78.38709061563708, 78.48439587828496, 78.5221527396402, 78.55712273114587, 78.63795488701888, 78.7820453857286, 78.97139458544882, 79.17560896793714, 79.37675130626849, 79.5954645650342, 79.83406576914437, 80.05186717901, 80.18973256050526, 80.23606388539427, 80.22849615441513, 80.22178162982856, 80.24374001634925, 80.30251293900683, 80.38508241691628, 80.47115237117393, 80.5247211677646, 80.51217644900933, 80.43965435880934, 80.34324947220675, 80.26106686859289, 80.20080574904834, 80.13861254538432, 80.04548619799611, 79.93095672343766, 79.82387788264384, 79.75931548684422, 79.75487818308336, 79.81378310157696, 79.9255797363518, 80.04955535388245, 80.14671001124339, 80.2070315152496, 80.24496965743893, 80.28774532197363, 80.33954634678703, 80.38604188450944, 80.41615249688071, 80.43672394047776, 80.47515856308137, 80.55545862630538, 80.67568851574288, 80.81406525643602, 80.95439866326163, 81.0809466308512, 81.18423024621755, 81.26250819647214, 81.32908694530367, 81.40761731774263, 81.51552019658989, 81.67753796181273, 81.89443118678562, 82.15264299262553, 82.43573105831098, 82.72959412643351, 83.01605670721861, 83.27275014976333, 83.46474716804926, 83.57818103156362, 83.6438568806328, 83.72550706180694, 83.87520689226537, 84.09285607227162, 84.34102039159686, 84.58246878281072, 84.79894218317067, 85.00433621148692, 85.19607166640071, 85.36487474156843, 85.5045545384828, 85.63211009772431, 85.78768824322493, 86.00338380601637, 86.26567733565456, 86.53226809233664, 86.77644257616056, 87.00433751110293, 87.21929877894564, 87.43287446078969, 87.66558361414353, 87.95686461266358, 88.34292205521874, 88.81307907267583, 89.27547479282386, 89.65341563630265, 89.93451273802535, 90.16590086629473, 90.40003157762425, 90.65985574881428, 90.97083933226962, 91.3212357417517, 91.69504680085963, 92.0551294931064, 92.35652572585897, 92.57948591801446, 92.74118169149924, 92.8875811506527, 93.06715403112395, 93.29741839002564, 93.59555738366365, 93.95945675910376, 94.36887242913016, 94.7785624918147, 95.1452161051061, 95.44557270379624, 95.69166620197812, 95.90422262442443, 96.10010013215454, 96.26643907510545, 96.38891023980239, 96.5028409874008, 96.66920920259898, 96.91750493353396, 97.21753730254625, 97.52188345931124, 97.79232631546337, 98.01201668307846, 98.20544286579819, 98.39781854257838, 98.57700107960503, 98.72532297652504, 98.84798734247383, 98.95851379015457, 99.05835304881217, 99.15840463477046, 99.28435260281012, 99.43603725199246, 99.61482045709091, 99.80772302203516, 99.96635497843475, 100.06436807819598, 100.11943918284004, 100.15831513456126, 100.21294209690778, 100.28870237205501, 100.38762735231818, 100.50676009456265, 100.6458884615858, 100.81143193783399, 100.9864463748628, 101.14504337773779, 101.25612406312166, 101.31071495618886, 101.35454349890765, 101.41582576179113, 101.5039668441526, 101.62590346458879, 101.78718905490004, 101.9963482115964, 102.23961384479398, 102.46985468079741, 102.62826267263524, 102.73481783741686, 102.86581933908819, 103.06069182740204, 103.28920416118743, 103.49335069626432, 103.63909944499441, 103.72855849831325, 103.78256028859317, 103.81159919508202, 103.80593842523311, 103.80276010343816, 103.85883229230473, 103.9834485717006, 104.1406006141199, 104.26455922581536, 104.30800762163156, 104.28881592786709, 104.25992759554072, 104.24236021795234, 104.20839616489184, 104.14438027391047, 104.10658992503903, 104.15104983698679, 104.2893930844338, 104.4766720718211, 104.6662281254066, 104.81858470203187, 104.92571546238013, 104.99617392106312, 105.07081261110488, 105.1891612331976, 105.37571378474925, 105.61865848604853, 105.85322827479158, 106.03145151787184, 106.17290733923883, 106.32292082438744, 106.49029542566979, 106.68843906433342, 106.92040321155795, 107.1856575376707, 107.44452339715, 107.6751198389079, 107.8923789265779, 108.11614487999219, 108.36282766247241, 108.65785088134768, 108.99325287026218, 109.33173652748245, 109.58848823354339, 109.73635831549657, 109.77424440717817, 109.73072076339008, 109.68396339225805, 109.69339323307557, 109.7805639872334, 109.95771689932616, 110.22722866184522, 110.52566038085223, 110.7495058640074, 110.85542823856642, 110.88054760527184, 110.87007730280703, 110.88997537794725, 110.9548219877839, 111.02555354498836, 111.07291574492338, 111.10451226689048, 111.15307258624749};
        TsData d12 = new TsData(TsFrequency.Monthly, 1980, 0, v, true);
        Assert.assertTrue("D12 is wrong", CompareTsData.compareTS(d12, rslt.getData("d-tables.d12", TsData.class), 0.0000001));
    }

}
