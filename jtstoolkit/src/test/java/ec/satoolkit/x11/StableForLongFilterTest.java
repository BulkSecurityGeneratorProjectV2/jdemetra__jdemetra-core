/*
 * Copyright 2013 National Bank of Belgium
 *
 * Licensed under the EUPL, Version 1.1 or â€“ as soon they will be approved
 * by the European Commission - subsequent versions of the EUPL (the "Licence");
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at:
 *
 * http://ec.europa.eu/idabc/eupl
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Licence is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and
 * limitations under the Licence.
 */
package ec.satoolkit.x11;

import ec.satoolkit.DecompositionMode;
import ec.tstoolkit.timeseries.simplets.TsData;
import ec.tstoolkit.timeseries.simplets.TsFrequency;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;
import utilities.CompareTsData;

/**
 *
 * @author Christiane Hofer
 */
public class StableForLongFilterTest {

    public StableForLongFilterTest() {
    }

    @Test
    public void mixedFiltersWithStableAsReplaceFilterTest() {

        //author C.Hofer
        X11Specification spec = new X11Specification();
        SeasonalFilterOption[] filters = new SeasonalFilterOption[12];
        filters[0] = SeasonalFilterOption.S3X15;
        filters[1] = SeasonalFilterOption.S3X15;
        filters[2] = SeasonalFilterOption.S3X15;
        filters[3] = SeasonalFilterOption.S3X15;
        filters[4] = SeasonalFilterOption.S3X15;
        filters[5] = SeasonalFilterOption.S3X15;
        filters[6] = SeasonalFilterOption.S3X15;
        filters[7] = SeasonalFilterOption.S3X15;
        filters[8] = SeasonalFilterOption.S3X9;
        filters[9] = SeasonalFilterOption.S3X15;
        filters[10] = SeasonalFilterOption.S3X15;
        filters[11] = SeasonalFilterOption.S3X15;

        //barriers for the sigma are set so that no outliers are detected
        spec.setSigma(5.5, 6.0);
        spec.setHendersonFilterLength(17);
        spec.setMode(DecompositionMode.Multiplicative);
        spec.setForecastHorizon(0); // set as the default value only to be sure
        spec.setSeasonal(true);
        spec.setSeasonalFilters(filters);
        spec.setCalendarSigma(CalendarSigma.All);
        spec.setExcludefcst(true);
        X11Toolkit toolkit = X11Toolkit.create(spec);

        X11Kernel kernel = new X11Kernel();
        kernel.setToolkit(toolkit);
        X11Results rslt = kernel.process(O);

        double[] b5_ohneExtremwerte = {0.76955463902113, 0.77259246027282, 1.16745897491507, 0.82110804162178, 1.03048505941428, 1.08413356898489, 0.89813422307573, 0.79875220351383, 1.16643076424217, 0.88666531749944, 0.90520147600430, 1.71222725703082, 0.76955463902113, 0.77259246027282, 1.16745897491507, 0.82110804162178, 1.03048505941428, 1.08413356898489, 0.89813422307573, 0.79875220351383, 1.15057549053629, 0.88666531749944, 0.90520147600430, 1.71222725703082, 0.77068090675135, 0.77372317395122, 1.16879276219359, 0.82178229057339, 1.03133123730530, 1.08502380009362, 0.89887172170881, 0.79940809507561, 1.14166653735327, 0.88739339849542, 0.90594477787841, 1.71363324427542, 0.77131374770170, 0.77435851304477, 1.17003833846779, 0.82285928943935, 1.03268286362501, 1.08644579399110, 0.90004975126243, 0.80045577111063, 1.12743598875214, 0.88855638496374, 0.90713207712980, 1.71587907152424, 0.77232460427662, 0.77537335998168, 1.17138376139722, 0.82367315428271, 1.03370425851941, 1.08752036414822, 0.90093996282013, 0.80124747732229, 1.11668226971479, 0.88943522878594, 0.90802929359844, 1.71757619479877, 0.77308848681540, 0.77614025795107, 1.17197111006262, 0.82368448207866, 1.03371847482699, 1.08753532057688, 0.90095235324953, 0.80125849670283, 1.11653259383685, 0.88944746099325, 0.90804178152584, 1.71759981624686, 0.77309911893153, 0.77615093203754, 1.17181314504657, 0.82345114690937, 1.03342564076180, 1.08722724115611, 0.90069712946610, 0.80103151441648, 1.11961568665327, 0.88919549634125, 0.90778454943342, 1.71711325075653, 0.77288011369625, 0.77593106227787, 1.17342481436954, 0.82595365647319, 1.03656627340189, 1.09053137957312, 0.90343439346658, 0.80346588958648, 1.08654965000454, 0.89189780629862, 0.91054335246062, 1.72233164452319, 0.77522893533973, 0.77828915590795, 1.17783376161126, 0.82965296390780, 1.04120887930552, 1.09541568610596, 0.90748072408361, 0.80706447809748, 1.03767014241882, 0.89589246648312, 0.91462152290868, 1.73004567812243, 0.77870105528442, 0.78177498206559, 1.18316917093905, 0.83345368743782, 1.04597876172551, 1.10043389535061, 0.91163798439739, 0.81076172150598, 0.98745060865466, 0.89999663982529, 0.91881149593885, 1.73797119108133, 0.78226836300514, 0.78535637175354, 1.18652923430536, 0.83436778459159, 1.04712594749410, 1.10164080523274, 0.91263783081882, 0.81165093106038, 0.97537250496852, 0.90098371850678, 0.91981920996779, 1.73987732521099, 0.78312632223538, 0.78621771778265, 1.18821070738950, 0.83581797445853, 1.04894592600537, 1.10355553439924, 0.91422405952859, 0.81306163743884, 0.95621092733426, 0.90254969155005, 0.92141792041938, 1.74290135431820, 0.78448745083839, 0.78758421944844, 1.18996316624286, 0.83683044684636, 1.05021657202982, 1.10489233205275, 0.91533150952949, 0.81404654382118, 0.94283297682967, 0.90364299974546, 0.92253408474055, 1.74501262680802, 0.78543774373331, 0.78853826362989, 1.19155587863351, 0.83805702402337, 1.05175591812200, 1.10651181867953, 0.91667314897774, 0.81523972568429, 0.92662602742420, 0.90496750685897, 0.92253408474055, 1.74501262680802, 0.78543774373331, 0.78853826362989, 1.19155587863351, 0.83805702402337, 1.05175591812200, 1.10651181867953, 0.91667314897774, 0.81523972568429, 0.92662602742420, 0.90496750685897};
        TsData tsB5_ohneExtremwerte = new TsData(TsFrequency.Monthly, 2003, 0, b5_ohneExtremwerte, false);
        double[] d10_ohneExtremwerte = {0.78654791555148, 0.78777292797879, 1.14781183804650, 0.82673337696463, 0.96026712625782, 1.15958127988271, 0.87175135289481, 0.79083277529233, 1.12179111319910, 0.91113955059241, 0.91741900849971, 1.72494023308239, 0.78654791555148, 0.78777292797879, 1.14781183804650, 0.82673337696463, 0.96026712625782, 1.15958127988271, 0.87338587111043, 0.79231557262030, 1.10139466584084, 0.91284792097517, 0.91913915275388, 1.72817446520887, 0.78802267884397, 0.78924998814770, 1.14947709034203, 0.82758176626206, 0.96125254716291, 1.16077123588880, 0.87428213494376, 0.79312864255400, 1.09021057629027, 0.91378468054955, 0.92008236835612, 1.72994790845094, 0.78883134343342, 0.79005991219528, 1.15053530368549, 0.82825618550471, 0.96203589841746, 1.16171718043434, 0.87499461160690, 0.79377498499440, 1.08131988751426, 0.91452934892834, 0.92083216889467, 1.73135769079003, 0.78947418388605, 0.79070375384253, 1.15108509887433, 0.82837275892725, 0.96217130074738, 1.16188068702822, 0.87511776325776, 0.79388670533932, 1.07978313121518, 0.91465806491994, 0.92096177198052, 1.73160137178535, 0.78958529891209, 0.79081504192515, 1.15114693055223, 0.82834516522788, 0.96213925012122, 1.16184198393708, 0.87508861244828, 0.79386026039549, 1.08014689158524, 0.91462759699424, 0.92093109407375, 1.73154369088364, 0.78955899725123, 0.79078869930066, 1.15106663681002, 0.82825720527278, 0.96203708289819, 1.16171861076727, 0.87499568892040, 0.79377596230842, 1.08130644418408, 0.91453047491792, 0.92083330264442, 1.73135982247746, 0.78947515590483, 0.79070472737519, 1.15215569870558, 0.82991418216914, 0.96396169425039, 1.16404269667422, 0.87674616888209, 0.79536395746507, 1.05946296024549, 0.91636004652720, 0.92267548342856, 1.73482350888654, 0.79105454704716, 0.79228657834704, 1.15475420016735, 0.83199789661047, 0.96638196967928, 1.16696532726603, 0.87894746715211, 0.79736092462130, 1.03199390920935, 0.91866080569415, 0.92499209913509, 1.73917923249784, 0.79304069431271, 0.79427581894618, 1.15821171170307, 0.83489260887781, 0.96974423508159, 1.17102546835793, 0.88200552778650, 0.80013512688720, 0.99383369040512, 0.92185703817815, 0.92821035964689, 1.74523023753034, 0.79579986550255, 0.79703928741902, 1.16070925463681, 0.83558759496402, 0.97055147513067, 1.17200026008378, 0.88273973187844, 0.80080117995122, 0.98467187442265, 0.92262441569257, 0.92898302582954, 1.74668301207813, 0.79646230978347, 0.79770276342663, 1.16237540423234, 0.83729196023964, 0.97253112902020, 1.17439081322068, 0.88454027434160, 0.80243459065766, 0.96220368213509, 0.92450631176908, 0.93087789169448, 1.75024575749373, 0.79808687040681, 0.79932985422889, 1.16437480191359, 0.83846418953855, 0.97389269647537, 1.17603498918917, 0.88577865244015, 0.80355801878345, 0.94675049632457, 0.92580064330115, 0.93218114359486, 1.75269614452079, 0.79920421161751, 0.80044893564746, 1.16657288884050, 0.84045696792765, 0.97620734788572, 1.17883007231916, 0.88788388314425, 0.80546783565363, 0.92048023098100, 0.92800099429718, 0.93439665913012, 1.75686177859681, 0.80110368079134, 0.80235136315771, 1.16909971371530, 0.84210000707759, 0.97620734788572, 1.17883007231916, 0.88788388314425, 0.80546783565363, 0.89882048463140, 0.92800099429718};//, 0.93550441689775, 1.75894459563481, 0.80205341537826, 0.80330257691283, 1.17036312615270, 0.84292152665256, 0.97620734788572, 1.17883007231916, 0.88788388314425, 0.80546783565363, 0.88799061145661, 0.92800099429718};
        TsData tsD10_ohneExtremwerte = new TsData(TsFrequency.Monthly, 2003, 0, d10_ohneExtremwerte, false);

        Assert.assertTrue("B5 is wrong", CompareTsData.compareTS(tsB5_ohneExtremwerte, rslt.getData("b-tables.b5", TsData.class), 0.0000000001));
        Assert.assertTrue("D10 is wrong", CompareTsData.compareTS(tsD10_ohneExtremwerte, rslt.getData("d-tables.d10", TsData.class), 0.0000000001));

    }

    private static final double[] original = {68.3, 78.8, 67.5, 64.9, 71.9, 153.0, 63.2, 59.6, 103.0, 88.3, 68.2, 143.5, 56.0, 91.8, 101.5, 76.0, 58.0, 102.7, 59.2, 65.3, 72.9, 80.3, 68.2, 328.9, 66.4, 91.7, 106.3, 92.2, 90.7, 177.3, 76.4, 82.6, 107.4, 96.6, 99.0, 122.4, 71.9, 74.2, 110.3, 69.1, 68.6, 98.0, 79.6, 125.5, 209.1, 90.6, 87.7, 123.9, 68.5, 88.3, 75.1, 114.5, 97.3, 233.3, 105.4, 77.5, 87.8, 120.7, 121.5, 122.1, 74.6, 82.6, 82.2, 98.3, 74.0, 78.3, 69.2, 86.8, 102.9, 82.1, 74.4, 128.3, 123.8, 49.0, 75.3, 68.1, 133.7, 107.0, 343.9, 93.7, 107.9, 76.7, 68.6, 155.2, 185.5, 58.0, 96.9, 69.2, 75.9, 83.8, 57.8, 56.5, 115.1, 81.8, 139.4, 180.1, 60.1, 105.1, 72.2, 72.9, 499.2, 115.5, 58.1, 76.2, 113.2, 80.5, 113.3, 257.1, 61.4, 65.4, 181.3, 86.3, 67.6, 86.6, 76.5, 65.3, 113.1, 111.8, 111.0, 146.1, 82.8, 123.2, 106.4, 93.7, 72.4, 142.9, 134.1, 125.2, 123.2, 75.0, 108.3, 155.8, 79.6, 73.4, 157.1, 96.0, 94.2, 83.0, 82.6, 79.9, 92.7, 140.7, 77.9, 170.3, 72.2, 95.2, 289.8, 104.9, 86.9, 87.2, 88.0, 95.5, 121.2, 107.2, 147.6, 270.5, 95.1, 87.1, 198.5, 100.8, 115.0, 158.2, 95.6, 134.0, 105.0, 118.0, 118.7, 414.6, 84.3, 118.3, 186.1, 142.3, 109.7, 227.0, 139.8, 113.5, 125.6, 214.7};
    private static final TsData O = new TsData(TsFrequency.Monthly, 2003, 0, original, false);

    private static final double[] original_short = {68.3, 78.8, 67.5, 64.9, 71.9, 153.0, 63.2, 59.6, 103.0, 88.3, 68.2, 143.5, 56.0, 91.8, 101.5, 76.0, 58.0, 102.7, 59.2, 65.3, 72.9, 80.3, 68.2, 328.9, 66.4, 91.7, 106.3, 92.2, 90.7, 177.3, 76.4, 82.6, 107.4, 96.6, 99.0, 122.4, 71.9, 74.2};
    private static final TsData O_Short = new TsData(TsFrequency.Monthly, 2003, 0, original_short, false);

    @Test
    public void mixedFiltersReplaceFilterTest() {

        //author C.Hofer
        X11Specification spec = new X11Specification();
        SeasonalFilterOption[] filters = new SeasonalFilterOption[12];
        filters[0] = SeasonalFilterOption.S3X1;
        filters[1] = SeasonalFilterOption.S3X3;
        filters[2] = SeasonalFilterOption.S3X5;
        filters[3] = SeasonalFilterOption.S3X9;
        filters[4] = SeasonalFilterOption.S3X15;
        filters[5] = SeasonalFilterOption.S3X15;
        filters[6] = SeasonalFilterOption.Stable;
        filters[7] = SeasonalFilterOption.Stable;
        filters[8] = SeasonalFilterOption.S3X9;
        filters[9] = SeasonalFilterOption.S3X15;
        filters[10] = SeasonalFilterOption.S3X15;
        filters[11] = SeasonalFilterOption.S3X15;

        //barriers for the sigma are set so that no outliers are detected
        spec.setSigma(5.5, 6.0);
        spec.setHendersonFilterLength(17);
        spec.setMode(DecompositionMode.Multiplicative);
        spec.setForecastHorizon(0); // set as the default value only to be sure
        spec.setSeasonal(true);
        spec.setSeasonalFilters(filters);
        spec.setCalendarSigma(CalendarSigma.All);
        spec.setExcludefcst(true);
        X11Toolkit toolkit = X11Toolkit.create(spec);

        X11Kernel kernel = new X11Kernel();
        kernel.setToolkit(toolkit);
        X11Results rslt = kernel.process(O);

        double[] b5_ohneExtremwerte = {0.64113291983900, 0.92864009535911, 1.03277860814365, 0.87727209895913, 1.03668417067485, 1.09065541474486, 0.90173285073140, 0.80194669815140, 1.17343737094000, 0.89428835652533, 0.91326027252429, 1.72747081487532, 0.64113291983900, 0.92864009535911, 1.03277860814365, 0.87727209895913, 1.03668417067485, 1.09065541474486, 0.90173285073140, 0.80194669815140, 1.15879662575634, 0.89428835652533, 0.91326027252429, 1.72747081487532, 0.69207946251765, 0.88469468506631, 1.00957275644255, 0.87324683512463, 1.04052054420696, 1.09469151530869, 0.90790323559880, 0.80968881794924, 1.16144018203868, 0.90626299272821, 0.92625080286130, 1.75204295789092, 0.67453435452537, 0.85720211435311, 0.95802754860884, 0.85905629068890, 1.05586063724204, 1.11083023528211, 0.91766583207653, 0.81626731697520, 1.15495355165385, 0.91240515379188, 0.93223218531950, 1.76335699830198, 0.74683798929656, 0.79050003203281, 0.92639502302378, 0.84490924602031, 1.06233565923262, 1.11764235607491, 0.92066769443152, 0.81587180759858, 1.14272056696193, 0.91350696376256, 0.93329836604785, 1.76537372469097, 0.88395096418088, 0.74155308543695, 0.85691920189097, 0.82716591489256, 1.06248569241776, 1.11780020019985, 0.91095032228646, 0.79942968747941, 1.11533875932181, 0.88707805925593, 0.90564019878793, 1.71305711991587, 1.24313505682545, 0.65166657695657, 0.87016929955335, 0.80195511994278, 1.03069321586334, 1.08435256235307, 0.90260854971459, 0.80672591096733, 1.12617136381878, 0.89277926850317, 0.91107979406321, 1.72334634672829, 1.13573708578008, 0.65143121786759, 0.91086037988179, 0.81906084712203, 1.04034047053798, 1.09450206674983, 0.91452655268991, 0.81816040326984, 1.09719745818766, 0.89555779656772, 0.91425114934329, 1.72934510070320, 0.93483549640187, 0.71802594988415, 1.04961162610361, 0.82385457367243, 1.04546782281498, 1.09989635623780, 0.92371118828458, 0.83059906994569, 1.05778781829656, 0.90764155699470, 0.92709355655940, 1.75363706250862, 0.61961678805035, 0.79461448110041, 1.22493059592952, 0.82312880004535, 1.06030825581134, 1.11550940316424, 0.92043243062547, 0.81307600569426, 0.97867646983960, 0.88447106546036, 0.90338292680668, 1.70878739354523, 0.69720864053797, 0.83915042427142, 1.40546190429925, 0.78801326966605, 1.02952377758666, 1.08312224146581, 0.89680355231323, 0.79842453281453, 0.95638978134409, 0.87894143868788, 0.89705576647706, 1.69681929952069, 0.70540856299320, 0.79466038034984, 1.51159312245492, 0.78995164242450, 1.02294288840792, 1.07619874188932, 0.89231103264330, 0.79506712454444, 0.93319010706025, 0.87733280420031, 0.89482597889252, 1.69260156106041, 0.68355901145528, 0.76791657437719, 1.57971638905630, 0.81032625130284, 1.01987187234749, 1.07296784438955, 0.89140491208720, 0.79685736174246, 0.92434954105145, 0.88453594949369, 0.90230168300575, 1.70674217471105, 0.62091453648689, 0.71897566196375, 1.61151546773546, 0.83662626453569, 1.02865644254965, 1.08220975174013, 0.89723999126956, 0.79873851864871, 0.90597810144831, 0.88240603374531, 0.90230168300575, 1.70674217471105, 0.60126311382751, 0.71308064424497, 1.66240223073865, 0.84445721237492, 1.02865644254965, 1.08220975174013, 0.89723999126956, 0.79873851864871, 0.90597810144831, 0.88240603374531};
        TsData tsB5_ohneExtremwerte = new TsData(TsFrequency.Monthly, 2003, 0, b5_ohneExtremwerte, false);

        Assert.assertTrue("B5 is wrong", CompareTsData.compareTS(tsB5_ohneExtremwerte, rslt.getData("b-tables.b5", TsData.class), 0.0000000001));

    }

    @Test
    public void mixedFiltersReplaceFilterTestShort() {

        //author C.Hofer
        X11Specification spec = new X11Specification();
        SeasonalFilterOption[] filters = new SeasonalFilterOption[12];
        filters[0] = SeasonalFilterOption.S3X1;
        filters[1] = SeasonalFilterOption.S3X3;
        filters[2] = SeasonalFilterOption.S3X5;
        filters[3] = SeasonalFilterOption.S3X9;
        filters[4] = SeasonalFilterOption.S3X15;
        filters[5] = SeasonalFilterOption.S3X15;
        filters[6] = SeasonalFilterOption.Stable;
        filters[7] = SeasonalFilterOption.Stable;
        filters[8] = SeasonalFilterOption.S3X9;
        filters[9] = SeasonalFilterOption.S3X15;
        filters[10] = SeasonalFilterOption.S3X15;
        filters[11] = SeasonalFilterOption.S3X15;

        //barriers for the sigma are set so that no outliers are detected
        spec.setSigma(5.5, 6.0);
        spec.setHendersonFilterLength(17);
        spec.setMode(DecompositionMode.Multiplicative);
        spec.setForecastHorizon(0); // set as the default value only to be sure
        spec.setSeasonal(true);
        spec.setSeasonalFilters(filters);
        spec.setCalendarSigma(CalendarSigma.All);
        spec.setExcludefcst(true);
        X11Toolkit toolkit = X11Toolkit.create(spec);

        X11Kernel kernel = new X11Kernel();
        kernel.setToolkit(toolkit);
        X11Results rslt = kernel.process(O_Short);

        double[] b5_ohneExtremwerte = {0.63250169640011, 0.95289422860580, 1.07379700796264, 0.86089864007573, 0.73982000764669, 1.37707686380964, 0.69683234101267, 0.72424613263208, 0.95519600321747, 0.89503057196594, 0.71592438084441, 2.37578212582682, 0.63250169640011, 0.95289422860580, 1.07379700796264, 0.86089864007573, 0.73982000764669, 1.37707686380964, 0.69683234101267, 0.72424613263208, 0.95519600321747, 0.89503057196594, 0.71592438084441, 2.37578212582682, 0.63250169640011, 0.95289422860580, 1.07379700796264, 0.86089864007573, 0.73982000764669, 1.37707686380964, 0.69683234101267, 0.72424613263208, 0.95519600321747, 0.89503057196594, 0.71592438084441, 2.37578212582682, 0.63250169640011, 0.95289422860580};
        TsData tsB5_ohneExtremwerte = new TsData(TsFrequency.Monthly, 2003, 0, b5_ohneExtremwerte, false);

        Assert.assertTrue("B5 is wrong", CompareTsData.compareTS(tsB5_ohneExtremwerte, rslt.getData("b-tables.b5", TsData.class), 0.0000000001));

    }

    @Ignore
    @Test
    public void mixedFiltersReplaceFilterTestWithX11Default() {
//x11default uses for the initial 3x3 until the final where 3x5 is used

        //author C.Hofer
        X11Specification spec = new X11Specification();
        SeasonalFilterOption[] filters = new SeasonalFilterOption[12];
        filters[0] = SeasonalFilterOption.S3X1;
        filters[1] = SeasonalFilterOption.S3X3;
        filters[2] = SeasonalFilterOption.S3X5;
        filters[3] = SeasonalFilterOption.S3X9;
        filters[4] = SeasonalFilterOption.S3X15;
        filters[5] = SeasonalFilterOption.S3X15;
        filters[6] = SeasonalFilterOption.Stable;
        filters[7] = SeasonalFilterOption.X11Default;
        filters[8] = SeasonalFilterOption.S3X9;
        filters[9] = SeasonalFilterOption.S3X15;
        filters[10] = SeasonalFilterOption.S3X15;
        filters[11] = SeasonalFilterOption.S3X15;

        //barriers for the sigma are set so that no outliers are detected
        spec.setSigma(5.5, 6.0);
        spec.setHendersonFilterLength(17);
        spec.setMode(DecompositionMode.Multiplicative);
        spec.setForecastHorizon(0); // set as the default value only to be sure
        spec.setSeasonal(true);
        spec.setSeasonalFilters(filters);
        spec.setCalendarSigma(CalendarSigma.All);
        spec.setExcludefcst(true);
        X11Toolkit toolkit = X11Toolkit.create(spec);

        X11Kernel kernel = new X11Kernel();
        kernel.setToolkit(toolkit);
        X11Results rslt = kernel.process(O);

        double[] b5_ohneExtremwerte = {0.64628950199272, 0.93334668956027, 1.03496052716340, 0.87912685153490, 1.03887595659635, 1.09296130814119, 0.90363550378423, 0.71231428874490, 1.18287523634710, 0.89618394773433, 0.91519666511158, 1.73113358416610, 0.64628950199272, 0.93334668956027, 1.03496052716340, 0.87912685153490, 1.03887595659635, 1.09296130814119, 0.90363550378423, 0.77831902130834, 1.16124934170054, 0.89618394773433, 0.91519666511158, 1.73113358416610, 0.69354688377899, 0.88380289641796, 1.00541475883565, 0.86964882192014, 1.03623331806767, 1.09018109011332, 0.90415822856643, 0.85597570802581, 1.15661501056120, 0.90248341193874, 0.92238353045999, 1.74472784695550, 0.67171804593494, 0.85068886744104, 0.94748429613743, 0.84959596900122, 1.04423301586969, 1.09859726349660, 0.90758814906185, 0.93910711292938, 1.14221052432902, 0.90231461028430, 0.92191412953177, 1.74383995504958, 0.73857189833842, 0.78279064367314, 0.91857836294982, 0.83777654730975, 1.05336745321230, 1.10820725256576, 0.91293894877069, 0.90942733463149, 1.13311452549585, 0.90579988102158, 0.92541849612667, 1.75046861415085, 0.87648773605593, 0.73671618977651, 0.85298178049663, 0.82336517886520, 1.05760368800121, 1.11266403172893, 0.90683243632981, 0.84939406615998, 1.11035734622251, 0.88312241846577, 0.90160170904118, 1.70541814405808, 1.23759158803118, 0.65166339574463, 0.87407540653532, 0.80555450915115, 1.03531924286419, 1.08921942686200, 0.90667914554621, 0.75599400666421, 1.13126919157774, 0.89681323739716, 0.91519480379318, 1.73113006340283, 1.14086678922551, 0.65626672064646, 0.92029865616755, 0.82756098016732, 1.05113702178694, 1.10586070172599, 0.92409994692383, 0.70040490530184, 1.10865466637650, 0.90485613518035, 0.92374327492562, 1.74729986169296, 0.94454133700928, 0.72550302389733, 1.06059898793681, 0.83249830027324, 1.05643667377380, 1.11143626109038, 0.93353715437568, 0.71045439449033, 1.06905680539701, 0.91725085073756, 0.93691390023145, 1.77221266203472, 0.62618014917024, 0.80071073002611, 1.23078482583542, 0.82707190321700, 1.06538753969278, 1.12085312174799, 0.92482394351294, 0.76006239239252, 0.98325976291469, 0.88857805808967, 0.90757970319273, 1.71672577534238, 0.70044760894432, 0.83989174877611, 1.40145319379104, 0.78576446066665, 1.02658575303143, 1.08003125919710, 0.89424568252123, 0.83040793227582, 0.95366780549054, 0.87645261479905, 0.89451638472060, 1.69201595046008, 0.70341169534834, 0.79215932321684, 1.50635305990770, 0.78721089698989, 1.01939377742352, 1.07246485916769, 0.88921255392887, 0.83404834070293, 0.92995002990788, 0.87429868675539, 0.89173428342885, 1.68675348703086, 0.68119726029392, 0.76564566583054, 1.57582976406909, 0.80833141087243, 1.01736117786915, 1.07032643960589, 0.88920426649134, 0.82465732107965, 0.92205228727372, 0.88234108828779, 0.90006453377693, 1.70251051138618, 0.61937505307173, 0.71782398110389, 1.61034991863499, 0.83602073052022, 1.02791192078097, 1.08142646911522, 0.89659007987196, 0.80686003906387, 0.90532258638955, 0.88176930190169, 0.90006453377693, 1.70251051138618, 0.60082925077996, 0.71256609523250, 1.66120266455625, 0.84384786386966, 1.02791192078097, 1.08142646911522, 0.89659007987196, 0.80686003906387, 0.90532258638955, 0.88176930190169};
        TsData tsB5_ohneExtremwerte = new TsData(TsFrequency.Monthly, 2003, 0, b5_ohneExtremwerte, false);

        Assert.assertTrue("B5 is wrong", CompareTsData.compareTS(tsB5_ohneExtremwerte, rslt.getData("b-tables.b5", TsData.class), 0.0000000001));

    }

    @Test
    public void X11Default() {
        //author C.Hofer
        X11Specification spec = new X11Specification();
        spec.setSeasonalFilter(SeasonalFilterOption.X11Default);
        //barriers for the sigma are set so that no outliers are detected
        spec.setSigma(5.5, 6.0);
        spec.setHendersonFilterLength(17);
        spec.setMode(DecompositionMode.Multiplicative);
        spec.setForecastHorizon(0); // set as the default value only to be sure
        spec.setSeasonal(true);
        spec.setCalendarSigma(CalendarSigma.All);
        spec.setExcludefcst(true);
        X11Toolkit toolkit = X11Toolkit.create(spec);

        X11Kernel kernel = new X11Kernel();
        kernel.setToolkit(toolkit);
        X11Results rslt = kernel.process(O);

        double[] b5_ohneExtremwerte = {0.67646179446387, 0.94132633756544, 1.09301803640709, 0.83084052348320, 0.73081301010650, 1.31273519084071, 0.69930719504853, 0.71877756446916, 0.99649210133073, 0.92760324650735, 0.78675317496045, 2.22372358612934, 0.67646179446387, 0.94132633756544, 1.09301803640709, 0.83084052348320, 0.73081301010650, 1.31273519084071, 0.70674899115861, 0.78701976782701, 1.10726998039849, 0.92511517629713, 0.81927324083686, 2.07681941884194, 0.67419569153933, 0.88424944710472, 1.02674388331732, 0.82445290550478, 0.73546720318586, 1.37929909409974, 0.75760961480527, 0.86110507198071, 1.22191206631394, 0.95053578326207, 0.89749118344544, 1.71851652174629, 0.70090744566051, 0.84620427070744, 0.96694506503617, 0.85898011696885, 0.76089756911830, 1.38025353861820, 0.80273364317458, 0.93988753241255, 1.34174060984312, 0.97334179366483, 0.93841743379024, 1.44918336812712, 0.74784437198596, 0.76056627277098, 0.84591198272912, 0.90166055289777, 0.84891403623190, 1.41412557054654, 1.07519382863396, 0.90014503061510, 1.20606887883826, 0.95663334646662, 0.92737659216873, 1.26714172855160, 0.95491749677687, 0.72477538762729, 0.84219052232078, 0.90007357514181, 0.91698969509801, 1.20084183336765, 1.27705325102418, 0.86146484466276, 1.14385363542816, 0.91361476052896, 0.89880190469272, 1.30468250617531, 1.07741793055084, 0.65093869014422, 0.78979300679583, 0.79437995347180, 1.29901554587761, 1.04179979218986, 1.42548338708337, 0.75155812400016, 1.00614133021936, 0.79707173418213, 0.87429684826960, 1.44113821905245, 1.10806283207422, 0.66319557064099, 0.92896529960584, 0.72813287413585, 1.56289576327399, 0.88010246331891, 1.11829005165960, 0.69064404554777, 1.05534950380177, 0.79740393529630, 0.96729855136857, 1.59172091857477, 0.88487872476374, 0.71590994555558, 0.98071818112928, 0.69279198845244, 1.80061979993525, 0.90698979477997, 0.89896992751693, 0.67984949457570, 1.00853968138777, 0.76284592727340, 0.99226918259427, 1.75127472657901, 0.75356513292618, 0.78873693251611, 1.20700601833764, 0.76904048147184, 1.39305554716292, 0.94496037402616, 0.78288517072895, 0.75382615923611, 1.03491589293138, 0.87687275437719, 1.00387559744417, 1.67176913286830, 0.68051896436147, 0.84514213840322, 1.37407532117480, 0.82591396531567, 1.06574524612501, 0.97053468178954, 0.87462920136023, 0.84061863831930, 1.00108564748610, 0.88908289520399, 0.94278925715707, 1.62671919329315, 0.71095863553352, 0.81442701974319, 1.65169030009917, 0.88179676794741, 0.78571942940147, 0.93602989681839, 0.84670475165542, 0.85130510386798, 0.94884310814720, 0.96223667625787, 0.91212420163514, 1.72995306702941, 0.68206252278350, 0.78759152436214, 1.74676962616008, 0.87577487904427, 0.81492612484966, 0.90658181674255, 0.75604370635179, 0.83128507174978, 0.88241764721416, 0.92332420578710, 0.93036837613895, 2.03351495737980, 0.65617049602695, 0.73554383580059, 1.68670039685166, 0.85493927969846, 0.83045937006865, 0.90290761895095, 0.69182627199544, 0.81481873146548, 0.84128410050402, 0.91633350321336, 0.94288128689312, 2.27029128744771, 0.63623397297248, 0.73143452502966, 1.55407262734905, 0.83689531917394, 0.83045937006865, 0.90290761895095, 0.69182627199544, 0.81481873146548, 0.84128410050402, 0.91633350321336};
        TsData tsB5_ohneExtremwerte = new TsData(TsFrequency.Monthly, 2003, 0, b5_ohneExtremwerte, false);

        Assert.assertTrue("B5 is wrong", CompareTsData.compareTS(tsB5_ohneExtremwerte, rslt.getData("b-tables.b5", TsData.class), 0.0000000001));

    }

}
