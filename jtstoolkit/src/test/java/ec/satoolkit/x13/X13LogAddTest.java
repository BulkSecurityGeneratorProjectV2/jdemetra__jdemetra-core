/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.satoolkit.x13;

import ec.satoolkit.DecompositionMode;
import ec.satoolkit.DefaultSeriesDecomposition;
import ec.satoolkit.algorithm.implementation.X13ProcessingFactory;
import ec.tstoolkit.MetaData;
import ec.tstoolkit.algorithm.CompositeResults;
import ec.tstoolkit.algorithm.SequentialProcessing;
import ec.tstoolkit.modelling.ComponentInformation;
import ec.tstoolkit.modelling.ComponentType;
import ec.tstoolkit.modelling.DefaultTransformationType;
import ec.tstoolkit.timeseries.simplets.TsData;
import ec.tstoolkit.timeseries.simplets.TsFrequency;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;
import utilities.CompareTsData;

/**
 *
 * @author Christiane Hofer
 */
public class X13LogAddTest {

    @Test
    public void SeasonallyAdjustedTestLogAdd() {
        X13Specification x13spec = getX13Spec(DecompositionMode.LogAdditive);
        SequentialProcessing<TsData> processing = X13ProcessingFactory.instance.generateProcessing(x13spec);
        CompositeResults comprest = processing.process(TsdUEMPLOMENSEASONAL);
        //  utilities.WriteOutPutTest.writeAllToOutput(comprest, "LogAdd");

        Assert.assertTrue("D1", CompareTsData.compareTS(TsD1, comprest.getData("d-tables.d1", TsData.class), 0.000000001));
        Assert.assertTrue("D11", CompareTsData.compareTS(TsD11, comprest.getData("d-tables.d11", TsData.class), 0.000000001));
        Assert.assertTrue("D11a", CompareTsData.compareTS(TsD11a, comprest.getData("d-tables.d11a", TsData.class), 0.000000001));
        Assert.assertTrue("A6", CompareTsData.compareTS(tsA6, comprest.getData("a-tables.a6", TsData.class), 0.000000001));
        Assert.assertTrue("D10", CompareTsData.compareTS(tsD10, comprest.getData("d-tables.d10", TsData.class), 0.000000001));
        Assert.assertTrue("D10a", CompareTsData.compareTS(tsD10a, comprest.getData("d-tables.d10a", TsData.class), 0.000000001));
        Assert.assertTrue("D12", CompareTsData.compareTS(tsD12, comprest.getData("d-tables.d12", TsData.class), 0.000000001));
        Assert.assertTrue("D13", CompareTsData.compareTS(tsD13, comprest.getData("d-tables.d13", TsData.class), 0.000000001));
        double[] aLogAdda1 = {0.9180562, 1.0272757, 1.0668658, 0.9787514, 0.9313836, 1.0250405, 1.0650804, 0.9747613, 0.9418502, 1.0156112, 1.0654049, 0.9738503, 0.9504815, 1.010104, 1.0645658, 0.9699722, 0.9592689, 1.0082833, 1.0642167, 0.9640116, 0.965041, 1.0076595, 1.0648469, 0.9615725, 0.9678711, 10.0034218, 1.066394, 0.9605819, 0.9743569, 0.996285, 1.0674977, 0.9616944, 0.9799257, 0.9869897, 1.0695324, 0.9633976, 0.9840746, 0.9803236, 1.0720522, 0.9668027, 0.9761973, 0.9852996, 1.0730376, 0.9667407, 0.9710266, 0.9903273, 1.0730635, 0.967825, 0.9660222, 0.992547, 1.0727041, 0.9699537, 0.964653, 0.9927414, 1.072418, 0.9711013, 0.9627251, 0.9940281, 1.0721618, 0.9717765, 0.9603546, 0.9962908, 1.0715377, 0.9748881, 0.9546215, 0.9984903, 1.0715511, 0.9792769, 0.9477065, 1.000862, 1.0715326, 0.9832773, 0.942155, 1.003048, 1.0724468, 0.983362, 0.9407448, 1.0021712, 1.0738647, 0.9849541, 0.9379978, 1.002259, 1.0755799, 0.9857489, 0.9344911, 1.0034349, 1.0764464, 0.986686, 0.9328302, 1.0034421, 1.076927, 0.9878056, 0.9318523, 1.0025105, 1.077559, 0.9893451, 0.9308975, 1.000813, 1.0781244, 0.9907408, 0.9303614, 1.0008349, 1.0780044, 0.989879, 0.9316045, 1.0010713, 1.077419, 0.9894252, 0.9319111, 1.001701, 1.0762305, 0.9898486, 0.9325315, 1.0023491, 1.0752361, 0.9884643, 0.9347162, 1.0023267, 1.0739461, 0.9876701, 0.9378643, 1.0009766, 1.0735102, 0.9861014, 0.9406324, 0.999855, 1.0730103, 0.9865699, 0.9411618, 0.9989676, 1.0728322, 0.9869915, 0.9418439, 0.9982591, 1.072555, 0.9861752, 0.9438692, 0.998087, 1.0721105, 0.9846667, 0.9457213, 0.9979742, 1.0716681, 0.9834916, 0.9478989, 0.9970811, 1.0713196, 0.983102, 0.9502612, 0.9942578, 1.0710793, 0.985063, 0.9511854, 0.9914698, 1.0707433, 0.9874407, 0.9515542, 0.9900275, 1.070696, 0.9845132, 0.9548301, 0.9932408, 1.0691118, 0.977684, 0.9601211, 0.9968435, 1.0677422, 0.9696101, 0.9651861, 1.0007962, 1.065838, 0.9700529, 0.9625211, 0.9996584, 1.0667989, 0.9738917, 0.9600908, 0.996862, 1.0680945, 0.977864, 0.9575264, 0.9946873, 1.070673, 0.9772387, 0.9537045, 1.0004651, 1.0713684, 0.974299, 0.9493839, 1.0071895, 1.0722726, 0.9697757, 0.946103, 1.0144437, 1.0720051, 0.9700858, 0.9426046, 1.0120981, 1.0744092, 0.9738236, 0.939198, 1.0102382, 1.0757456, 0.9792007, 0.9355581, 1.0059027, 1.0780573, 0.9789557, 0.9381395, 1.0058429, 1.0776412, 0.9771881, 0.9388107, 1.0076234, 1.0778313, 0.9752792, 0.9391388, 1.0061087, 1.0754564, 0.9793699, 0.9439685, 1.0006578, 1.0737004, 0.9810835, 0.9492386, 0.994066, 1.0730588, 0.9855865, 0.950731, 0.9875736, 1.0734068, 0.9896219, 0.9502576, 0.9861444, 1.0712624, 0.9920906, 0.9516965, 0.9867609};
        TsData LogAdda1 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda1, false);
        Assert.assertTrue("LogAdda1", CompareTsData.compareTS(LogAdda1, comprest.getData("a-tables.a1", TsData.class), 0.000000001));
        double[] aLogAdda1a = {1.0549901478366122, 0.9628795468360084, 0.9311676558782668, 1.0432940541125446, 1.0545304611823807, 0.9632666040117844, 0.9318358047776164, 0.9827890394511601, 1.0542639756625913, 0.9634661709946413, 0.9324497802289448, 0.9822853188140847};
        TsData LogAdda1a = new TsData(TsFrequency.Monthly, 2010, 10, aLogAdda1a, false);
        Assert.assertTrue("LogAdda1a", CompareTsData.compareTS(LogAdda1a, comprest.getData("a-tables.a1a", TsData.class), 0.000000001));
        double[] aLogAdda6 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData LogAdda6 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda6, false);
        Assert.assertTrue("LogAdda6", CompareTsData.compareTS(LogAdda6, comprest.getData("a-tables.a6", TsData.class), 0.000000001));
        double[] aLogAdda7 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData LogAdda7 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda7, false);
        Assert.assertTrue("LogAdda7", CompareTsData.compareTS(LogAdda7, comprest.getData("a-tables.a7", TsData.class), 0.000000001));
        double[] aLogAdda8 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData LogAdda8 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda8, false);
        Assert.assertTrue("LogAdda8", CompareTsData.compareTS(LogAdda8, comprest.getData("a-tables.a8", TsData.class), 0.000000001));
        double[] aLogAdda8t = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData LogAdda8t = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda8t, false);
        Assert.assertTrue("LogAdda8t", CompareTsData.compareTS(LogAdda8t, comprest.getData("a-tables.a8t", TsData.class), 0.000000001));
        double[] aLogAdda8s = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData LogAdda8s = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda8s, false);
        Assert.assertTrue("LogAdda8s", CompareTsData.compareTS(LogAdda8s, comprest.getData("a-tables.a8s", TsData.class), 0.000000001));
        double[] aLogAdda8i = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData LogAdda8i = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda8i, false);
        Assert.assertTrue("LogAdda8i", CompareTsData.compareTS(LogAdda8i, comprest.getData("a-tables.a8i", TsData.class), 0.000000001));
        double[] aLogAdda9 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData LogAdda9 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda9, false);
        Assert.assertTrue("LogAdda9", CompareTsData.compareTS(LogAdda9, comprest.getData("a-tables.a9", TsData.class), 0.000000001));
        double[] aLogAdda9sa = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData LogAdda9sa = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda9sa, false);
        Assert.assertTrue("LogAdda9sa", CompareTsData.compareTS(LogAdda9sa, comprest.getData("a-tables.a9sa", TsData.class), 0.000000001));
        double[] aLogAdda9u = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData LogAdda9u = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda9u, false);
        Assert.assertTrue("LogAdda9u", CompareTsData.compareTS(LogAdda9u, comprest.getData("a-tables.a9u", TsData.class), 0.000000001));
        double[] aLogAdda9ser = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData LogAdda9ser = new TsData(TsFrequency.Monthly, 1991, 0, aLogAdda9ser, false);
        Assert.assertTrue("LogAdda9ser", CompareTsData.compareTS(LogAdda9ser, comprest.getData("a-tables.a9ser", TsData.class), 0.000000001));
        double[] aLogAddd1 = {0.9180562, 1.0272757, 1.0668658, 0.9787514, 0.9313836, 1.0250405, 1.0650804, 0.9747613, 0.9418502, 1.0156112, 1.0654049, 0.9738503, 0.9504815, 1.010104, 1.0645658, 0.9699722, 0.9592689, 1.0082833, 1.0642167, 0.9640116, 0.965041, 1.0076595, 1.0648469, 1.3062221484707337, 1.4558133961436337, 1.5705480761702766, 1.606004249070428, 1.3088970410766605, 0.9743569, 0.996285, 1.0674977, 0.9616944, 0.9799257, 0.9869897, 1.0695324, 0.9633976, 0.9840746, 0.9803236, 1.0720522, 0.9668027, 0.9761973, 0.9852996, 1.0730376, 0.9667407, 0.9710266, 0.9903273, 1.0730635, 0.967825, 0.9660222, 0.992547, 1.0727041, 0.9699537, 0.964653, 0.9927414, 1.072418, 0.9711013, 0.9627251, 0.9940281, 1.0721618, 0.9717765, 0.9603546, 1.0037229211125491, 1.0730570465006142, 0.9748881, 0.9546215, 0.9984903, 1.0715511, 0.9792769, 0.9477065, 1.000862, 1.0715326, 0.9832773, 0.9425095449776885, 1.003048, 1.0724468, 0.983362, 0.9407448, 1.0021712, 1.0738647, 0.9849541, 0.9379978, 1.002259, 1.0755799, 0.9857489, 0.9349253905037295, 1.0034349, 1.0764464, 0.986686, 0.9328302, 1.0034421, 1.076927, 0.9878056, 0.9318523, 1.0025105, 1.077559, 0.9893451, 0.9383124094990566, 1.000813, 1.0781244, 0.9907408, 0.9366304329343296, 1.0008349, 1.0780044, 0.989879, 0.9316045, 1.0010713, 1.077419, 0.9894252, 0.935786514051013, 1.001701, 1.0762305, 0.9898486, 0.9364374287941513, 1.0023491, 1.0752361, 0.9884643, 0.9347162, 1.0023267, 1.0739461, 0.9876701, 0.9378643, 1.0009766, 1.0735102, 0.9861014, 0.9406324, 0.999855, 1.0730103, 0.9865699, 0.9411618, 0.9989676, 1.0728322, 0.9869915, 0.9418439, 0.9982591, 1.072555, 0.9861752, 0.9438692, 0.998087, 1.0721105, 0.9846667, 0.9457213, 0.9979742, 1.0716681, 0.9834916, 0.9478989, 0.9970811, 1.0713196, 0.983102, 0.9502612, 0.9942578, 1.0710793, 0.985063, 0.9511854, 0.9950874390172539, 1.0707433, 0.9874407, 0.9515542, 0.9943460156028964, 1.070696, 0.9845132, 0.9548301, 0.9932408, 1.0691118, 0.977684, 0.9469506890990116, 0.9968435, 1.0677422, 0.9757653725049837, 0.9484425143206119, 1.0007962, 1.065838, 0.970148342377513, 0.9489815779776826, 0.9996584, 1.0667989, 0.9738917, 0.947044980185902, 0.996862, 1.0680945, 0.977864, 0.9554317136356694, 0.9946873, 1.070673, 0.9772387, 0.9537045, 1.0004651, 1.0713684, 0.974299, 0.9493839, 1.0071895, 1.0722726, 0.9697757, 0.946103, 0.9998089408613022, 1.0720051, 0.9700858, 0.9426046, 1.0054560894464721, 1.0744092, 0.9738236, 0.939198, 1.0102382, 1.0757456, 0.9792007, 0.9380092803283837, 1.0059027, 1.0780573, 0.9789557, 0.9381395, 1.0058429, 1.0776412, 0.9771881, 0.9388107, 1.0076234, 1.0778313, 0.9752792, 0.9391388, 1.0061087, 1.0754564, 0.9793699, 0.9439685, 1.0006578, 1.0737004, 0.9810835, 0.9492386, 0.994066, 1.0730588, 0.9855865, 0.950731, 1.0101194353501508, 1.0734068, 0.9880979508804814, 0.9502576, 1.0034551606969333, 1.0712624, 0.981869659109636, 0.9516965, 0.9867609};
        TsData LogAddd1 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd1, false);
        Assert.assertTrue("LogAddd1", CompareTsData.compareTS(LogAddd1, comprest.getData("d-tables.d1", TsData.class), 0.000000001));
        double[] aLogAddd2 = {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, -0.0012007667229623764, -4.568901131017705E-4, -0.0012491911792156174, -0.0017145428926237313, -8.607952706368304E-4, -3.1840914235988275E-4, -0.001039000639431173, -0.0015348567416023436, -9.833960695856624E-4, -2.973933562880393E-4, -6.467335867235699E-4, 0.011566304591052652, 0.041565811185408696, 0.07772092434997155, 0.11324399103597468, 0.1428629469382072, 0.15599956896684317, 0.15615103281283224, 0.15578049849849546, 0.15580848503608533, 0.15634596694972688, 0.156120140897661, 0.15543949591525402, 0.14293792591223936, 0.11393598665839867, 0.07798117163123464, 0.041503183503720904, 0.012039842986691814, -5.042658732999777E-4, -8.876221181930203E-4, -0.001133930886910453, -7.001902484709134E-4, -8.622447571387613E-4, -0.001101703060195401, -8.237035188988608E-4, -4.953209793783333E-4, -0.0010757296909924552, -0.0013308649621941325, -7.892171865674499E-4, -6.283089320735539E-4, -9.884076648389592E-4, -0.0011705666912671356, -8.811143222928058E-4, -7.176607908667833E-4, -8.878889450190277E-4, -0.0010902211151345015, -9.698326296431721E-4, -8.350869518033036E-4, -9.104898732704885E-4, -6.891275183939557E-4, -2.08882039762698E-4, 1.6256614239828788E-5, -2.0787536736747905E-4, -4.0284592034148535E-4, -1.959482538386294E-4, 1.1967536330491227E-4, -1.8613296592678678E-4, -5.557838820294855E-4, -2.9476688992057486E-4, 1.709961206690742E-4, -1.2030423138207486E-4, -9.298537572183933E-4, -9.815831208988077E-4, -6.446765874490675E-4, -8.941935576347103E-4, -0.001350999298895848, -0.0011078129386604702, -7.770885853606282E-4, -9.652824455749593E-4, -0.0013362169443764914, -0.0011210160489239542, -8.593294343070251E-4, -0.0010913642614679819, -0.00141193371047917, -0.0012407616824365326, -9.450525573264002E-4, -0.0011564763476942632, -0.0014557000167309733, -0.001284243863047447, -0.0010451405022248966, -0.0011985739065150294, -0.001462006247852029, -0.0013749545167210933, -0.0011466256789094138, -8.442183833434072E-4, -8.025567850533735E-4, -8.466703429019428E-4, -6.10890667792398E-4, -2.706118521108303E-4, -2.0961349260755898E-4, -2.763509409864622E-4, -1.4732030393167425E-4, -7.103535192260271E-5, -1.4197638216147373E-4, -2.0724967851973482E-4, -2.0929019307947602E-4, -3.1823295000978427E-4, -3.93595462280714E-4, -4.2990051825886333E-4, -5.406984590508054E-4, -5.868246023526084E-4, -5.324200162711676E-4, -5.765656506912659E-4, -7.432937983423938E-4, -6.639438566636022E-4, -4.727831790865943E-4, -5.550867912299225E-4, -7.635864117996546E-4, -7.451502242132374E-4, -6.828806264767715E-4, -8.184743643318481E-4, -0.0010819590008431077, -0.0010537549932428825, -9.71323594903308E-4, -0.0011614718535079664, -0.0013277447548072862, -0.0011213377287450123, -9.748716860403215E-4, -0.0011579830141729575, -0.0012298600484817032, -0.0010820695111436757, -0.001018913677927538, -0.0011692773416446577, -0.0012032502579801324, -0.0010569994421235182, -9.87609417149131E-4, -0.0010963072825752838, -0.001211719716023536, -0.001090808216773711, -9.308946415167833E-4, -0.0010175855733617857, -0.0012108352200952376, -0.0010918364354006145, -8.740218421811954E-4, -9.712403454160438E-4, -0.0011493087038165167, -9.981358181629808E-4, -8.77078349230595E-4, -0.0010773375873064806, -0.0011006673280360662, -8.438560904807245E-4, -7.245116366380077E-4, -8.811840895856706E-4, -7.501832075764473E-4, -4.22843862663821E-4, -3.7692984470740935E-4, -5.156429997698149E-4, -4.801358450928643E-4, -2.2051285420824664E-4, -6.329920062760248E-5, -1.8254996788521528E-4, -5.724545702019931E-4, -0.0010716655751536802, -0.0011841155759760432, -0.0012275980569941402, -0.0018401413242957769, -0.0024722142848103736, -0.0023392790902340282, -0.0022593477658645247, -0.003061259257832004, -0.003929690434030169, -0.003917338101335666, -0.003739223084654736, -0.0039913952112283265, -0.004149179982686894, -0.004144258031133824, -0.0041297391750655535, -0.004026475228871944, -0.0036310354594420047, -0.0035802284544205597, -0.003646756257428197, -0.003154755009162052, -0.0026444866712855572, -0.002404022551018847, -0.0021923193035634503, -0.001996804334254017, -0.001876604757681814, -0.0013443809710281974, -7.52263712829348E-4, -9.356675386059446E-4, -0.0016905694259168906, -0.0018854055383541277, -0.0016196062648286885, -0.0018738988885457096, -0.002667790588330589, -0.0029482369802538463, -0.0026228000537910304, -0.0025250434055796448, -0.0029948345696230666, -0.0033183580036700187, -0.0030576893757741797, -0.002519960201851529, -0.002474951074246933, -0.002579750041295466, -0.002091990471550488, -0.001478170679029308, -0.0012967692585460593, -0.001478585859185849, -0.0013374072368865196, -0.0010685475438479996, -9.420256651301159E-4, -0.0010671970843810492, -0.0010944759063668272, -0.0011809706343843005, -0.0012980287691553918, -0.0012393532430913779, -0.0013314667943805335, -0.0014144868360669227, -0.001138772137870816, -0.0010960294046445742, -0.001464024871681925, -0.0014509068292208015, -8.248760113308065E-4, -9.290358758971335E-4, -0.0016783637853612105, -0.0014252220559323875, -4.760144000680805E-4, 2.0091628444847366E-4, 2.87201504634277E-4, 5.774020812145877E-4, 0.0012237661018390696, 0.0016167632012824718, 0.001638362689725884, 0.0015770194592132846, 0.0017181439686766494, 0.0015185668806364304, 5.403725249169119E-4, -0.0011016856075181669, -0.0029392019598932975, -0.004408390654120616, -0.005750499705128396, -0.007550229744129283};
        TsData LogAddd2 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd2, false);
        Assert.assertTrue("LogAddd2", CompareTsData.compareTS(LogAddd2, comprest.getData("d-tables.d2", TsData.class).log(), 0.000000001));
        double[] aLogAddd4 = {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0.0642510559926474, -0.02510576835744249, -0.058659849226677455, 0.017205141643967702, 0.06421570997238603, -0.026179274108260476, -0.049747580043931844, 0.011588152590722885, 0.06355041256840806, -0.030190474332934727, -0.04093711356956612, -0.0033171228421730314, 0.020673224410593015, -0.11437287559894058, -0.14882868253504264, -0.13523263197454538, -0.09316853600786454, 0.11098808194594731, 0.21978428107328668, 0.2956161665073985, 0.31740329431880765, 0.11306468829698471, -0.18141711126814936, -0.14665984366301676, -0.048618675106821815, -0.11703972193362185, -0.06178171002197391, -0.025135518253426383, 0.06772580948490746, -0.03640145384800781, -0.014919640908503933, -0.019172367492785416, 0.07043700025008388, -0.03265913437826756, -0.023266857840690797, -0.014314200642137762, 0.07156923466408964, -0.03249410343916447, -0.028612199440742548, -0.009091475498963324, 0.07150604943186563, -0.03153342648186013, -0.03368734934493412, -0.006763251587417243, 0.07107054569003227, -0.029416719467543095, -0.03501699517210158, -0.006449984861833928, 0.07082640189387271, -0.02863536317624516, -0.03777848799392064, -0.0060060597216747506, 0.06988485946258409, -0.02822659331281886, -0.0402567394685676, 0.003596332830627096, 0.07069776062587424, -0.024876799919521707, -0.046145585251525956, -0.0016818368659807124, 0.06922752917972722, -0.020010983053718602, -0.05272884069804747, 0.001506305278812362, 0.06998415366466694, -0.015513103691928543, -0.058101419475309266, 0.003820452850784476, 0.07090804930570056, -0.01544174925455901, -0.05996236097959366, 0.003028175785799129, 0.07235537475865844, -0.013748304170106942, -0.0627669137120046, 0.0032015048529477888, 0.07401643434132928, -0.012897922109889867, -0.06600430526698875, 0.004474154707446635, 0.07486381949986602, -0.011941419681665674, -0.06815713375004309, 0.004582815211767092, 0.07495583338757292, -0.011466804942830575, -0.06973428290720447, 0.0031182446269910034, 0.07496890972931113, -0.010502456410098313, -0.06339597531938056, 9.599899984450769E-4, 0.07529390006761623, -0.009160356467069745, -0.06525924009217325, 0.0010438418579444115, 0.07542978706113838, -0.009778970083187451, -0.07041701006604564, 0.0016114250267146358, 0.0751551907584894, -0.010098690514804984, -0.06579134614763288, 0.002442848736310615, 0.07412860198542683, -0.009730493662220832, -0.06511748642663005, 0.0031099315897860844, 0.07328541559613803, -0.010919871723414711, -0.06669385081525835, 0.0034059564256408072, 0.07239356360080598, -0.011435220281272772, -0.0629885380976422, 0.0023038681912766717, 0.07205517765048519, -0.013021218224514255, -0.0600448809520345, 0.0010848495349654336, 0.07155013236805936, -0.012502185788138487, -0.05947093209627647, 1.7031696602141347E-4, 0.07135906689125972, -0.012106242124009882, -0.05881942210747933, -5.306974114152971E-4, 0.07113446077321124, -0.01299035789578654, -0.05675009618553819, -7.039969013432252E-4, 0.07072097213001087, -0.014578048864337485, -0.05483612187005664, -8.785460044243845E-4, 0.07021454231930135, -0.015769103765533487, -0.05243009039647213, -0.001822500968412689, 0.0697350157382918, -0.01631788859365019, -0.0501372007206446, -0.0050085666081544095, 0.06908967553774518, -0.014672750619792424, -0.04953063975639349, -0.004444531430232231, 0.0685735930516869, -0.012575535442255401, -0.04947608120987138, -0.005097574101314951, 0.0693805698765352, -0.014423857595635782, -0.04499426203068171, -0.004942005528053998, 0.06930042458232791, -0.020229490452304617, -0.052248910031100486, -1.0023299642806117E-4, 0.0694760160660095, -0.02061578039128732, -0.049194875295712225, 0.0047872784121540364, 0.06791052419649383, -0.02616203086012292, -0.04823615342172134, 0.0036848168703013206, 0.06829351766352268, -0.0228749440324474, -0.05076193311021312, 1.1821162851971025E-5, 0.06852070644095336, -0.01998065537064595, -0.04339966518144317, -0.003330058239665912, 0.07016402747415108, -0.021679956464503373, -0.04664914023064688, 0.0014006594131257487, 0.0706272793358366, -0.024151635390926417, -0.0503224248226672, 0.009037677641777047, 0.07244811195522935, -0.027742234357280227, -0.052781036310809035, 0.0023339660127594712, 0.07252565466960313, -0.02705239978458084, -0.056050695009819844, 0.007961219112330917, 0.0742458801833146, -0.023945350530059754, -0.06063696891091288, 0.01166431531010131, 0.07431077181710426, -0.019540066495864004, -0.06265802904768743, 0.006953894861836903, 0.0761026507281806, -0.02020169064643194, -0.0627621444450671, 0.007006867095348669, 0.07607260726292198, -0.021836764080038252, -0.06180995074707929, 0.009008975564113052, 0.07608973887179621, -0.023935460598191807, -0.0613279689996117, 0.0075410243594657, 0.07357000563118557, -0.019916837412193477, -0.05598411825208855, 0.002082805800342406, 0.07158701440149258, -0.019298622096169032, -0.05238229092814332, -0.006529078220711093, 0.06928949567249114, -0.01613514673823195, -0.05216247928616301, 0.008491557224572397, 0.0691193717820966, -0.013492012461718057, -0.05156254577438808, 0.0045508909505912335, 0.07177696808529666, -0.01388831881388123, -0.043758597834978596, -0.005777288391734518};
        TsData LogAddd4 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd4, false);
        Assert.assertTrue("LogAddd4", CompareTsData.compareTS(LogAddd4, comprest.getData("d-tables.d4", TsData.class).log(), 0.000000001));
        double[] aLogAddd5 = {0.062394275241985986, 0.11791726425402176, 0.16446920908356752, 0.023686096505498962, -0.099197200909525, -0.06807171669211157, 0.021478282727954573, -0.08261569512722536, -0.10009046202724269, -0.05685703926482401, -0.0033708190449069702, 0.023693686730657564, 0.062394275241985986, 0.11791726425402176, 0.16446920908356752, 0.023686096505498962, -0.099197200909525, -0.06807171669211157, 0.015844628124255696, -0.08578810049622637, -0.0915373498604431, -0.05460245253504434, 0.00612158098349444, 0.01938312054234868, 0.05874002193749493, 0.10441507346408664, 0.15683685148716794, 0.01759497939237777, -0.09406916667050831, -0.0660774130165488, 0.01518002145390836, -0.07833411823908829, -0.06800512376967183, -0.03412916895563304, 0.03767720070796204, 0.002724479532461262, 0.02797237173235008, 0.05945351395864707, 0.12318350821063928, -0.001251013737820493, -0.06976138294911141, -0.04381117556340701, 0.036222556668393795, -0.058033114731591666, -0.05151951988208356, -0.020611189778352745, 0.056109136697189865, -0.011215676483989918, -0.003995242610544469, 0.027371165938834832, 0.09668452043898443, -0.014435423521136328, -0.05816382002355055, -0.02622572645207072, 0.05498735552831125, -0.03554505168129338, -0.04199159930692459, -0.0020085564650969036, 0.07477758794655011, -0.0221556330683666, -0.040993145210215715, -4.5730956826280653E-4, 0.07154093591662845, -0.022895091201584384, -0.04659337605738419, -0.0026597004997316173, 0.07110877789258244, -0.020728877388106703, -0.050789789985085786, -0.0010019214514117689, 0.07154244220164052, -0.01875132233769258, -0.05373405118330272, 0.0021906972911349206, 0.07218864485298856, -0.017384207599518017, -0.056457391470125406, 8.733437488966406E-4, 0.07232881041410738, -0.015668272845084926, -0.06006742736696771, 0.0014633236571313852, 0.0729419436970185, -0.014194755030762231, -0.06075603679140521, 0.0030605789660001752, 0.07347966424844925, -0.013144606994816668, -0.06284401420006212, 0.0025019327847222404, 0.07358682525603401, -0.01240428794652515, -0.06602190595162054, 0.0026258435135853397, 0.07391031026537588, -0.011575762437882203, -0.06385873695792524, 0.002480281378068461, 0.07403177222992693, -0.011027640254996755, -0.06468695554674399, 0.0025071661042452903, 0.07404401795478076, -0.011158661171593753, -0.06733847252048505, 0.0024084603118324156, 0.0739418342982008, -0.011058632583881896, -0.06386715276917478, 0.002042971319494567, 0.0736534770973825, -0.011042501816934556, -0.0634580099253666, 0.0019864304043626293, 0.07325264988665249, -0.011569847232461542, -0.06493177995857781, 0.0018905918223356558, 0.07283880507634485, -0.0117322655093922, -0.06150519405885104, 0.00125025177946207, 0.07241188215428028, -0.012359503561070698, -0.05993878437892806, 5.316581532381378E-4, 0.07187844914604224, -0.012665879057670148, -0.060160348599398415, 4.078043297674638E-4, 0.07142738178759095, -0.01272455329777328, -0.05806170584914244, -2.3704684234377978E-4, 0.0711840722304608, -0.013651451016980136, -0.05565555659106682, -0.0012092752290892336, 0.07067266419349913, -0.014496000336268381, -0.055776835424615846, -7.894461771622951E-4, 0.07026972854705069, -0.014430261057565652, -0.05404877187691204, -9.792673102260586E-4, 0.070073171066494, -0.0159324608791891, -0.0513331860781195, -0.0022755110093722122, 0.06971790647423182, -0.016655050629287214, -0.05261136893854001, -0.0016175451812804422, 0.06947069630087378, -0.015961629626608125, -0.050559626803941354, -0.0014633176154866066, 0.06949003182147007, -0.01813866513809642, -0.048452775194550254, -0.0018415010720293952, 0.0694157402973429, -0.019432865870994274, -0.051483963931552364, -6.537803223273628E-5, 0.06966187963914791, -0.018868933008239216, -0.048783679750255625, -1.957039238395774E-4, 0.06960114304653489, -0.02151238562023651, -0.04834577542518041, 7.184320356189086E-4, 0.0698553336845457, -0.021710378126627166, -0.05197907372327952, 0.002769505867164874, 0.07039022401141828, -0.0208420919336092, -0.0496252799202338, 6.309235503623679E-4, 0.07086296543606475, -0.022862139205700096, -0.05089417671220081, 0.003095832280515222, 0.07142609289859937, -0.023007531154777952, -0.054244128264240014, 0.006510101360286377, 0.07216102014770925, -0.02279920421323284, -0.053403271782301504, 0.0029187724970068437, 0.07245410600598198, -0.023313783319763876, -0.05451347618877744, 0.00514345459694783, 0.07297347131531798, -0.022751191134089233, -0.05658170168065662, 0.007047267691035213, 0.07295500078200971, -0.022059127486835216, -0.056942332109038284, 0.0049022957594000265, 0.0730342840610808, -0.021260696389867884, -0.05677171867347463, 0.005212807665774864, 0.07363092872821432, -0.021101814078977457, -0.05621649429514844, 0.004426859925981303, 0.07226366615055617, -0.022092455509806607, -0.05843260459107834, 0.007127672025347799, 0.07215002682865512, -0.019689147642807048, -0.05657309367723824, 0.004746053842758381, 0.07312042818554818, -0.01913004172677498, -0.05355006236303657, -3.3234639577795193E-4, 0.07003123221068361, -0.02146684214514586, -0.05752812296567699, 0.008213877330349654, 0.07061855596643633, -0.0181075758297995, -0.055581815411119576, 0.003959664124510497, 0.07244334436257198, -0.01767036002155754, -0.050690367431862976, -0.0033798363442561867};
        TsData LogAddd5 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd5, false);
        Assert.assertTrue("LogAddd5", CompareTsData.compareTS(LogAddd5, comprest.getData("d-tables.d5", TsData.class).log(), 0.000000001));
        double[] aLogAddd6 = {-0.14789094543393, -0.09100691753297482, -0.09974401786993918, -0.045163697787732965, 0.028113144418560942, 0.09280384069701882, 0.04157200654173045, 0.0570530366566811, 0.04018142162134961, 0.07234763801616798, 0.06672573374665616, -0.05019136998127792, -0.113180855925349, -0.10786396840490121, -0.10190219258474513, -0.05417396419472173, 0.05761335375323531, 0.07632089844099119, 0.046394407471746016, 0.04913614924725734, 0.055952658361375134, 0.06223276749870617, 0.05670945197548419, 0.24775599421643088, 0.3168247576342872, 0.34700957807939725, 0.3169124097813666, 0.25158984980226795, 0.06809155131761299, 0.06235549526577141, 0.0501372900976685, 0.039275567936701075, 0.04772659725141882, 0.02103349368889847, 0.029544342903645444, -0.0400135554986621, -0.04402594352776447, -0.0793260716999034, -0.053608752717694164, -0.03250982370064247, 0.04567082158952175, 0.029001653941890915, 0.03427094830470339, 0.024208146330233063, 0.02211810325477356, 0.010891405347315867, 0.014408505069836805, -0.02148831668913735, -0.03057322105668246, -0.03485207831711886, -0.026501863693971187, -0.01607151706154127, 0.022176992221805795, 0.018940654638433488, 0.014928556492290974, 0.006220560986654262, 0.004004229273241247, -0.003981246642338018, -0.005100603851333499, -0.006473806164793743, 5.404574878094814E-4, 0.004173317762194815, -0.0010293082566810025, -0.0025374925999668077, 1.5302391593766118E-4, 0.001148859754419979, -0.002001552944237303, -2.1195942283029276E-4, -0.0029206338338604934, 0.0018635501427750633, -0.0024524820946082854, 0.0018872193468681894, -0.005475181230667016, 8.526669742889275E-4, -0.0022458779928629657, 6.062414005825155E-4, -0.0046259855583922135, 0.0012955026025954634, -0.0010647999169169226, 5.080349644988151E-4, -0.00394024802747342, 7.931286384900032E-4, -8.19857033834831E-5, -1.5886709585860928E-4, -0.006532512338630982, 3.6843523922156386E-4, 1.8558134490175016E-4, -2.588189347010345E-4, -0.006688074066702063, 9.342567481354382E-4, 5.247897481955033E-4, 1.3492621864120112E-4, -0.0045590472984858715, -1.1848955438673427E-4, 7.879876118244145E-4, 8.636925351763296E-4, 1.8641069755821749E-4, -0.0016676116835550583, 0.0011910924857666955, 0.0017253074057655346, -7.795342239489966E-4, -0.0016726144393803548, 0.0010675361563478453, 9.860956261255882E-4, -0.0035084380638194523, -0.0013377337441685853, 6.265318579359996E-4, 4.275220528057455E-4, -0.0025007590291493687, -3.434163815263455E-4, -1.8881896861927538E-4, 8.392249756271307E-4, -0.0022145632924933795, 3.599147736238007E-4, -7.123845147276875E-4, -3.290511742994051E-5, -0.0025805452210123786, 4.334056024620438E-4, -0.001498996468781752, -6.742783667838797E-4, -0.0026448158922991252, -2.741283429926845E-4, -0.0014780422325400971, -0.00163658634948388, -0.0012640795872794, -6.766686667544074E-4, -0.0014103862891265556, -8.552204083958782E-4, -4.7986083852271516E-4, -0.0014407376217261828, -0.0011253143384547526, -3.69298243385734E-4, -0.0018540235409121655, -0.0015053702850950533, -0.0011404196740232714, -2.698015203231874E-4, -0.0021121251678331496, -7.055568923492292E-4, -0.0010435284988888766, -9.56070370250299E-4, -3.052679085683435E-5, -0.001238408531078606, -0.001053322045912311, -0.002215921057198431, 5.41343893133428E-4, -0.0019439009862226965, -0.0011820114186829184, -0.0011099393510990985, 3.1480126788922813E-4, -0.0034832388063586444, -0.0010510747991504532, 0.00160537016478738, 0.002565086182376705, -0.0033071220940446527, -0.0011176161033951276, 0.003322794983725121, 9.009956261847585E-4, -0.004206711056030338, -0.0011811275200885457, 0.0025306919664845953, 0.002230915106874405, -0.00494064578032038, -0.0025875299998253665, -0.003135903671544371, -0.0030242938654126486, -0.0030961142220273293, -0.004115554007168579, -0.005664185484383768, -0.004150418630111334, 9.915871247652872E-4, -0.005839798832727949, -0.008793903271020236, -0.004020117171606483, -0.0010600903941895318, -0.005192851480465027, -0.004744794360240792, -0.002429615644361796, -0.005912439713474955, -0.004514004241750483, -0.0015425859880555982, 0.00403329543522718, -0.005957786124282297, -0.0025755427195954805, -1.6219822983147558E-4, 0.003492772768724582, -0.0026308404059954176, -0.0024893829886796642, -0.0030295097745025937, 0.0023020971767441223, 6.536773929449605E-4, -0.0023806987808104862, -0.007891267124301233, -0.00200056458229856, -0.0031098498898270172, -0.002923285906001924, -0.007056974468486982, -0.004594908196816579, 2.9780431353155796E-4, -0.0012025422062503094, -0.003773909437265986, -0.006147257701806748, 0.0031388769400367902, 5.9001776548481266E-5, 0.001040475131785363, -0.007053104175535667, 9.83051558588876E-4, 0.0021263410019696782, -8.191340945106623E-6, -0.007084901677959297, 6.130887951895049E-4, 0.001143649765552257, -0.0019743032441521743, -0.0069249232463113874, 0.0031676288020648265, 0.0026873005833692176, -0.0029390344930297733, -0.004359389280215287, -0.001037554495102901, 5.951027911996337E-4, -0.0011567256452835635, -0.001089388360211517, -0.004088470098348363, -0.002009428184123682, 3.2335915054422515E-5, 0.001454972939527531, -0.005619329743718554, 4.8202956364659655E-4, 0.00694845860819638, 0.007004006369239868, 0.0018546993534360283, 2.1895978433690566E-4, 0.006134130248717874, 0.004559642161648406, -5.104587814374305E-4, -0.0036055782371686163, -6.263494464443069E-4, 0.0011812698917559872, -0.009947681791607614};
        TsData LogAddd6 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd6, false);
        Assert.assertTrue("LogAddd6", CompareTsData.compareTS(LogAddd6, comprest.getData("d-tables.d6", TsData.class).log(), 0.000000001));
        double[] aLogAddd7 = {-0.13303124809011646, -0.10270132170974758, -0.0668020392881201, -0.028069122932961474, 0.008773869697232876, 0.04006957586701006, 0.06292948368945403, 0.07154707905749627, 0.06429605334463774, 0.04058123012572782, 0.003947082904130293, -0.03731781961285746, -0.0704586335962147, -0.0836965155105363, -0.07091517461683142, -0.03754200727465389, 0.003827805846253968, 0.034613052956384845, 0.04745144380129897, 0.05102022604662559, 0.06139976571604323, 0.09236824436175849, 0.14936176070864246, 0.2183884524214414, 0.2741701344715139, 0.29622377858523163, 0.276574042667356, 0.22275087743923272, 0.1538630674744264, 0.09338050553772262, 0.054907550821560694, 0.03630318587185425, 0.027693575892733465, 0.01726002827429868, -0.0020863547028118485, -0.026121825992478535, -0.043981010766933976, -0.04924347276794923, -0.03993059943455425, -0.01961736168776905, 0.0037133274808350126, 0.02282613384563489, 0.03245766465832332, 0.03226574631850669, 0.023925114129586963, 0.011492431419153482, -0.0024285766660490198, -0.0149415074411549, -0.02369071878517538, -0.025359466124595956, -0.01966311685611248, -0.008801069300380155, 0.002887747753666366, 0.011109979799311918, 0.013253986737951069, 0.01019102333512716, 0.004570152913352986, -4.4411701217623165E-4, -0.003004072014508544, -0.0031173134099786483, -0.002149020263891385, -9.269109283580855E-4, -4.715545149761332E-5, 1.5608366044519913E-4, -1.7347108616003472E-4, -6.422281374296368E-4, -8.050212954170429E-4, -7.285976574340384E-4, -6.942953567594158E-4, -8.514176053476167E-4, -9.423777344361411E-4, -0.0010468906260943307, -0.001228539176764514, -0.001441051475852195, -0.0014397963087323478, -0.0013124092595677731, -0.001127265532081192, -0.0010282940100431169, -8.266764133478709E-4, -7.303973108754757E-4, -7.488353587572613E-4, -0.0010008217966426104, -0.0011795241761731433, -0.001357724136693293, -0.0015027383759827503, -0.0016941407046577488, -0.001690711999820055, -0.0015410882460957875, -0.001329037875532425, -0.001254999884196531, -0.0012384381124545178, -0.001083724451940001, -7.526725413259173E-4, -5.181998227232249E-4, -3.254367793847742E-4, -4.6196831268240206E-5, 2.8133805934599444E-4, 3.5258215333062364E-4, 2.8984804604089494E-4, 1.962833097872129E-4, 9.818905526444422E-5, -1.396543195962555E-4, -4.1801840764676794E-4, -6.646651343059532E-4, -8.074045415915234E-4, -8.470308366411918E-4, -8.069357770818443E-4, -7.315933618210245E-4, -5.948236118046194E-4, -4.770905735585328E-4, -4.263080986487817E-4, -4.497297282761464E-4, -4.391528645097677E-4, -4.8728347959197386E-4, -5.962435427740447E-4, -7.490965193113504E-4, -8.635782213243877E-4, -9.761119571964454E-4, -0.0010986877853160766, -0.0012311693046843327, -0.0012948231958913076, -0.001342578698509125, -0.0013578563899047586, -0.0013116701348584283, -0.0011891463846776726, -0.0011058428778899004, -0.0010204537182824385, -9.516735170506317E-4, -9.112428339583748E-4, -9.80253482504405E-4, -0.0010649080457269542, -0.0011425812007424094, -0.0012018068750757548, -0.0012318997512740218, -0.001232422434438394, -0.0011934208752323516, -0.0011121559785539894, -9.720408801717776E-4, -8.92073974366307E-4, -8.700524235176798E-4, -8.713822356639198E-4, -9.114151674948025E-4, -0.0010225348095669153, -0.0010886711236160166, -0.0010806115151199677, -0.0011248465184502854, -0.0012446583518509978, -0.0012395996161256653, -0.001064247193029785, -8.357626046413133E-4, -5.860555837515281E-4, -2.16449259281737E-4, 1.1480917474141504E-4, 2.293637615789955E-4, 5.273314295342785E-5, -1.3521729190523902E-4, -1.9941007122073132E-4, -1.041913309186536E-4, -9.88064503460764E-5, -3.8654709404336044E-4, -9.222668427930281E-4, -0.0014922002059975592, -0.002168280176071577, -0.0030525443223805224, -0.0037063163932320843, -0.003789857572081781, -0.003645980870492807, -0.0037218436394364984, -0.0039760663448722205, -0.004185095300264606, -0.004394565419658309, -0.004489696290299005, -0.0044591188432574185, -0.004384880539796694, -0.004386716824320859, -0.004212728019537765, -0.0038944324979096096, -0.00355294502915403, -0.003101861792799063, -0.002431504656404598, -0.0017277506313097281, -0.0011483590874241546, -8.427010172984535E-4, -8.434288995270063E-4, -9.369497616860901E-4, -7.682201529784579E-4, -5.781616618572328E-4, -6.829488855968595E-4, -0.0011657700402756778, -0.001639407740158434, -0.002189164777401322, -0.00299349765893539, -0.0038915797026410903, -0.004360462170372183, -0.004188730347445772, -0.003765417160048544, -0.0034332324429869996, -0.0031745029354340914, -0.002640419550391374, -0.0019528002776829675, -0.0015080026316819798, -0.0012893999821074517, -0.0010000522358437946, -6.919698001453788E-4, -6.431613664479992E-4, -8.773763642653887E-4, -0.0010351454004408178, -0.0011473065916865648, -0.0013245881961639696, -0.0015742688470954144, -0.001599407671794461, -0.0013807025668857496, -0.001017939798535078, -8.791118553699241E-4, -9.92647966385669E-4, -0.0010988610615388721, -0.0010977661467172185, -0.0012682625702645214, -0.0015739332817190815, -0.0016240615106256886, -0.0014828549753494904, -0.0016466236463883997, -0.0019575339527983333, -0.0018089137248408964, -9.211879702505695E-4, 3.499212914277423E-4, 0.0016465181151132495, 0.0028453758032501494, 0.0038271844559893712, 0.004322791732651553, 0.004013494956085548, 0.0031722970429390986, 0.002224183494029473, 0.001350126980414758, 2.8648469040031574E-5, -0.0021971220142771924, -0.005119515345644522, -0.00814645592234835};
        TsData LogAddd7 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd7, false);
        Assert.assertTrue("LogAddd7", CompareTsData.compareTS(LogAddd7, comprest.getData("d-tables.d7", TsData.class).log(), 0.000000001));
        double[] aLogAddd8 = {0.04753457789817246, 0.12961166843079452, 0.13152723050174844, 0.006591521650727468, -0.07985792618819693, -0.015337451862102804, 1.2080558023098986E-4, -0.09710973752804053, -0.12420509375053082, -0.02509063137438385, 0.0594078317976189, 0.010820136362237102, 0.01967205291285168, 0.09374981135965685, 0.1334821911156538, 0.007054139585431125, -0.045411653002543656, -0.026363871207505225, 0.014787591794702744, -0.08767217729559462, -0.09698445721511119, -0.08473792939809666, -0.08653072774966383, -0.25757376620128786, -0.30682649620083274, 2.006703435878589, -0.21229117920742402, -0.26296690975833864, -0.17984068282732174, -0.09710242328850002, 0.010409760730016163, -0.07536173617424147, -0.04797210241098647, -0.03035570354103325, 0.06930789831441933, -0.011167249973722298, 0.02792743897151959, 0.0293709150266929, 0.10950535492749937, -0.014143475750693912, -0.02780388884042467, -0.03763565546715099, 0.03803584031477387, -0.0660907147198653, -0.05332653075689696, -0.021212215850190362, 0.0729462184330757, -0.01776248573197237, -0.010877744882051548, 0.017878553746311927, 0.08984577360112572, -0.021705871282297444, -0.03887457555541112, -0.01839505161294915, 0.056661925282651154, -0.039515514029766274, -0.042557522947036325, -0.00554568609525869, 0.07268105610972515, -0.025512125823181696, -0.03830366745851485, -0.0027891852120192732, 0.06914187508508375, -0.02558866746199639, -0.0462668810552865, -8.686126078820014E-4, 0.06991224624376217, -0.020212239153502957, -0.05301612846218686, 0.001713046296710911, 0.07003233784146838, -0.01581721236473006, -0.0583569352403943, 0.0044844157412760426, 0.07138256316885795, -0.015465556939367728, -0.059956111496436426, 0.003197140361535221, 0.07209068691053833, -0.014429840569710636, -0.06325884003568387, 0.0032572740922639986, 0.07403948216980816, -0.012995897989927547, -0.06625043756541232, 0.005123154909879488, 0.07535595759317106, -0.011862337683421915, -0.06820305039123176, 0.00469118941705421, 0.07535005311668402, -0.011185637275943948, -0.0698282807087805, 0.0030255537819218305, 0.07502373465658507, -0.010665873071437633, -0.07188744249574625, 4.60087541182779E-4, 0.07493301666965274, -0.009498616159018433, -0.07228035522582249, 9.742059844611911E-4, 0.07552957251877537, -0.009507900411162212, -0.07003950604271299, 0.0019177574043050222, 0.07537530193321863, -0.009899517169255127, -0.06992303150039487, 0.002176645511526754, 0.07389096622741201, -0.009753547113031278, -0.0694131950093356, 0.002833628657578404, 0.07313650891469885, -0.010853655830580133, -0.0666487469582658, 0.003300109381994145, 0.07243849639287918, -0.011175374571491748, -0.06285518675525886, 0.0023187021349785103, 0.07229169631164493, -0.012684419775696149, -0.060013717581529784, 9.608323643736309E-4, 0.07148851657519813, -0.012569425949015394, -0.059728966603962756, -5.267980945431383E-5, 0.07136697549486315, -0.011951270340416605, -0.05871392251497885, -5.105173761648114E-4, 0.07127607499087593, -0.012727831662070973, -0.05665552578034598, -9.427912412666852E-4, 0.07052120966897656, -0.014582018283001, -0.05493597997980876, -0.0011164395407460988, 0.0702389413107053, -0.015557510991148066, -0.05242681646865864, -0.0017983217779984698, 0.07013581799966208, -0.015802800614162532, -0.04995413761720049, -0.004922987211089544, 0.06925288725883288, -0.014833231205218097, -0.05016109193090472, -0.00879615414840273, 0.06830034705452523, -0.012503617350977764, -0.04945922110653586, -0.009918367130600386, 0.0684077107517276, -0.015221426077568465, -0.04529959324488282, -0.005289946646352216, 0.06899649047358912, -0.019516225220158123, -0.03698954024940635, 6.283653178217156E-4, 0.06919230650247214, -0.027139403415236945, -0.03145828015046709, 0.004980978501190316, 0.06815590963346525, -0.0259149765989734, -0.033740172139303484, 0.0040432221812260714, 0.06904919902840154, -0.022242444467330192, -0.036832983161733605, 4.100111828439488E-4, 0.06897808156246686, -0.0199531732652602, -0.04167423587455483, -0.004178503486495774, 0.06913012373376773, -0.022180908536004566, -0.04646445418179014, 0.0012332120274982622, 0.06951487157177694, -0.025354092043683687, -0.05077626104722022, 0.008803186493389771, 0.07196948614430008, -0.027696973678598684, -0.05151225666195897, 0.0187008455962918, 0.07371955044742583, -0.026605340628202315, -0.05567515194260702, 0.01520000586153717, 0.07441134865945905, -0.02457230029367225, -0.06122095675078139, 0.011475544613179454, 0.07401405479440198, -0.020326682554904475, -0.06596886800427013, 0.006762723682254291, 0.0761957704634913, -0.020121581139126425, -0.06253203215526995, 0.007400165308059783, 0.07637398616556104, -0.02169541475624388, -0.062123477742924746, 0.008473600583416053, 0.07594361470031105, -0.02393262894129751, -0.0616942277245764, 0.00735838010050942, 0.07431906290157383, -0.019221811777464924, -0.05617962706210027, 0.0023042073907984183, 0.07306853395422283, -0.01728879208687966, -0.051173901453258466, -0.0063015974309242485, 0.06886674365921695, -0.017363759340199632, -0.05435130105242649, -0.016827045071287093, 0.06682402079468769, -0.013604625038068776, -0.053246356743500645, -0.015302611778455643, 0.06880911765636333, -0.005743723208215183, -0.044389582194462464, -0.00518106221351545};
        TsData LogAddd8 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd8, false);
        Assert.assertTrue("LogAddd8", CompareTsData.compareTS(LogAddd8, comprest.getData("d-tables.d8", TsData.class).log(), 0.000000001));
        double[] aLogAddd9 = {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0.04875066233733816, 0.10139464510026824, 0.15520087295825225, 0.19717521860117848, 0.04643395175541298, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0.0046429191222900935, 0.07055878311144506, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, -0.05798069323720522, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, -0.06578581075405344, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, -0.06395366431971301, Double.NaN, Double.NaN, Double.NaN, -0.06556467882595743, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, -0.06577308818651953, Double.NaN, Double.NaN, Double.NaN, -0.06523342035335021, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, -0.005154031036904091, Double.NaN, Double.NaN, Double.NaN, -0.005565837340598291, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, -0.050801941403732925, Double.NaN, Double.NaN, -0.020811274853186484, -0.04895803203549474, Double.NaN, Double.NaN, -0.02581659260095774, -0.047906773753529475, Double.NaN, Double.NaN, Double.NaN, -0.050514256869731704, Double.NaN, Double.NaN, Double.NaN, -0.04386423385369689, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0.00416938477755201, Double.NaN, Double.NaN, Double.NaN, 0.00861576184591348, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, -0.06335227491812595, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0.005745784951134129, Double.NaN, -0.015145742624020724, Double.NaN, 0.0020990783626583086, Double.NaN, -0.016099587453724654, Double.NaN, Double.NaN};
        TsData LogAddd9 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd9, false);
        Assert.assertTrue("LogAddd9", CompareTsData.compareTS(LogAddd9, comprest.getData("d-tables.d9", TsData.class).log(), 0.000000001));
        double[] aLogAddd10 = {1.0512596033862516, 1.1159371672748457, 1.156510993041138, 1.0130145878129475, 0.9115681682395123, 0.9541413180861085, 1.0109681583031285, 0.9185761570926883, 0.9186084117397356, 0.9577859437490683, 1.0228064897820093, 1.010392984452154, 1.046624347023645, 1.105068429698562, 1.1502285394358112, 1.0090378743790847, 0.91727897166468, 0.9557240651467512, 1.0153649859264255, 0.9227725372614647, 0.923764938072131, 0.9626784575115412, 1.0303682809831687, 1.007825169543336, 1.0362007162346774, 1.0852912451501031, 1.1393280518840592, 1.002971804502489, 0.9254088302444021, 0.9586795788116844, 1.024608122341918, 0.9314609990997849, 0.9327132700164633, 0.968463076319649, 1.0379930200157752, 1.0030410784521362, 1.0216541993499944, 1.0644554891981746, 1.1263942473221826, 0.9972287161945778, 0.9289588915048118, 0.9625502333691227, 1.0359128918115654, 0.9437164752285452, 0.9422430402518382, 0.9790453937414992, 1.0538030741436168, 0.9953224597503153, 0.9994789045240806, 1.0388848885478432, 1.1082395051560405, 0.9899895768211115, 0.937422536299475, 0.9723129340007545, 1.0495678521238425, 0.957338073785317, 0.9471935077485946, 0.9882977390703278, 1.0659035715232383, 0.9892650573136479, 0.9770750408909029, 1.0203926396301204, 1.0924582362081292, 0.9854461598677873, 0.9416190072163207, 0.9838237064095614, 1.0611005837813217, 0.9698112418702888, 0.9465837315452004, 0.997321073645305, 1.0773050394839414, 0.9852067325614005, 0.9564395306114757, 1.007054716799598, 1.0800927470384536, 0.9831889009361329, 0.9456966834092325, 0.9958641334421948, 1.070381364990636, 0.97949519094592, 0.9419035983228063, 1.000354556539786, 1.0766127861054116, 0.9861626155101145, 0.945492306931101, 1.004152512991354, 1.076970529356945, 0.9855320680048105, 0.9412927757234862, 1.0004931365691123, 1.0746356753894222, 0.9855244434681618, 0.9387198268983887, 1.0020621100637057, 1.0764162927125949, 0.9874702747510798, 0.9402775418740478, 1.0026935820853553, 1.0761239442123454, 0.9875202245028666, 0.9392389744486221, 1.0020720283122035, 1.075983873803601, 0.9878443340047534, 0.937207902261047, 1.002143857847663, 1.076029739790685, 0.9882861549822421, 0.9394659405825995, 1.001826225859284, 1.0759222877123753, 0.9882690625738927, 0.9397682775834645, 1.0013820011022665, 1.0755929142775709, 0.9880425474469828, 0.9385172823444655, 1.0012400626210207, 1.075381065604198, 0.9881893480564414, 0.9411496778135849, 1.0006828046790723, 1.0751059559246663, 0.9877711031269836, 0.9423702420585995, 1.0000856964774139, 1.074609037943195, 0.9870950254492831, 0.9414345595907878, 1.0003394260695204, 1.0742228465444958, 0.9871637656994168, 0.94393243014495, 1.0000190704048442, 1.073877650914278, 0.9860748878166314, 0.9458767509740087, 0.9991158214763354, 1.0734220063268547, 0.985440863261321, 0.9448816471414132, 0.9995108214777062, 1.0730768755043916, 0.9857572687451541, 0.9470750909197095, 0.9993557192428031, 1.0728165136916508, 0.9840421774748517, 0.9490637303778523, 0.9987699348167001, 1.0725548683442403, 0.9832194124034136, 0.9476469150217466, 0.9997875392446746, 1.0724745660471058, 0.9834813646458989, 0.9497735143651032, 0.9993704966791753, 1.0723763420773706, 0.981509595952121, 0.9510680824886939, 0.999446588279575, 1.072400962965477, 0.9810436975086038, 0.9488483533178284, 1.0009733145678261, 1.07253863067065, 0.9816125005430739, 0.9507300269350653, 0.9997649784752043, 1.0727696183951703, 0.9797410598806083, 0.9511594815735777, 1.0008662507241495, 1.0730865653746922, 0.9791752041814734, 0.948251336543869, 1.0032663042452574, 1.073401040619045, 0.9795731579141528, 0.9497311789193169, 1.001464628904672, 1.073734954136104, 0.97830036927795, 0.9497871304847594, 1.0028388611424, 1.0741506605344495, 0.9782517260438485, 0.947125021570826, 1.0045523874904576, 1.0741354821413522, 0.9787349304277189, 0.9479604564675507, 1.0029553083146363, 1.0744159861576346, 0.9783958416360196, 0.9479765149223338, 1.0040724268464327, 1.0749717829469814, 0.9783669418086671, 0.9467440460089226, 1.0046348676997825, 1.074373841756277, 0.9779104103454007, 0.9461011185153719, 1.004942896357635, 1.0747245603426332, 0.9789458568581906, 0.9466430499663707, 1.0045116428803975, 1.0753908056815453, 0.9793503390847433, 0.9470779149245515, 1.0032030340739737, 1.0739796309778349, 0.9782095503351115, 0.9445326835457447, 1.006329057895586, 1.0745184892331854, 0.9802806576687733, 0.9459141830305966, 1.0040728635884875, 1.0754173352794811, 0.9805844665573497, 0.9479487386681411, 1.0014091249768557, 1.0734508419048718, 0.9782229598379752, 0.9435677057087097, 1.0077344909059263, 1.0741207886448905, 0.9810549159863645, 0.945946785102395, 1.0034682618876793, 1.0751252262015816, 0.9816169615671447, 0.9490701096153467, 0.9993642027214473};
        TsData LogAddd10 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd10, false);
        Assert.assertTrue("LogAddd10", CompareTsData.compareTS(LogAddd10, comprest.getData("d-tables.d10", TsData.class), 0.000000001));
        double[] aLogAddd10a = {1.0731665677990674, 0.9785286617169339, 0.9433717851165182, 1.0080750330256278, 1.0736992585015883, 0.9816793261313984, 0.9462450928226486, 1.0027577761195896, 1.0746293215016223, 0.9821645401607163, 0.9501737148255468, 0.997851787977935};
        TsData LogAddd10a = new TsData(TsFrequency.Monthly, 2010, 10, aLogAddd10a, false);
        Assert.assertTrue("LogAddd10a", CompareTsData.compareTS(LogAddd10a, comprest.getData("d-tables.d10a", TsData.class), 0.000000001));
        double[] aLogAddd11 = {0.8732916180197687, 0.9205497676080098, 0.9224865188653255, 0.966177004531672, 1.0217377399199412, 1.074306793522061, 1.0535251691682326, 1.0611654705747413, 1.025301083642645, 1.0603738827326967, 1.0416485529213544, 0.9638331965735413, 0.9081400625763649, 0.9140646613852987, 0.9255254616810075, 0.9612842338518522, 1.0457766171823568, 1.0549941523604707, 1.0481124666998458, 1.0446903880136285, 1.0446824297250454, 1.04672488735723, 1.0334624227600757, 0.9541064552254694, 0.9340575477664482, 9.217269414733423, 0.9359850292780458, 0.9577356967442212, 1.05289345439104, 1.0392262670650905, 1.0418594941059522, 1.0324580427193777, 1.0506183749081894, 1.0191299225890529, 1.0303849634593356, 0.9604767149583615, 0.963216909034482, 0.9209625108311961, 0.9517557485299911, 0.9694894303578788, 1.0508509137779682, 1.02363447209529, 1.0358376736904125, 1.0243973962263178, 1.0305479144111998, 1.011523374023942, 1.0182770636459144, 0.9723733153201293, 0.9665258522489661, 0.9553965130702646, 0.9679352658060704, 0.9797615275047163, 1.0290482281426887, 1.0210101761324812, 1.021771005876294, 1.0143765578655648, 1.016397485967068, 1.0057982131326766, 1.0058712895274553, 0.9823216667925803, 0.9828872500154572, 0.9763798378251171, 0.9808500357132705, 0.9892860104409927, 1.0138086558194255, 1.014907745661023, 1.009848751737971, 1.0097603097603371, 1.0011861269292752, 1.0035504377158626, 0.9946417780736396, 0.9980415962481456, 0.9850648889403983, 0.9960213514392432, 0.9929210273289787, 1.000176058805894, 0.9947637720464653, 1.0063332600763568, 1.0032542933979371, 1.0055731861723674, 0.9958532929168535, 1.0019037684666539, 0.9990406150486583, 0.9995804794223512, 0.9883645727728776, 0.9992853545830243, 0.9995133298983976, 1.0011708720930061, 0.99100962427234, 1.0029475099059653, 1.0021321873664277, 1.002314662560586, 0.9926841569746325, 1.0004474672096582, 1.001061584904596, 1.0018986143652706, 0.9900241774834347, 0.9981244698091672, 1.0018589455224127, 1.0032612754829955, 0.990548119605201, 0.9987654297523032, 1.0018778405937037, 1.002059703057665, 0.9940211747601267, 0.9989297366448301, 1.0012910983385879, 1.0011525457601684, 0.9919583667100114, 0.9998750024145389, 1.0002864633358233, 1.001598286828886, 0.9922994021440336, 1.00096576421053, 0.9996682627108876, 1.0004268566714125, 0.9959499069266255, 1.0010852915494959, 0.9986656212852401, 0.9994745459891238, 0.9965091866989559, 1.0002935948529883, 0.9985157221798723, 0.9983096254570539, 0.9981558818593389, 0.9997693232907676, 0.9985122608439484, 0.9994680092232822, 0.999710272383769, 0.9986286394060159, 0.9987054394263077, 0.9998254943045902, 0.9977874156261065, 0.9982400631578638, 0.9987683411484055, 1.0001017287678735, 0.9978775765743882, 0.9989702680567952, 0.998778200633931, 0.9992143990672775, 1.00088863283685, 0.9984626264721833, 0.9986871625541931, 0.9977015957000872, 1.0008698455784435, 0.997723914318991, 0.9986046880593777, 0.9990445760391448, 1.0012617378410098, 0.995482308127819, 0.9986242490824566, 1.001875052072131, 1.0037339698174106, 0.9916804931866239, 0.9983857276415543, 1.0040258366822503, 1.001874852907524, 0.9906511181686658, 0.9984330668148502, 1.0030601881634844, 1.0039555711947161, 0.9937907754627914, 0.9969328981611677, 0.9965753844429807, 1.011880451331084, 0.9958742011323157, 0.9955279646499533, 0.9877727712957673, 1.0152052345622635, 1.0010314639410238, 0.993538576898235, 0.9901115097883221, 1.0119450193648134, 0.9987931946718399, 0.9941405795416918, 0.9946041278834363, 1.0124855752898623, 0.9936165460574545, 0.9950563299100356, 0.998255201359547, 1.0082078184371637, 0.9932325828500957, 0.9971483147453576, 0.9989147818898059, 1.004124471041465, 0.9976329585595677, 0.997409804195377, 0.9959593978332819, 1.0023849844294341, 1.0026251617560038, 0.9982656916447463, 0.9908461114963951, 0.9980405760020072, 1.0114545399880965, 0.9977560961594991, 0.9915064626377357, 0.9943332826944833, 1.0079931217499658, 0.9994766532890389, 0.9953561985646531, 0.992029476139054, 1.005577481411776, 1.0012767978802246, 1.001319435442091, 0.9888563512831312, 1.0009550827672336, 1.0031010174888944, 1.0000100548378037, 0.9910171526990318, 1.0013252779388253, 1.0020926293088663, 0.9977921699738583, 0.9912708185944658, 1.0044062525489734, 1.0035863520229507, 0.997004373619019, 0.9942893627296239, 0.9997810279909369, 1.0008728661034805, 0.9990709215145189, 0.9979430660143367, 0.9965987890796268, 0.9984034707055984, 1.0005089142849697, 1.001360686795861, 0.9926672078437218, 0.9996347835507995, 1.0075274660934603, 1.0075917120180686, 0.9799938465063331, 0.9993352808618562, 1.0087324204527555, 1.0045571431347888, 0.9827360141365205, 0.9964070918368932, 1.0106697814350458, 1.002767330208848, 0.9873886790350043};
        TsData LogAddd11 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd11, false);
        Assert.assertTrue("LogAddd11", CompareTsData.compareTS(LogAddd11, comprest.getData("d-tables.d11", TsData.class), 0.000000001));
        double[] aLogAddd11a = {0.9830628156822544, 0.9840075048456246, 0.9870632878460065, 1.0349369044298327, 0.9821469585943844, 0.9812436488887111, 0.9847721397401922, 0.9800861811855469, 0.9810489575972359, 0.9809620807904393, 0.9813466376515623, 0.9844000187689251};
        TsData LogAddd11a = new TsData(TsFrequency.Monthly, 2010, 10, aLogAddd11a, false);
        Assert.assertTrue("LogAddd11a", CompareTsData.compareTS(LogAddd11a, comprest.getData("d-tables.d11a", TsData.class), 0.000000001));
        double[] aLogAddd12 = {0.9576373681089738, 0.9665783644580039, 0.9812029446674865, 0.9995145944026871, 1.017412929224329, 1.0308615085305584, 1.0406130182882314, 1.043873879375186, 1.0394782097342574, 1.0274756965328153, 1.0093831302675451, 0.9894291150770764, 0.9741955640541708, 0.9693214497834096, 0.9772744825871957, 0.9948087646318663, 1.015815213325959, 1.0271273055199814, 1.0254418102597807, 1.0221628024304636, 1.0359456298698146, 1.0817514420289511, 1.1671531876408812, 1.2771814641882726, 1.3740265972206709, 1.4155081880177227, 1.3806044699480922, 1.2871866667927527, 1.1769674298968849, 1.0884276825617571, 1.0367297609966601, 1.015965838142027, 1.0134660027053433, 1.0140337281639393, 1.0066325877124858, 0.9929872203709723, 0.982727543489891, 0.9806928156261263, 0.987724690664252, 1.0011562105270981, 1.0156584704319949, 1.0269606171324503, 1.0312766467494578, 1.0289306778669327, 1.0219024619052488, 1.0135627928474416, 1.0045058622816312, 0.9960834135177018, 0.9901593984087346, 0.9899791174651056, 0.9955131748488655, 1.0047053878114376, 1.0142537679009573, 1.021269767621667, 1.0232296999103807, 1.0204291094538782, 1.0150692057329391, 1.0096686805703887, 1.0050636200523904, 1.0014482499427755, 0.9994394932374883, 1.0002653989505041, 1.003822595560607, 1.0085885310672689, 1.013198750850149, 1.0161043867718123, 1.0163485076870786, 1.0139354752391199, 1.010279405629698, 1.0069474387197401, 1.0050609173886205, 1.0042037837083824, 1.0042049742755637, 1.0050963535749866, 1.0066855644565538, 1.0081173403738848, 1.0094429193472272, 1.0103781109468715, 1.0107786445786238, 1.0100545122531526, 1.0089376222879338, 1.007787144413413, 1.0070941874161756, 1.006492433879409, 1.0064428093252484, 1.0068446942926732, 1.0075962247445098, 1.0080451307732183, 1.0084427877026334, 1.0086711742289494, 1.0086366832614535, 1.008259797144667, 1.0081861116406325, 1.008380609018534, 1.0087143022008167, 1.0089167734594615, 1.0093624976102349, 1.0097826932087675, 1.010006331269708, 1.0097339244949914, 1.0094800982950087, 1.0092716718419357, 1.0089776119044318, 1.0083605421906512, 1.008038771626997, 1.0082105301871744, 1.00851273074986, 1.008484928688492, 1.008622076353453, 1.0089907173334132, 1.0092257021210422, 1.0089508227420847, 1.008795878579788, 1.008852108409343, 1.008808323917304, 1.0083379758240354, 1.0080546515286906, 1.0081473930521274, 1.0082443628067992, 1.0079483345914115, 1.007815110978465, 1.0079684770535882, 1.0080895969609467, 1.007879907830796, 1.007874506433058, 1.0081391009748488, 1.0083888523557416, 1.0082387888534687, 1.0081449918342955, 1.0082225306925725, 1.0082527978578686, 1.007933089025768, 1.0077612836079664, 1.0079429453709614, 1.0081122555327362, 1.0079190685325488, 1.0078640256957747, 1.0081893715104664, 1.0084289526020627, 1.0082209439029377, 1.0080974011933368, 1.0082514795061706, 1.0082780182101898, 1.007974287990197, 1.0078771918031761, 1.008055698453101, 1.0080990555667102, 1.0078659325976669, 1.0078825213720959, 1.008235788489814, 1.008565300001538, 1.008661911884377, 1.0088833487753888, 1.009253082626586, 1.0092950913236223, 1.0089524581087332, 1.0088475549976341, 1.0092294263367692, 1.0094226866318623, 1.0088422491012212, 1.0080524908763697, 1.0075539862092584, 1.0069048680573203, 1.0056621410090545, 1.0048620997924944, 1.0051262677073944, 1.0056268688944763, 1.005438805030279, 1.0050871025341186, 1.005079963147047, 1.004994987468088, 1.0045848506667368, 1.0043905855119981, 1.0046061052713686, 1.0047388762068976, 1.004687595738453, 1.0049020280783194, 1.0055333261338089, 1.0062854845673481, 1.0068049406775217, 1.0073309620196818, 1.0080220656565393, 1.008444366906344, 1.0081272622277642, 1.007807026815647, 1.0081982069416333, 1.0087233726863096, 1.0085721958042484, 1.00803567936312, 1.0077874468621784, 1.007401867839915, 1.0062638702458313, 1.00501520567488, 1.0045350694326403, 1.0048516467743545, 1.0051073083169, 1.00534318076356, 1.0057732686650676, 1.0065695695588521, 1.00723375877716, 1.0077056951629422, 1.008145425763507, 1.0085874161508317, 1.0086353494247136, 1.0084525595858418, 1.0082485315841692, 1.0082073952152022, 1.0079384732437997, 1.0077270478508917, 1.0076439458498905, 1.0077495100361398, 1.007714442120687, 1.0079428285707641, 1.0082055286150284, 1.0082005166341954, 1.0078801155433668, 1.007852733215121, 1.0079570544522796, 1.0079005496528246, 1.0077978511889751, 1.0080024322001455, 1.00800274385217, 1.0076108001123938, 1.0071889109966912, 1.007668579814826, 1.008902736315165, 1.0103251331628498, 1.0114844366874496, 1.012716149720518, 1.0137779595395728, 1.0138615266410078, 1.0129616006560842, 1.012036538466985, 1.0113825573248159, 1.0099660192957647, 1.0069786865645507, 1.0033553495809384, 1.0000681325349492};
        TsData LogAddd12 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd12, false);
        Assert.assertTrue("LogAddd12", CompareTsData.compareTS(LogAddd12, comprest.getData("d-tables.d12", TsData.class), 0.000000001));
        double[] aLogAddd12a = {0.9972542329221292, 0.9951095145363206, 0.9941984013913718, 0.9940339521976851, 0.9932658999289911, 0.9920683547043329, 0.9908270721579322, 0.9891167715341833, 0.9875067693277965, 0.9860771629501989, 0.9828190577663198, 0.979685217364707};
        TsData LogAddd12a = new TsData(TsFrequency.Monthly, 2010, 10, aLogAddd12a, false);
        Assert.assertTrue("LogAddd12a", CompareTsData.compareTS(LogAddd12a, comprest.getData("d-tables.d12a", TsData.class), 0.000000001));
        double[] aLogAddd13 = {0.9119230797605978, 0.9523798601929145, 0.9401587346213489, 0.9666462200174899, 1.0042507919561328, 1.0421446378897508, 1.012408215785385, 1.016564827936786, 0.9863613051636391, 1.032018456797465, 1.0319654863314953, 0.9741306192495243, 0.9321948242066386, 0.942994361250896, 0.9470476086010247, 0.9663005273255509, 1.0294949351647322, 1.0271308597198492, 1.0221081842121513, 1.022039136553981, 1.0084336470981867, 0.9676205149252911, 0.8854556828559677, 0.7470406375118064, 0.6797958275740983, 6.511632707431587, 0.677953063061745, 0.7440534628365788, 0.8945816406179438, 0.9547958800709068, 1.0049479944555277, 1.0162330306376357, 1.0366587257033504, 1.005025665600237, 1.0235958740426094, 0.9672598954491427, 0.9801464458947368, 0.9390937673416163, 0.9635840407005808, 0.9683697910113876, 1.0346498792364769, 0.9967611756656766, 1.004422699724008, 0.9955941816702241, 1.0084601542987108, 0.9979878712617596, 1.0137094285671995, 0.9761966740176513, 0.9761315741710381, 0.965067339517836, 0.9722977960116079, 0.9751729605421379, 1.0145865469865092, 0.9997458149673907, 0.9985744217215212, 0.9940686211984362, 1.0013085612553576, 0.9961665965160714, 1.0008036003482275, 0.9809010768641434, 0.9834384739306095, 0.9761207763954964, 0.9771149205557511, 0.9808618479868588, 1.000601959851179, 0.9988223246288789, 0.9936047960911566, 0.9958822177734751, 0.9909992437243091, 0.9966264366209655, 0.9896333255679146, 0.9938636086019506, 0.9809400612171105, 0.9909710127755763, 0.9863268754280731, 0.9921226614700969, 0.9854581700268358, 0.9959966958639632, 0.9925558862753542, 0.995563282945206, 0.9870315774909757, 0.9941620847424248, 0.9920031587232374, 0.9931326314789903, 0.982037492458721, 0.9924920499134581, 0.9919780417516334, 0.9931806042503878, 0.9827127888236392, 0.9943255399091191, 0.993551200345011, 0.9941035687419878, 0.9846239156768649, 0.9921327902005203, 0.9924133946752575, 0.9930438671664399, 0.9808410554458031, 0.9884547205274888, 0.9919333320049063, 0.9935897478979592, 0.9812458128478377, 0.9895902734786379, 0.9929634005482764, 0.9937514025297959, 0.9860941887738648, 0.9907947861439006, 0.9928393244913204, 0.9927293083716588, 0.9834787379394994, 0.9909655116124699, 0.9911424780736046, 0.9927126914935097, 0.9836473594053748, 0.9921828540248112, 0.9909397444591609, 0.9921542981199754, 0.9879919758480272, 0.9929949712201791, 0.9904995833600365, 0.991593032786028, 0.9887817476079195, 0.9923857914455475, 0.9905029525054753, 0.9905045409682393, 0.9903573068753231, 0.9916977948023364, 0.9902055724944597, 0.9913008904962282, 0.9916334262245555, 0.9904843514259036, 0.9905307890522643, 0.9919562173229035, 0.9901029458621872, 0.9903735799157496, 0.9907312758742399, 0.9922440798981443, 0.9900914717989936, 0.9908557819451527, 0.9904299138345545, 0.9910668937298656, 0.9928491350657651, 0.9902912584479601, 0.99048788579858, 0.9898085770515114, 0.9930474205769099, 0.989750780487661, 0.9905819101258903, 0.9912474900944553, 0.9934309967772109, 0.9873506966251437, 0.9901433740392752, 0.9932714225328814, 0.9948959619918114, 0.9825885204192497, 0.9891911059750017, 0.9951170925974869, 0.9930884482441686, 0.981591590887775, 0.9891129652993226, 0.9942686173751267, 0.9959358071938378, 0.9863399768798011, 0.9900964130649283, 0.990964404251157, 1.0069843927241746, 0.9907951201034852, 0.9899576030067444, 0.9824295286335407, 1.0100669205709973, 0.9959719630731203, 0.9886005296417295, 0.9855927143746904, 1.007521410457033, 0.9942137415161751, 0.989451690467859, 0.9899635788300888, 1.0075465537929553, 0.988148796497702, 0.988840985158262, 0.991508047912219, 1.0008704749983302, 0.9853282152144052, 0.9887985371016152, 0.9908617883047816, 0.9963459713256637, 0.9895206633880899, 0.9887842704974668, 0.9874944024597972, 0.9943943502701651, 0.9948776052705879, 0.9909309517017686, 0.984678214924213, 0.9930601749769654, 1.006888231945316, 0.9929387082783487, 0.9864682650632204, 0.9890486171491065, 1.0022071108410393, 0.9929533770100741, 0.988207742136317, 0.9844436534405481, 0.9974528036470669, 0.9927516265288067, 0.9927467206193047, 0.9805680414845112, 0.9927662192520369, 0.9949351911615191, 0.9921340254227221, 0.9834182329555449, 0.9937292652458347, 0.9943866202157017, 0.9901536866674773, 0.9834593694168757, 0.9962316452764606, 0.9954233661507645, 0.9892092901163304, 0.9865423091702802, 0.9918885170501779, 0.9930274037931968, 0.9913405950765222, 0.9900204941332805, 0.9886865836009912, 0.9908622164373702, 0.9933676824289982, 0.9937401114361192, 0.9839077367053829, 0.9894189016375512, 0.9960879570159793, 0.9949399071952555, 0.9666750369591943, 0.9856723572229059, 0.9958249353177954, 0.9926095599833522, 0.9716758579819018, 0.9865748676689876, 1.0036655143944384, 0.9994139470404618, 0.9873214103245093};
        TsData LogAddd13 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd13, false);
        Assert.assertTrue("LogAddd13", CompareTsData.compareTS(LogAddd13, comprest.getData("d-tables.d13", TsData.class), 0.000000001));
        double[] aLogAddd16 = {1.0512596033862516, 1.1159371672748457, 1.156510993041138, 1.0130145878129475, 0.9115681682395123, 0.9541413180861085, 1.0109681583031285, 0.9185761570926883, 0.9186084117397356, 0.9577859437490684, 1.0228064897820093, 1.010392984452154, 1.046624347023645, 1.105068429698562, 1.1502285394358112, 1.0090378743790847, 0.91727897166468, 0.9557240651467511, 1.0153649859264255, 0.9227725372614647, 0.9237649380721311, 0.9626784575115414, 1.0303682809831687, 1.007825169543336, 1.0362007162346774, 1.0852912451501033, 1.1393280518840592, 1.002971804502489, 0.925408830244402, 0.9586795788116844, 1.024608122341918, 0.9314609990997849, 0.9327132700164633, 0.9684630763196491, 1.0379930200157752, 1.0030410784521362, 1.0216541993499944, 1.0644554891981746, 1.1263942473221826, 0.9972287161945778, 0.9289588915048119, 0.9625502333691227, 1.0359128918115654, 0.9437164752285452, 0.9422430402518381, 0.9790453937414991, 1.0538030741436168, 0.9953224597503153, 0.9994789045240806, 1.0388848885478432, 1.1082395051560405, 0.9899895768211115, 0.9374225362994749, 0.9723129340007546, 1.0495678521238425, 0.957338073785317, 0.9471935077485946, 0.9882977390703278, 1.0659035715232383, 0.9892650573136479, 0.9770750408909029, 1.0203926396301204, 1.0924582362081292, 0.9854461598677873, 0.9416190072163207, 0.9838237064095614, 1.0611005837813217, 0.9698112418702888, 0.9465837315452004, 0.9973210736453051, 1.0773050394839414, 0.9852067325614005, 0.9564395306114757, 1.007054716799598, 1.0800927470384536, 0.9831889009361328, 0.9456966834092325, 0.9958641334421949, 1.070381364990636, 0.97949519094592, 0.9419035983228063, 1.000354556539786, 1.0766127861054116, 0.9861626155101145, 0.945492306931101, 1.004152512991354, 1.076970529356945, 0.9855320680048105, 0.9412927757234862, 1.0004931365691123, 1.0746356753894222, 0.9855244434681617, 0.9387198268983887, 1.0020621100637057, 1.0764162927125949, 0.9874702747510798, 0.9402775418740478, 1.0026935820853553, 1.0761239442123454, 0.9875202245028666, 0.9392389744486221, 1.0020720283122035, 1.0759838738036012, 0.9878443340047534, 0.937207902261047, 1.002143857847663, 1.076029739790685, 0.988286154982242, 0.9394659405825995, 1.001826225859284, 1.0759222877123753, 0.9882690625738927, 0.9397682775834645, 1.0013820011022665, 1.0755929142775709, 0.9880425474469828, 0.9385172823444655, 1.0012400626210207, 1.075381065604198, 0.9881893480564414, 0.9411496778135849, 1.0006828046790723, 1.0751059559246663, 0.9877711031269836, 0.9423702420585995, 1.0000856964774139, 1.074609037943195, 0.9870950254492831, 0.9414345595907878, 1.0003394260695204, 1.0742228465444958, 0.9871637656994168, 0.94393243014495, 1.0000190704048442, 1.073877650914278, 0.9860748878166314, 0.9458767509740087, 0.9991158214763354, 1.0734220063268547, 0.985440863261321, 0.9448816471414132, 0.9995108214777062, 1.0730768755043916, 0.9857572687451541, 0.9470750909197095, 0.9993557192428031, 1.0728165136916508, 0.9840421774748517, 0.9490637303778524, 0.9987699348167001, 1.0725548683442403, 0.9832194124034137, 0.9476469150217465, 0.9997875392446746, 1.0724745660471058, 0.9834813646458989, 0.9497735143651033, 0.9993704966791753, 1.0723763420773706, 0.981509595952121, 0.9510680824886938, 0.999446588279575, 1.072400962965477, 0.9810436975086038, 0.9488483533178284, 1.0009733145678261, 1.07253863067065, 0.9816125005430739, 0.9507300269350653, 0.9997649784752043, 1.0727696183951703, 0.9797410598806083, 0.9511594815735778, 1.0008662507241495, 1.0730865653746922, 0.9791752041814734, 0.9482513365438691, 1.0032663042452574, 1.073401040619045, 0.9795731579141528, 0.9497311789193168, 1.001464628904672, 1.073734954136104, 0.97830036927795, 0.9497871304847595, 1.0028388611424, 1.0741506605344495, 0.9782517260438485, 0.947125021570826, 1.0045523874904576, 1.0741354821413522, 0.9787349304277189, 0.9479604564675507, 1.0029553083146363, 1.0744159861576346, 0.9783958416360196, 0.9479765149223338, 1.0040724268464327, 1.0749717829469814, 0.9783669418086671, 0.9467440460089226, 1.0046348676997825, 1.074373841756277, 0.9779104103454006, 0.9461011185153719, 1.004942896357635, 1.0747245603426332, 0.9789458568581907, 0.9466430499663707, 1.0045116428803975, 1.0753908056815453, 0.9793503390847433, 0.9470779149245515, 1.0032030340739737, 1.0739796309778349, 0.9782095503351115, 0.9445326835457447, 1.006329057895586, 1.0745184892331854, 0.9802806576687733, 0.9459141830305966, 1.0040728635884875, 1.0754173352794811, 0.9805844665573495, 0.9479487386681411, 1.0014091249768557, 1.0734508419048718, 0.9782229598379752, 0.9435677057087097, 1.0077344909059263, 1.0741207886448905, 0.9810549159863644, 0.945946785102395, 1.0034682618876793, 1.0751252262015816, 0.9816169615671448, 0.9490701096153467, 0.9993642027214473};
        TsData LogAddd16 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd16, false);
        Assert.assertTrue("LogAddd16", CompareTsData.compareTS(LogAddd16, comprest.getData("d-tables.d16", TsData.class), 0.000000001));
        double[] aLogAddd16a = {1.0731665677990674, 0.9785286617169339, 0.9433717851165182, 1.0080750330256278, 1.0736992585015883, 0.9816793261313984, 0.9462450928226486, 1.0027577761195896, 1.0746293215016223, 0.9821645401607163, 0.9501737148255468, 0.997851787977935};
        TsData LogAddd16a = new TsData(TsFrequency.Monthly, 2010, 10, aLogAddd16a, false);
        Assert.assertTrue("LogAddd16a", CompareTsData.compareTS(LogAddd16a, comprest.getData("d-tables.d16a", TsData.class), 0.000000001));
        double[] aLogAddd18 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0000000000000002, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 0.9999999999999999, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0000000000000002, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0};
        TsData LogAddd18 = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddd18, false);
        Assert.assertTrue("LogAddd18", CompareTsData.compareTS(LogAddd18, comprest.getData("d-tables.d18", TsData.class), 0.000000001));
        double[] aLogAddSeriesValue = {0.9180562, 1.0272757, 1.0668658, 0.9787514, 0.9313836, 1.0250405, 1.0650804, 0.9747613, 0.9418502, 1.0156112, 1.0654049, 0.9738503, 0.9504815, 1.010104, 1.0645658, 0.9699722, 0.9592689, 1.0082833, 1.0642167, 0.9640116, 0.965041, 1.0076595, 1.0648469, 0.9615725, 0.9678711, 10.0034218, 1.066394, 0.9605819, 0.9743569, 0.996285, 1.0674977, 0.9616944, 0.9799257, 0.9869897, 1.0695324, 0.9633976, 0.9840746, 0.9803236, 1.0720522, 0.9668027, 0.9761973, 0.9852996, 1.0730376, 0.9667407, 0.9710266, 0.9903273, 1.0730635, 0.967825, 0.9660222, 0.992547, 1.0727041, 0.9699537, 0.964653, 0.9927414, 1.072418, 0.9711013, 0.9627251, 0.9940281, 1.0721618, 0.9717765, 0.9603546, 0.9962908, 1.0715377, 0.9748881, 0.9546215, 0.9984903, 1.0715511, 0.9792769, 0.9477065, 1.000862, 1.0715326, 0.9832773, 0.942155, 1.003048, 1.0724468, 0.983362, 0.9407448, 1.0021712, 1.0738647, 0.9849541, 0.9379978, 1.002259, 1.0755799, 0.9857489, 0.9344911, 1.0034349, 1.0764464, 0.986686, 0.9328302, 1.0034421, 1.076927, 0.9878056, 0.9318523, 1.0025105, 1.077559, 0.9893451, 0.9308975, 1.000813, 1.0781244, 0.9907408, 0.9303614, 1.0008349, 1.0780044, 0.989879, 0.9316045, 1.0010713, 1.077419, 0.9894252, 0.9319111, 1.001701, 1.0762305, 0.9898486, 0.9325315, 1.0023491, 1.0752361, 0.9884643, 0.9347162, 1.0023267, 1.0739461, 0.9876701, 0.9378643, 1.0009766, 1.0735102, 0.9861014, 0.9406324, 0.999855, 1.0730103, 0.9865699, 0.9411618, 0.9989676, 1.0728322, 0.9869915, 0.9418439, 0.9982591, 1.072555, 0.9861752, 0.9438692, 0.998087, 1.0721105, 0.9846667, 0.9457213, 0.9979742, 1.0716681, 0.9834916, 0.9478989, 0.9970811, 1.0713196, 0.983102, 0.9502612, 0.9942578, 1.0710793, 0.985063, 0.9511854, 0.9914698, 1.0707433, 0.9874407, 0.9515542, 0.9900275, 1.070696, 0.9845132, 0.9548301, 0.9932408, 1.0691118, 0.977684, 0.9601211, 0.9968435, 1.0677422, 0.9696101, 0.9651861, 1.0007962, 1.065838, 0.9700529, 0.9625211, 0.9996584, 1.0667989, 0.9738917, 0.9600908, 0.996862, 1.0680945, 0.977864, 0.9575264, 0.9946873, 1.070673, 0.9772387, 0.9537045, 1.0004651, 1.0713684, 0.974299, 0.9493839, 1.0071895, 1.0722726, 0.9697757, 0.946103, 1.0144437, 1.0720051, 0.9700858, 0.9426046, 1.0120981, 1.0744092, 0.9738236, 0.939198, 1.0102382, 1.0757456, 0.9792007, 0.9355581, 1.0059027, 1.0780573, 0.9789557, 0.9381395, 1.0058429, 1.0776412, 0.9771881, 0.9388107, 1.0076234, 1.0778313, 0.9752792, 0.9391388, 1.0061087, 1.0754564, 0.9793699, 0.9439685, 1.0006578, 1.0737004, 0.9810835, 0.9492386, 0.994066, 1.0730588, 0.9855865, 0.950731, 0.9875736, 1.0734068, 0.9896219, 0.9502576, 0.9861444, 1.0712624, 0.9920906, 0.9516965, 0.9867609};
        TsData LogAddSeriesValue = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddSeriesValue, false);
        DefaultSeriesDecomposition dsdLogAddSeriesValue = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataLogAddSeriesValue = dsdLogAddSeriesValue.getSeries(ComponentType.Series, ComponentInformation.Value);
        Assert.assertTrue("LogAddSeriesValue", CompareTsData.compareTS(LogAddSeriesValue, tsDataLogAddSeriesValue, 0.000000001));
        double[] aLogAddSeriesForecast = {1.0549901478366122, 0.9628795468360084, 0.9311676558782668, 1.0432940541125446, 1.0545304611823807, 0.9632666040117844, 0.9318358047776164, 0.9827890394511601, 1.0542639756625913, 0.9634661709946413, 0.9324497802289448, 0.9822853188140847};
        TsData LogAddSeriesForecast = new TsData(TsFrequency.Monthly, 2010, 10, aLogAddSeriesForecast, false);
        DefaultSeriesDecomposition dsdLogAddSeriesForecast = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataLogAddSeriesForecast = dsdLogAddSeriesForecast.getSeries(ComponentType.Series, ComponentInformation.Forecast);
        Assert.assertTrue("LogAddSeriesForecast", CompareTsData.compareTS(LogAddSeriesForecast, tsDataLogAddSeriesForecast, 0.000000001));
        double[] aLogAddTrendValue = {0.9576373681089738, 0.9665783644580039, 0.9812029446674865, 0.9995145944026871, 1.017412929224329, 1.0308615085305584, 1.0406130182882314, 1.043873879375186, 1.0394782097342574, 1.0274756965328153, 1.0093831302675451, 0.9894291150770764, 0.9741955640541708, 0.9693214497834096, 0.9772744825871957, 0.9948087646318663, 1.015815213325959, 1.0271273055199814, 1.0254418102597807, 1.0221628024304636, 1.0359456298698146, 1.0817514420289511, 1.1671531876408812, 1.2771814641882726, 1.3740265972206709, 1.4155081880177227, 1.3806044699480922, 1.2871866667927527, 1.1769674298968849, 1.0884276825617571, 1.0367297609966601, 1.015965838142027, 1.0134660027053433, 1.0140337281639393, 1.0066325877124858, 0.9929872203709723, 0.982727543489891, 0.9806928156261263, 0.987724690664252, 1.0011562105270981, 1.0156584704319949, 1.0269606171324503, 1.0312766467494578, 1.0289306778669327, 1.0219024619052488, 1.0135627928474416, 1.0045058622816312, 0.9960834135177018, 0.9901593984087346, 0.9899791174651056, 0.9955131748488655, 1.0047053878114376, 1.0142537679009573, 1.021269767621667, 1.0232296999103807, 1.0204291094538782, 1.0150692057329391, 1.0096686805703887, 1.0050636200523904, 1.0014482499427755, 0.9994394932374883, 1.0002653989505041, 1.003822595560607, 1.0085885310672689, 1.013198750850149, 1.0161043867718123, 1.0163485076870786, 1.0139354752391199, 1.010279405629698, 1.0069474387197401, 1.0050609173886205, 1.0042037837083824, 1.0042049742755637, 1.0050963535749866, 1.0066855644565538, 1.0081173403738848, 1.0094429193472272, 1.0103781109468715, 1.0107786445786238, 1.0100545122531526, 1.0089376222879338, 1.007787144413413, 1.0070941874161756, 1.006492433879409, 1.0064428093252484, 1.0068446942926732, 1.0075962247445098, 1.0080451307732183, 1.0084427877026334, 1.0086711742289494, 1.0086366832614535, 1.008259797144667, 1.0081861116406325, 1.008380609018534, 1.0087143022008167, 1.0089167734594615, 1.0093624976102349, 1.0097826932087675, 1.010006331269708, 1.0097339244949914, 1.0094800982950087, 1.0092716718419357, 1.0089776119044318, 1.0083605421906512, 1.008038771626997, 1.0082105301871744, 1.00851273074986, 1.008484928688492, 1.008622076353453, 1.0089907173334132, 1.0092257021210422, 1.0089508227420847, 1.008795878579788, 1.008852108409343, 1.008808323917304, 1.0083379758240354, 1.0080546515286906, 1.0081473930521274, 1.0082443628067992, 1.0079483345914115, 1.007815110978465, 1.0079684770535882, 1.0080895969609467, 1.007879907830796, 1.007874506433058, 1.0081391009748488, 1.0083888523557416, 1.0082387888534687, 1.0081449918342955, 1.0082225306925725, 1.0082527978578686, 1.007933089025768, 1.0077612836079664, 1.0079429453709614, 1.0081122555327362, 1.0079190685325488, 1.0078640256957747, 1.0081893715104664, 1.0084289526020627, 1.0082209439029377, 1.0080974011933368, 1.0082514795061706, 1.0082780182101898, 1.007974287990197, 1.0078771918031761, 1.008055698453101, 1.0080990555667102, 1.0078659325976669, 1.0078825213720959, 1.008235788489814, 1.008565300001538, 1.008661911884377, 1.0088833487753888, 1.009253082626586, 1.0092950913236223, 1.0089524581087332, 1.0088475549976341, 1.0092294263367692, 1.0094226866318623, 1.0088422491012212, 1.0080524908763697, 1.0075539862092584, 1.0069048680573203, 1.0056621410090545, 1.0048620997924944, 1.0051262677073944, 1.0056268688944763, 1.005438805030279, 1.0050871025341186, 1.005079963147047, 1.004994987468088, 1.0045848506667368, 1.0043905855119981, 1.0046061052713686, 1.0047388762068976, 1.004687595738453, 1.0049020280783194, 1.0055333261338089, 1.0062854845673481, 1.0068049406775217, 1.0073309620196818, 1.0080220656565393, 1.008444366906344, 1.0081272622277642, 1.007807026815647, 1.0081982069416333, 1.0087233726863096, 1.0085721958042484, 1.00803567936312, 1.0077874468621784, 1.007401867839915, 1.0062638702458313, 1.00501520567488, 1.0045350694326403, 1.0048516467743545, 1.0051073083169, 1.00534318076356, 1.0057732686650676, 1.0065695695588521, 1.00723375877716, 1.0077056951629422, 1.008145425763507, 1.0085874161508317, 1.0086353494247136, 1.0084525595858418, 1.0082485315841692, 1.0082073952152022, 1.0079384732437997, 1.0077270478508917, 1.0076439458498905, 1.0077495100361398, 1.007714442120687, 1.0079428285707641, 1.0082055286150284, 1.0082005166341954, 1.0078801155433668, 1.007852733215121, 1.0079570544522796, 1.0079005496528246, 1.0077978511889751, 1.0080024322001455, 1.00800274385217, 1.0076108001123938, 1.0071889109966912, 1.007668579814826, 1.008902736315165, 1.0103251331628498, 1.0114844366874496, 1.012716149720518, 1.0137779595395728, 1.0138615266410078, 1.0129616006560842, 1.012036538466985, 1.0113825573248159, 1.0099660192957647, 1.0069786865645507, 1.0033553495809384, 1.0000681325349492};
        TsData LogAddTrendValue = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddTrendValue, false);
        DefaultSeriesDecomposition dsdLogAddTrendValue = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataLogAddTrendValue = dsdLogAddTrendValue.getSeries(ComponentType.Trend, ComponentInformation.Value);
        Assert.assertTrue("LogAddTrendValue", CompareTsData.compareTS(LogAddTrendValue, tsDataLogAddTrendValue, 0.000000001));
        double[] aLogAddTrendForecast = {0.9972542329221292, 0.9951095145363206, 0.9941984013913718, 0.9940339521976851, 0.9932658999289911, 0.9920683547043329, 0.9908270721579322, 0.9891167715341833, 0.9875067693277965, 0.9860771629501989, 0.9828190577663198, 0.979685217364707};
        TsData LogAddTrendForecast = new TsData(TsFrequency.Monthly, 2010, 10, aLogAddTrendForecast, false);
        DefaultSeriesDecomposition dsdLogAddTrendForecast = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataLogAddTrendForecast = dsdLogAddTrendForecast.getSeries(ComponentType.Trend, ComponentInformation.Forecast);
        Assert.assertTrue("LogAddTrendForecast", CompareTsData.compareTS(LogAddTrendForecast, tsDataLogAddTrendForecast, 0.000000001));
        double[] aLogAddSeasonalValue = {1.0512596033862516, 1.1159371672748457, 1.156510993041138, 1.0130145878129475, 0.9115681682395123, 0.9541413180861085, 1.0109681583031285, 0.9185761570926883, 0.9186084117397356, 0.9577859437490683, 1.0228064897820093, 1.010392984452154, 1.046624347023645, 1.105068429698562, 1.1502285394358112, 1.0090378743790847, 0.91727897166468, 0.9557240651467512, 1.0153649859264255, 0.9227725372614647, 0.923764938072131, 0.9626784575115412, 1.0303682809831687, 1.007825169543336, 1.0362007162346774, 1.0852912451501031, 1.1393280518840592, 1.002971804502489, 0.9254088302444021, 0.9586795788116844, 1.024608122341918, 0.9314609990997849, 0.9327132700164633, 0.968463076319649, 1.0379930200157752, 1.0030410784521362, 1.0216541993499944, 1.0644554891981746, 1.1263942473221826, 0.9972287161945778, 0.9289588915048118, 0.9625502333691227, 1.0359128918115654, 0.9437164752285452, 0.9422430402518382, 0.9790453937414992, 1.0538030741436168, 0.9953224597503153, 0.9994789045240806, 1.0388848885478432, 1.1082395051560405, 0.9899895768211115, 0.937422536299475, 0.9723129340007545, 1.0495678521238425, 0.957338073785317, 0.9471935077485946, 0.9882977390703278, 1.0659035715232383, 0.9892650573136479, 0.9770750408909029, 1.0203926396301204, 1.0924582362081292, 0.9854461598677873, 0.9416190072163207, 0.9838237064095614, 1.0611005837813217, 0.9698112418702888, 0.9465837315452004, 0.997321073645305, 1.0773050394839414, 0.9852067325614005, 0.9564395306114757, 1.007054716799598, 1.0800927470384536, 0.9831889009361329, 0.9456966834092325, 0.9958641334421948, 1.070381364990636, 0.97949519094592, 0.9419035983228063, 1.000354556539786, 1.0766127861054116, 0.9861626155101145, 0.945492306931101, 1.004152512991354, 1.076970529356945, 0.9855320680048105, 0.9412927757234862, 1.0004931365691123, 1.0746356753894222, 0.9855244434681618, 0.9387198268983887, 1.0020621100637057, 1.0764162927125949, 0.9874702747510798, 0.9402775418740478, 1.0026935820853553, 1.0761239442123454, 0.9875202245028666, 0.9392389744486221, 1.0020720283122035, 1.075983873803601, 0.9878443340047534, 0.937207902261047, 1.002143857847663, 1.076029739790685, 0.9882861549822421, 0.9394659405825995, 1.001826225859284, 1.0759222877123753, 0.9882690625738927, 0.9397682775834645, 1.0013820011022665, 1.0755929142775709, 0.9880425474469828, 0.9385172823444655, 1.0012400626210207, 1.075381065604198, 0.9881893480564414, 0.9411496778135849, 1.0006828046790723, 1.0751059559246663, 0.9877711031269836, 0.9423702420585995, 1.0000856964774139, 1.074609037943195, 0.9870950254492831, 0.9414345595907878, 1.0003394260695204, 1.0742228465444958, 0.9871637656994168, 0.94393243014495, 1.0000190704048442, 1.073877650914278, 0.9860748878166314, 0.9458767509740087, 0.9991158214763354, 1.0734220063268547, 0.985440863261321, 0.9448816471414132, 0.9995108214777062, 1.0730768755043916, 0.9857572687451541, 0.9470750909197095, 0.9993557192428031, 1.0728165136916508, 0.9840421774748517, 0.9490637303778523, 0.9987699348167001, 1.0725548683442403, 0.9832194124034136, 0.9476469150217466, 0.9997875392446746, 1.0724745660471058, 0.9834813646458989, 0.9497735143651032, 0.9993704966791753, 1.0723763420773706, 0.981509595952121, 0.9510680824886939, 0.999446588279575, 1.072400962965477, 0.9810436975086038, 0.9488483533178284, 1.0009733145678261, 1.07253863067065, 0.9816125005430739, 0.9507300269350653, 0.9997649784752043, 1.0727696183951703, 0.9797410598806083, 0.9511594815735777, 1.0008662507241495, 1.0730865653746922, 0.9791752041814734, 0.948251336543869, 1.0032663042452574, 1.073401040619045, 0.9795731579141528, 0.9497311789193169, 1.001464628904672, 1.073734954136104, 0.97830036927795, 0.9497871304847594, 1.0028388611424, 1.0741506605344495, 0.9782517260438485, 0.947125021570826, 1.0045523874904576, 1.0741354821413522, 0.9787349304277189, 0.9479604564675507, 1.0029553083146363, 1.0744159861576346, 0.9783958416360196, 0.9479765149223338, 1.0040724268464327, 1.0749717829469814, 0.9783669418086671, 0.9467440460089226, 1.0046348676997825, 1.074373841756277, 0.9779104103454007, 0.9461011185153719, 1.004942896357635, 1.0747245603426332, 0.9789458568581906, 0.9466430499663707, 1.0045116428803975, 1.0753908056815453, 0.9793503390847433, 0.9470779149245515, 1.0032030340739737, 1.0739796309778349, 0.9782095503351115, 0.9445326835457447, 1.006329057895586, 1.0745184892331854, 0.9802806576687733, 0.9459141830305966, 1.0040728635884875, 1.0754173352794811, 0.9805844665573497, 0.9479487386681411, 1.0014091249768557, 1.0734508419048718, 0.9782229598379752, 0.9435677057087097, 1.0077344909059263, 1.0741207886448905, 0.9810549159863645, 0.945946785102395, 1.0034682618876793, 1.0751252262015816, 0.9816169615671447, 0.9490701096153467, 0.9993642027214473};
        TsData LogAddSeasonalValue = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddSeasonalValue, false);
        DefaultSeriesDecomposition dsdLogAddSeasonalValue = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataLogAddSeasonalValue = dsdLogAddSeasonalValue.getSeries(ComponentType.Seasonal, ComponentInformation.Value);
        Assert.assertTrue("LogAddSeasonalValue", CompareTsData.compareTS(LogAddSeasonalValue, tsDataLogAddSeasonalValue, 0.000000001));
        double[] aLogAddSeasonalForecast = {1.0731665677990674, 0.9785286617169339, 0.9433717851165182, 1.0080750330256278, 1.0736992585015883, 0.9816793261313984, 0.9462450928226486, 1.0027577761195896, 1.0746293215016223, 0.9821645401607163, 0.9501737148255468, 0.997851787977935};
        TsData LogAddSeasonalForecast = new TsData(TsFrequency.Monthly, 2010, 10, aLogAddSeasonalForecast, false);
        DefaultSeriesDecomposition dsdLogAddSeasonalForecast = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataLogAddSeasonalForecast = dsdLogAddSeasonalForecast.getSeries(ComponentType.Seasonal, ComponentInformation.Forecast);
        Assert.assertTrue("LogAddSeasonalForecast", CompareTsData.compareTS(LogAddSeasonalForecast, tsDataLogAddSeasonalForecast, 0.000000001));
        double[] aLogAddIrregularValue = {0.9119230797605978, 0.9523798601929145, 0.9401587346213489, 0.9666462200174899, 1.0042507919561328, 1.0421446378897508, 1.012408215785385, 1.016564827936786, 0.9863613051636391, 1.032018456797465, 1.0319654863314953, 0.9741306192495243, 0.9321948242066386, 0.942994361250896, 0.9470476086010247, 0.9663005273255509, 1.0294949351647322, 1.0271308597198492, 1.0221081842121513, 1.022039136553981, 1.0084336470981867, 0.9676205149252911, 0.8854556828559677, 0.7470406375118064, 0.6797958275740983, 6.511632707431587, 0.677953063061745, 0.7440534628365788, 0.8945816406179438, 0.9547958800709068, 1.0049479944555277, 1.0162330306376357, 1.0366587257033504, 1.005025665600237, 1.0235958740426094, 0.9672598954491427, 0.9801464458947368, 0.9390937673416163, 0.9635840407005808, 0.9683697910113876, 1.0346498792364769, 0.9967611756656766, 1.004422699724008, 0.9955941816702241, 1.0084601542987108, 0.9979878712617596, 1.0137094285671995, 0.9761966740176513, 0.9761315741710381, 0.965067339517836, 0.9722977960116079, 0.9751729605421379, 1.0145865469865092, 0.9997458149673907, 0.9985744217215212, 0.9940686211984362, 1.0013085612553576, 0.9961665965160714, 1.0008036003482275, 0.9809010768641434, 0.9834384739306095, 0.9761207763954964, 0.9771149205557511, 0.9808618479868588, 1.000601959851179, 0.9988223246288789, 0.9936047960911566, 0.9958822177734751, 0.9909992437243091, 0.9966264366209655, 0.9896333255679146, 0.9938636086019506, 0.9809400612171105, 0.9909710127755763, 0.9863268754280731, 0.9921226614700969, 0.9854581700268358, 0.9959966958639632, 0.9925558862753542, 0.995563282945206, 0.9870315774909757, 0.9941620847424248, 0.9920031587232374, 0.9931326314789903, 0.982037492458721, 0.9924920499134581, 0.9919780417516334, 0.9931806042503878, 0.9827127888236392, 0.9943255399091191, 0.993551200345011, 0.9941035687419878, 0.9846239156768649, 0.9921327902005203, 0.9924133946752575, 0.9930438671664399, 0.9808410554458031, 0.9884547205274888, 0.9919333320049063, 0.9935897478979592, 0.9812458128478377, 0.9895902734786379, 0.9929634005482764, 0.9937514025297959, 0.9860941887738648, 0.9907947861439006, 0.9928393244913204, 0.9927293083716588, 0.9834787379394994, 0.9909655116124699, 0.9911424780736046, 0.9927126914935097, 0.9836473594053748, 0.9921828540248112, 0.9909397444591609, 0.9921542981199754, 0.9879919758480272, 0.9929949712201791, 0.9904995833600365, 0.991593032786028, 0.9887817476079195, 0.9923857914455475, 0.9905029525054753, 0.9905045409682393, 0.9903573068753231, 0.9916977948023364, 0.9902055724944597, 0.9913008904962282, 0.9916334262245555, 0.9904843514259036, 0.9905307890522643, 0.9919562173229035, 0.9901029458621872, 0.9903735799157496, 0.9907312758742399, 0.9922440798981443, 0.9900914717989936, 0.9908557819451527, 0.9904299138345545, 0.9910668937298656, 0.9928491350657651, 0.9902912584479601, 0.99048788579858, 0.9898085770515114, 0.9930474205769099, 0.989750780487661, 0.9905819101258903, 0.9912474900944553, 0.9934309967772109, 0.9873506966251437, 0.9901433740392752, 0.9932714225328814, 0.9948959619918114, 0.9825885204192497, 0.9891911059750017, 0.9951170925974869, 0.9930884482441686, 0.981591590887775, 0.9891129652993226, 0.9942686173751267, 0.9959358071938378, 0.9863399768798011, 0.9900964130649283, 0.990964404251157, 1.0069843927241746, 0.9907951201034852, 0.9899576030067444, 0.9824295286335407, 1.0100669205709973, 0.9959719630731203, 0.9886005296417295, 0.9855927143746904, 1.007521410457033, 0.9942137415161751, 0.989451690467859, 0.9899635788300888, 1.0075465537929553, 0.988148796497702, 0.988840985158262, 0.991508047912219, 1.0008704749983302, 0.9853282152144052, 0.9887985371016152, 0.9908617883047816, 0.9963459713256637, 0.9895206633880899, 0.9887842704974668, 0.9874944024597972, 0.9943943502701651, 0.9948776052705879, 0.9909309517017686, 0.984678214924213, 0.9930601749769654, 1.006888231945316, 0.9929387082783487, 0.9864682650632204, 0.9890486171491065, 1.0022071108410393, 0.9929533770100741, 0.988207742136317, 0.9844436534405481, 0.9974528036470669, 0.9927516265288067, 0.9927467206193047, 0.9805680414845112, 0.9927662192520369, 0.9949351911615191, 0.9921340254227221, 0.9834182329555449, 0.9937292652458347, 0.9943866202157017, 0.9901536866674773, 0.9834593694168757, 0.9962316452764606, 0.9954233661507645, 0.9892092901163304, 0.9865423091702802, 0.9918885170501779, 0.9930274037931968, 0.9913405950765222, 0.9900204941332805, 0.9886865836009912, 0.9908622164373702, 0.9933676824289982, 0.9937401114361192, 0.9839077367053829, 0.9894189016375512, 0.9960879570159793, 0.9949399071952555, 0.9666750369591943, 0.9856723572229059, 0.9958249353177954, 0.9926095599833522, 0.9716758579819018, 0.9865748676689876, 1.0036655143944384, 0.9994139470404618, 0.9873214103245093};
        TsData LogAddIrregularValue = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddIrregularValue, false);
        DefaultSeriesDecomposition dsdLogAddIrregularValue = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataLogAddIrregularValue = dsdLogAddIrregularValue.getSeries(ComponentType.Irregular, ComponentInformation.Value);
        Assert.assertTrue("LogAddIrregularValue", CompareTsData.compareTS(LogAddIrregularValue, tsDataLogAddIrregularValue, 0.000000001));
        double[] aLogAddIrregularForecast = {0.9857695091468386, 0.9888434292622867, 0.9928232498308388, 1.041148445826942, 0.9888056749603489, 0.9890887500198029, 0.9938890119296468, 0.9908700462791371, 0.9934604886456054, 0.9948126958498299, 0.9985018400863085, 1.004812567670359};
        TsData LogAddIrregularForecast = new TsData(TsFrequency.Monthly, 2010, 10, aLogAddIrregularForecast, false);
        DefaultSeriesDecomposition dsdLogAddIrregularForecast = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataLogAddIrregularForecast = dsdLogAddIrregularForecast.getSeries(ComponentType.Irregular, ComponentInformation.Forecast);
        Assert.assertTrue("LogAddIrregularForecast", CompareTsData.compareTS(LogAddIrregularForecast, tsDataLogAddIrregularForecast, 0.000000001));
        double[] aLogAddSeasonallyAdjustedValue = {0.8732916180197687, 0.9205497676080098, 0.9224865188653255, 0.966177004531672, 1.0217377399199412, 1.074306793522061, 1.0535251691682326, 1.0611654705747413, 1.025301083642645, 1.0603738827326967, 1.0416485529213544, 0.9638331965735413, 0.9081400625763649, 0.9140646613852987, 0.9255254616810075, 0.9612842338518522, 1.0457766171823568, 1.0549941523604707, 1.0481124666998458, 1.0446903880136285, 1.0446824297250454, 1.04672488735723, 1.0334624227600757, 0.9541064552254694, 0.9340575477664482, 9.217269414733424, 0.9359850292780458, 0.9577356967442212, 1.05289345439104, 1.0392262670650905, 1.0418594941059522, 1.0324580427193777, 1.0506183749081894, 1.0191299225890529, 1.0303849634593356, 0.9604767149583615, 0.963216909034482, 0.9209625108311961, 0.9517557485299911, 0.9694894303578788, 1.0508509137779682, 1.02363447209529, 1.0358376736904125, 1.0243973962263178, 1.0305479144111998, 1.011523374023942, 1.0182770636459144, 0.9723733153201293, 0.9665258522489661, 0.9553965130702646, 0.9679352658060704, 0.9797615275047163, 1.0290482281426887, 1.0210101761324812, 1.021771005876294, 1.0143765578655648, 1.016397485967068, 1.0057982131326766, 1.0058712895274553, 0.9823216667925803, 0.9828872500154572, 0.9763798378251171, 0.9808500357132705, 0.9892860104409927, 1.0138086558194255, 1.014907745661023, 1.009848751737971, 1.0097603097603371, 1.0011861269292752, 1.0035504377158626, 0.9946417780736396, 0.9980415962481456, 0.9850648889403983, 0.9960213514392432, 0.9929210273289787, 1.000176058805894, 0.9947637720464653, 1.0063332600763568, 1.0032542933979371, 1.0055731861723674, 0.9958532929168535, 1.0019037684666539, 0.9990406150486583, 0.9995804794223512, 0.9883645727728776, 0.9992853545830243, 0.9995133298983976, 1.0011708720930061, 0.99100962427234, 1.0029475099059653, 1.0021321873664277, 1.002314662560586, 0.9926841569746325, 1.0004474672096582, 1.001061584904596, 1.0018986143652706, 0.9900241774834347, 0.9981244698091672, 1.0018589455224127, 1.0032612754829955, 0.990548119605201, 0.9987654297523032, 1.0018778405937037, 1.002059703057665, 0.9940211747601267, 0.9989297366448301, 1.0012910983385879, 1.0011525457601684, 0.9919583667100114, 0.9998750024145389, 1.0002864633358233, 1.001598286828886, 0.9922994021440336, 1.00096576421053, 0.9996682627108876, 1.0004268566714125, 0.9959499069266255, 1.0010852915494959, 0.9986656212852401, 0.9994745459891238, 0.9965091866989559, 1.0002935948529883, 0.9985157221798723, 0.9983096254570539, 0.9981558818593389, 0.9997693232907676, 0.9985122608439484, 0.9994680092232822, 0.999710272383769, 0.9986286394060159, 0.9987054394263077, 0.9998254943045902, 0.9977874156261065, 0.9982400631578638, 0.9987683411484055, 1.0001017287678735, 0.9978775765743882, 0.9989702680567952, 0.998778200633931, 0.9992143990672775, 1.00088863283685, 0.9984626264721833, 0.9986871625541931, 0.9977015957000872, 1.0008698455784435, 0.997723914318991, 0.9986046880593777, 0.9990445760391448, 1.0012617378410098, 0.995482308127819, 0.9986242490824566, 1.001875052072131, 1.0037339698174106, 0.9916804931866239, 0.9983857276415543, 1.0040258366822503, 1.001874852907524, 0.9906511181686658, 0.9984330668148502, 1.0030601881634844, 1.0039555711947161, 0.9937907754627914, 0.9969328981611677, 0.9965753844429807, 1.011880451331084, 0.9958742011323157, 0.9955279646499533, 0.9877727712957673, 1.0152052345622635, 1.0010314639410238, 0.993538576898235, 0.9901115097883221, 1.0119450193648134, 0.9987931946718399, 0.9941405795416918, 0.9946041278834363, 1.0124855752898623, 0.9936165460574545, 0.9950563299100356, 0.998255201359547, 1.0082078184371637, 0.9932325828500957, 0.9971483147453576, 0.9989147818898059, 1.004124471041465, 0.9976329585595677, 0.997409804195377, 0.9959593978332819, 1.0023849844294341, 1.0026251617560038, 0.9982656916447463, 0.9908461114963951, 0.9980405760020072, 1.0114545399880965, 0.9977560961594991, 0.9915064626377357, 0.9943332826944833, 1.0079931217499658, 0.9994766532890389, 0.9953561985646531, 0.992029476139054, 1.005577481411776, 1.0012767978802246, 1.001319435442091, 0.9888563512831312, 1.0009550827672336, 1.0031010174888944, 1.0000100548378037, 0.9910171526990318, 1.0013252779388253, 1.0020926293088663, 0.9977921699738583, 0.9912708185944658, 1.0044062525489734, 1.0035863520229507, 0.997004373619019, 0.9942893627296239, 0.9997810279909369, 1.0008728661034805, 0.9990709215145189, 0.9979430660143367, 0.9965987890796268, 0.9984034707055984, 1.0005089142849697, 1.001360686795861, 0.9926672078437218, 0.9996347835507995, 1.0075274660934603, 1.0075917120180686, 0.9799938465063331, 0.9993352808618562, 1.0087324204527555, 1.0045571431347888, 0.9827360141365205, 0.9964070918368932, 1.0106697814350458, 1.002767330208848, 0.9873886790350043};
        TsData LogAddSeasonallyAdjustedValue = new TsData(TsFrequency.Monthly, 1991, 0, aLogAddSeasonallyAdjustedValue, false);
        DefaultSeriesDecomposition dsdLogAddSeasonallyAdjustedValue = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataLogAddSeasonallyAdjustedValue = dsdLogAddSeasonallyAdjustedValue.getSeries(ComponentType.SeasonallyAdjusted, ComponentInformation.Value);
        Assert.assertTrue("LogAddSeasonallyAdjustedValue", CompareTsData.compareTS(LogAddSeasonallyAdjustedValue, tsDataLogAddSeasonallyAdjustedValue, 0.000000001));
        double[] aLogAddSeasonallyAdjustedForecast = {0.9830628156822544, 0.9840075048456246, 0.9870632878460065, 1.0349369044298327, 0.9821469585943844, 0.9812436488887111, 0.9847721397401922, 0.9800861811855469, 0.9810489575972359, 0.9809620807904393, 0.9813466376515623, 0.984400018768925};
        TsData LogAddSeasonallyAdjustedForecast = new TsData(TsFrequency.Monthly, 2010, 10, aLogAddSeasonallyAdjustedForecast, false);
        DefaultSeriesDecomposition dsdLogAddSeasonallyAdjustedForecast = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataLogAddSeasonallyAdjustedForecast = dsdLogAddSeasonallyAdjustedForecast.getSeries(ComponentType.SeasonallyAdjusted, ComponentInformation.Forecast);
        Assert.assertTrue("LogAddSeasonallyAdjustedForecast", CompareTsData.compareTS(LogAddSeasonallyAdjustedForecast, tsDataLogAddSeasonallyAdjustedForecast, 0.000000001));
    }

    @Test
    public void SeasonallyAdjustedTestMult() {
        X13Specification x13spec = getX13Spec(DecompositionMode.Multiplicative);
        SequentialProcessing<TsData> processing = X13ProcessingFactory.instance.generateProcessing(x13spec);
        CompositeResults comprest = processing.process(TsdUEMPLOMENSEASONAL);
        //   utilities.WriteOutPutTest.writeAllToOutput(comprest, "Mult");
        double[] aMulta1 = {0.9180562, 1.0272757, 1.0668658, 0.9787514, 0.9313836, 1.0250405, 1.0650804, 0.9747613, 0.9418502, 1.0156112, 1.0654049, 0.9738503, 0.9504815, 1.010104, 1.0645658, 0.9699722, 0.9592689, 1.0082833, 1.0642167, 0.9640116, 0.965041, 1.0076595, 1.0648469, 0.9615725, 0.9678711, 10.0034218, 1.066394, 0.9605819, 0.9743569, 0.996285, 1.0674977, 0.9616944, 0.9799257, 0.9869897, 1.0695324, 0.9633976, 0.9840746, 0.9803236, 1.0720522, 0.9668027, 0.9761973, 0.9852996, 1.0730376, 0.9667407, 0.9710266, 0.9903273, 1.0730635, 0.967825, 0.9660222, 0.992547, 1.0727041, 0.9699537, 0.964653, 0.9927414, 1.072418, 0.9711013, 0.9627251, 0.9940281, 1.0721618, 0.9717765, 0.9603546, 0.9962908, 1.0715377, 0.9748881, 0.9546215, 0.9984903, 1.0715511, 0.9792769, 0.9477065, 1.000862, 1.0715326, 0.9832773, 0.942155, 1.003048, 1.0724468, 0.983362, 0.9407448, 1.0021712, 1.0738647, 0.9849541, 0.9379978, 1.002259, 1.0755799, 0.9857489, 0.9344911, 1.0034349, 1.0764464, 0.986686, 0.9328302, 1.0034421, 1.076927, 0.9878056, 0.9318523, 1.0025105, 1.077559, 0.9893451, 0.9308975, 1.000813, 1.0781244, 0.9907408, 0.9303614, 1.0008349, 1.0780044, 0.989879, 0.9316045, 1.0010713, 1.077419, 0.9894252, 0.9319111, 1.001701, 1.0762305, 0.9898486, 0.9325315, 1.0023491, 1.0752361, 0.9884643, 0.9347162, 1.0023267, 1.0739461, 0.9876701, 0.9378643, 1.0009766, 1.0735102, 0.9861014, 0.9406324, 0.999855, 1.0730103, 0.9865699, 0.9411618, 0.9989676, 1.0728322, 0.9869915, 0.9418439, 0.9982591, 1.072555, 0.9861752, 0.9438692, 0.998087, 1.0721105, 0.9846667, 0.9457213, 0.9979742, 1.0716681, 0.9834916, 0.9478989, 0.9970811, 1.0713196, 0.983102, 0.9502612, 0.9942578, 1.0710793, 0.985063, 0.9511854, 0.9914698, 1.0707433, 0.9874407, 0.9515542, 0.9900275, 1.070696, 0.9845132, 0.9548301, 0.9932408, 1.0691118, 0.977684, 0.9601211, 0.9968435, 1.0677422, 0.9696101, 0.9651861, 1.0007962, 1.065838, 0.9700529, 0.9625211, 0.9996584, 1.0667989, 0.9738917, 0.9600908, 0.996862, 1.0680945, 0.977864, 0.9575264, 0.9946873, 1.070673, 0.9772387, 0.9537045, 1.0004651, 1.0713684, 0.974299, 0.9493839, 1.0071895, 1.0722726, 0.9697757, 0.946103, 1.0144437, 1.0720051, 0.9700858, 0.9426046, 1.0120981, 1.0744092, 0.9738236, 0.939198, 1.0102382, 1.0757456, 0.9792007, 0.9355581, 1.0059027, 1.0780573, 0.9789557, 0.9381395, 1.0058429, 1.0776412, 0.9771881, 0.9388107, 1.0076234, 1.0778313, 0.9752792, 0.9391388, 1.0061087, 1.0754564, 0.9793699, 0.9439685, 1.0006578, 1.0737004, 0.9810835, 0.9492386, 0.994066, 1.0730588, 0.9855865, 0.950731, 0.9875736, 1.0734068, 0.9896219, 0.9502576, 0.9861444, 1.0712624, 0.9920906, 0.9516965, 0.9867609};
        TsData Multa1 = new TsData(TsFrequency.Monthly, 1991, 0, aMulta1, false);
        Assert.assertTrue("Multa1", CompareTsData.compareTS(Multa1, comprest.getData("a-tables.a1", TsData.class), 0.000000001));
        double[] aMulta1a = {1.0549901478366122, 0.9628795468360084, 0.9311676558782668, 1.0432940541125446, 1.0545304611823807, 0.9632666040117844, 0.9318358047776164, 0.9827890394511601, 1.0542639756625913, 0.9634661709946413, 0.9324497802289448, 0.9822853188140847};
        TsData Multa1a = new TsData(TsFrequency.Monthly, 2010, 10, aMulta1a, false);
        Assert.assertTrue("Multa1a", CompareTsData.compareTS(Multa1a, comprest.getData("a-tables.a1a", TsData.class), 0.000000001));
        double[] aMulta6 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData Multa6 = new TsData(TsFrequency.Monthly, 1991, 0, aMulta6, false);
        Assert.assertTrue("Multa6", CompareTsData.compareTS(Multa6, comprest.getData("a-tables.a6", TsData.class), 0.000000001));
        double[] aMulta7 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData Multa7 = new TsData(TsFrequency.Monthly, 1991, 0, aMulta7, false);
        Assert.assertTrue("Multa7", CompareTsData.compareTS(Multa7, comprest.getData("a-tables.a7", TsData.class), 0.000000001));
        double[] aMulta8 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData Multa8 = new TsData(TsFrequency.Monthly, 1991, 0, aMulta8, false);
        Assert.assertTrue("Multa8", CompareTsData.compareTS(Multa8, comprest.getData("a-tables.a8", TsData.class), 0.000000001));
        double[] aMulta8t = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData Multa8t = new TsData(TsFrequency.Monthly, 1991, 0, aMulta8t, false);
        Assert.assertTrue("Multa8t", CompareTsData.compareTS(Multa8t, comprest.getData("a-tables.a8t", TsData.class), 0.000000001));
        double[] aMulta8s = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData Multa8s = new TsData(TsFrequency.Monthly, 1991, 0, aMulta8s, false);
        Assert.assertTrue("Multa8s", CompareTsData.compareTS(Multa8s, comprest.getData("a-tables.a8s", TsData.class), 0.000000001));
        double[] aMulta8i = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData Multa8i = new TsData(TsFrequency.Monthly, 1991, 0, aMulta8i, false);
        Assert.assertTrue("Multa8i", CompareTsData.compareTS(Multa8i, comprest.getData("a-tables.a8i", TsData.class), 0.000000001));
        double[] aMulta9 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData Multa9 = new TsData(TsFrequency.Monthly, 1991, 0, aMulta9, false);
        Assert.assertTrue("Multa9", CompareTsData.compareTS(Multa9, comprest.getData("a-tables.a9", TsData.class), 0.000000001));
        double[] aMulta9sa = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData Multa9sa = new TsData(TsFrequency.Monthly, 1991, 0, aMulta9sa, false);
        Assert.assertTrue("Multa9sa", CompareTsData.compareTS(Multa9sa, comprest.getData("a-tables.a9sa", TsData.class), 0.000000001));
        double[] aMulta9u = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData Multa9u = new TsData(TsFrequency.Monthly, 1991, 0, aMulta9u, false);
        Assert.assertTrue("Multa9u", CompareTsData.compareTS(Multa9u, comprest.getData("a-tables.a9u", TsData.class), 0.000000001));
        double[] aMulta9ser = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
        TsData Multa9ser = new TsData(TsFrequency.Monthly, 1991, 0, aMulta9ser, false);
        Assert.assertTrue("Multa9ser", CompareTsData.compareTS(Multa9ser, comprest.getData("a-tables.a9ser", TsData.class), 0.000000001));
        double[] aMultd1 = {0.9180562, 1.0272757, 1.0668658, 0.9787514, 0.9313836, 1.0250405, 1.0650804, 0.9747613, 0.9418502, 1.0156112, 1.0654049, 0.9738503, 0.9504815, 1.010104, 1.0645658, 0.9699722, 0.9592689, 1.0082833, 1.0642167, 0.9640116, 0.965041, 1.0076595, 1.2745146238932061, 2.0142201709649594, 2.5992826864363923, 2.9090195027515384, 2.7813883950658247, 1.9534226071885792, 0.9869874620635498, 0.996285, 1.0674977, 0.9616944, 0.9799257, 0.9869897, 1.0695324, 0.9633976, 0.9840746, 0.9803236, 1.0720522, 0.9668027, 0.9761973, 0.9852996, 1.0730376, 0.9667407, 0.9710266, 0.9903273, 1.0730635, 0.967825, 0.9660222, 0.992547, 1.0727041, 0.9699537, 0.964653, 0.9927414, 1.072418, 0.9711013, 0.9627251, 0.9940281, 1.0721618, 0.9717765, 0.978521788427032, 1.0419290354142463, 1.0924833512026715, 0.9748881, 0.9485065404920809, 0.9844707408031161, 1.0715511, 0.9792769, 0.9477065, 1.000862, 1.0715326, 0.9832773, 0.942155, 1.003048, 1.0724468, 0.983362, 0.9407448, 1.0021712, 1.0738647, 0.9849541, 0.9379978, 1.002259, 1.0755799, 0.9857489, 0.9344911, 1.0034349, 1.0764464, 0.986686, 0.9328302, 1.0034421, 1.076927, 0.9878056, 0.9318523, 1.0025105, 1.077559, 0.9893451, 0.9308975, 1.000813, 1.0781244, 0.9907408, 0.9303614, 1.0008349, 1.0780044, 0.989879, 0.9316045, 1.0010713, 1.077419, 0.9894252, 0.9345066152322914, 1.001701, 1.0762305, 0.9898486, 0.9352885331300965, 1.0023491, 1.0752361, 0.9884643, 0.9347162, 1.0023267, 1.0739461, 0.9876701, 0.9378643, 1.0009766, 1.0735102, 0.9861014, 0.9406324, 0.999855, 1.0730103, 0.9865699, 0.9411618, 0.9989676, 1.0728322, 0.9869915, 0.9418439, 0.9982591, 1.072555, 0.9861752, 0.9438692, 0.998087, 1.0721105, 0.9846667, 0.9457213, 0.9979742, 1.0716681, 0.9834916, 0.9478989, 0.9970811, 1.0713196, 0.983102, 0.9502612, 0.9942578, 1.0710793, 0.985063, 0.9511854, 0.9989035980620351, 1.0707433, 0.9869948301301225, 0.9515542, 0.9975121914681839, 1.070696, 0.9845132, 0.9548301, 0.9932408, 1.0691118, 0.977684, 0.947219125620791, 0.9968435, 1.0677422, 0.9787311164146102, 0.9487179407637997, 1.0007962, 1.065838, 0.9708113096820378, 0.9485043424141053, 0.9996584, 1.0667989, 0.9738917, 0.9464019794423223, 0.996862, 1.0680945, 0.977864, 0.9544027071740175, 0.9946873, 1.070673, 0.9772387, 0.9537045, 1.0004651, 1.0713684, 0.974299, 0.9493839, 1.0071895, 1.0722726, 0.9697757, 0.946103, 1.000468015769254, 1.0720051, 0.9700858, 0.9426046, 1.004767712921192, 1.0744092, 0.9738236, 0.9396663115319033, 1.0102382, 1.0757456, 0.9792007, 0.9371595312789704, 1.0059027, 1.0780573, 0.9789557, 0.9381395, 1.0058429, 1.0776412, 0.9771881, 0.9388107, 1.0076234, 1.0778313, 0.9752792, 0.9391388, 1.0061087, 1.0754564, 0.9793699, 0.9439685, 1.0006578, 1.0737004, 0.9810835, 0.9492386, 0.994066, 1.0730588, 0.9855865, 0.950731, 1.0095999199889942, 1.0734068, 0.9864792382756775, 0.9502576, 1.0034953596441343, 1.0712624, 0.9821340820873916, 0.9516965, 0.9867609};
        TsData Multd1 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd1, false);
        Assert.assertTrue("Multd1", CompareTsData.compareTS(Multd1, comprest.getData("d-tables.d1", TsData.class), 0.000000001));
        double[] aMultd2 = {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 1.0000120125, 1.0006475791666665, 0.9998362583333333, 0.9993746249999998, 1.0001707125, 1.000634383333333, 0.9999001791666666, 0.9994162875, 0.9999346666666666, 1.0005696291666666, 1.0089512134955503, 1.061012863281307, 1.1730616573396966, 1.3208831860558605, 1.471538940131584, 1.5840503152255174, 1.6261823556110229, 1.6268373665303377, 1.626474145697004, 1.6265143040303374, 1.6270379498636705, 1.6267969040303372, 1.6173947363681203, 1.5650695365823635, 1.4539849258573072, 1.3063222596411435, 1.1547375888987534, 1.042406084638153, 1.0008473317526476, 0.9999400166666665, 0.9997131208333334, 1.0001542125, 0.9999936791666666, 0.9997619499999999, 1.0000481458333335, 1.00037975, 0.9998120416666665, 0.9995691666666665, 1.0001056375, 1.0002640916666665, 0.9999143708333331, 0.9997434333333333, 1.0000276916666666, 1.0001835666666665, 1.0000193625, 0.9998276666666666, 0.9999442958333332, 1.0000713708333333, 1.000756832851126, 1.003335233844513, 1.0062169541202177, 1.0072466895869958, 1.0067795204408325, 1.0057621404947992, 1.0053814088615955, 1.0056859380282621, 1.0054008130282621, 1.0050597838615956, 1.0053183130282624, 1.0057712963615955, 1.004735213510469, 1.0015998875170826, 0.9991449880747111, 0.9986632109412664, 0.9986928842540963, 0.9991069975334631, 0.9999409166666664, 1.0002738666666666, 1.0001058875, 0.9997595666666665, 0.9999864125, 1.0002580333333333, 1.0000416875, 0.9997384791666667, 0.99992125, 1.0002263999999998, 1.000035125, 0.9997583041666666, 0.9999388541666667, 1.0001852625, 1.0000480124999997, 0.9998024291666667, 0.9998953708333331, 1.0001276749999999, 1.0001277833333333, 0.9998688041666667, 0.999829475, 1.0000683416666667, 1.000134425, 0.9999229249999999, 0.9998591833333333, 0.9999904666666667, 1.0000665333333332, 0.9999962416666667, 0.9999304416666667, 0.9999279458333331, 1.0000816631346787, 1.0002690429360241, 1.0002271304360242, 1.000111042936024, 1.0002791651497782, 1.000547554030199, 1.0004952998635324, 1.0003210081968654, 1.0003917165301988, 1.000573679030199, 1.0004812831968657, 1.000263449863532, 1.0003302242288534, 1.000439944427508, 1.0002964152608413, 1.0000269360941747, 1.0000934638804206, 1.0002122041666666, 1.0000155416666665, 0.9998438666666665, 1.0000334999999998, 1.0001621041666666, 0.9999757291666667, 0.9999010416666665, 1.0000385833333334, 1.0000911708333333, 0.9999381416666665, 0.9999014166666665, 1.0000393583333331, 1.0001005583333333, 0.9999894, 0.9998726083333332, 0.9999832874999999, 1.000131875, 1.0000419791666664, 0.9998476458333333, 0.9999541083333332, 1.0001573166666664, 1.0000567583333333, 0.9998772333333333, 1.0000155166666667, 1.0001223, 0.9999197833333334, 0.9998933291666666, 1.0001375124999998, 1.0004039082525846, 1.0004040998385029, 1.000511534427258, 1.0008098065160131, 1.0009800728271874, 1.0009720516383618, 1.0010048683050283, 1.0012540391383618, 1.001402034971695, 1.0012776808050285, 1.0008882433050283, 1.000415523539228, 1.0001644246875097, 0.9999535414349245, 0.9994841741967784, 0.9990216753237904, 0.999040331544441, 0.9989747485666001, 0.9982014198033516, 0.9973669344740241, 0.9973707612412785, 0.9975417904079452, 0.9972874070746118, 0.9970953468171756, 0.9970620698930728, 0.9970775198930728, 0.9970560692091308, 0.9972568046256145, 0.9972391323927068, 0.9971860532260401, 0.9976553194892885, 0.9981398006519492, 0.998390086384695, 0.9986140947180282, 0.998821461384695, 0.9989626789079314, 0.9995172380978348, 1.0001216380978346, 0.9999587130978347, 0.999275879465584, 0.9991709214903854, 0.9994672888141045, 0.9992247554807709, 0.9984642221474377, 0.9981810018524874, 0.9984869773908704, 0.9985938690575371, 0.9981691612046998, 0.9978912908518625, 0.9981630283518625, 0.9987004450185292, 0.9987205088218194, 0.9985743094680577, 0.9990529296443387, 0.9996746838110054, 0.9998582171443389, 0.9997169707726223, 0.9998964369009062, 1.0001712910675726, 1.000275828087077, 1.0001312276065808, 1.0001091817732475, 1.0000326901065808, 0.9999517638032903, 1.0000428166666666, 0.9999430291666666, 0.9998519166666665, 1.00011205, 1.0001388791666666, 0.9997586333333333, 0.9997567416666666, 1.0003535458333332, 1.0002231499999998, 0.9994594041666666, 0.9996900208333334, 1.0006025, 1.0012309758328746, 1.0012910433324163, 1.0015018657605694, 1.002060134022056, 1.0024404115072283, 1.0024570598257336, 1.0023992507460417, 1.0025454374996832, 1.0023434708330163, 1.0012862311595419, 0.9995872476042345, 0.9978259852173291, 0.9964797623251385, 0.9952359382032134, 0.9935560045407444};
        TsData Multd2 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd2, false);
        Assert.assertTrue("Multd2", CompareTsData.compareTS(Multd2, comprest.getData("d-tables.d2", TsData.class), 0.000000001));
        double[] aMultd4 = {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 1.0650676058753845, 0.9741304733998114, 0.9420044453778935, 1.0162467353020896, 1.0652230531095463, 0.9732328972705201, 0.95057638732713, 1.0106939546950298, 1.0646353561766035, 0.96941999009889, 0.9507584580592118, 0.9503026163903098, 0.9072129272501, 0.7298235076172979, 0.6558039163501217, 0.6361284678362896, 0.7837464350142448, 1.2381201787003566, 1.598108825346562, 1.7884991822963274, 1.7094797298974356, 1.2007784145329004, 0.6102328886514384, 0.6365755493366664, 0.7341875978326088, 0.7361846534439248, 0.8486133208277498, 0.9468380073228471, 1.0686269184802377, 0.9634553912658862, 0.9843569915134278, 0.9801724451568012, 1.0720589763061128, 0.9670329021823646, 0.9761503024302308, 0.9849255745130787, 1.0732393242746585, 0.9671573836394515, 0.970924034012357, 0.9900658318643534, 1.073155393402041, 0.9680733753590047, 0.9659954499759978, 0.9923648348951412, 1.0726833301690195, 0.9701208841657047, 0.9647067381849284, 0.9926705522754586, 1.0716069726396107, 0.967873216491161, 0.9567768621447601, 0.986876512254991, 1.0649420039161492, 0.9662090676051105, 0.9732841484855215, 1.0360381864909458, 1.0866147481143538, 0.9699802097884453, 0.9434887718646539, 0.9788216708554572, 1.066500990102737, 0.9777126697044464, 0.9485174937685172, 1.0022017323103962, 1.0729350502985773, 0.9841561538728659, 0.9422106689470239, 1.0027733737986957, 1.07233325331264, 0.9835984898635796, 0.9407575825436528, 1.0019126731332426, 1.0738199351314541, 0.9852117533987587, 0.9380716731442601, 1.0020321399235215, 1.0755421215829795, 0.9859872090001355, 0.9345482437311531, 1.0032490355755466, 1.0763947195985255, 0.9868809788974015, 0.9329278114594735, 1.0033140018848095, 1.0767894042606256, 0.9879352129835467, 0.932011231215203, 1.002441991443568, 1.077414168600386, 0.9894213596512952, 0.9310286043446352, 1.0008225411748926, 1.0780526735621192, 0.9907445235481677, 0.9304261188901198, 1.0009070195212026, 1.07791637396998, 0.9896127516797611, 0.9313929523126313, 1.0009601504460515, 1.0771183061067469, 0.9888837327267473, 0.9340439833747927, 1.0013795489566115, 1.075809087796972, 0.9892810701950564, 0.9348386110148338, 1.0020851008169422, 1.074881148201726, 0.9880296218736437, 0.9344392179554694, 1.0022997019608366, 1.0738457342107075, 0.9874605567554376, 0.9378497242522024, 1.0011329102183824, 1.0734742386130067, 0.9859415747626411, 0.9406552304863233, 0.9999539537766761, 1.0729689012832253, 0.9864799617998161, 0.9412200223018797, 0.9990660912654974, 1.0727899767744975, 0.986892259759179, 0.9418538836511666, 0.9983862860929625, 1.0725729253750154, 0.986045165293827, 0.943829578820806, 0.998239085884064, 1.0721597031957126, 0.9845118198822025, 0.9456676254816904, 0.9980967330089224, 1.0716514715413332, 0.9833713336858904, 0.9479749433900422, 0.9971874708185019, 1.0711723004190388, 0.9827050773094179, 0.9498773547143624, 0.9937494629376383, 1.0702126348347913, 0.9840985117893197, 0.9502616965609854, 0.9979008391372249, 1.069402227751748, 0.9856129662828379, 0.9503399688635317, 0.9966269442573364, 1.0702512853980282, 0.9843513483371499, 0.9548744620973363, 0.9937534036476408, 1.0701587627250357, 0.9786231537705532, 0.9481912600693144, 0.9986396334683443, 1.0705610574137285, 0.9813112179030892, 0.9510558353408142, 1.00351833674074, 1.0689429084212032, 0.9736718896408825, 0.951284452301987, 1.0026100144928993, 1.069733387680912, 0.9765879299815596, 0.9490726192775921, 0.9992048160584213, 1.0700850715524608, 0.9794408151036208, 0.9557272546243258, 0.995860960597539, 1.0717847849636009, 0.9777107014780129, 0.953588507307854, 1.000506407810175, 1.0721447620380584, 0.9751074406235863, 0.9498899169841467, 1.0079709239343222, 1.0739219054778144, 0.9715429347986277, 0.9475366443659043, 1.0018767857181876, 1.0739713684463932, 0.9721357515525304, 0.944339324565448, 1.006075162910887, 1.0757856582593561, 0.9752139532998376, 0.9405570852651651, 1.010566953790131, 1.0758981439112443, 0.97947792087918, 0.9372565964767476, 1.005730427361407, 1.077760023514386, 0.9788272508426158, 0.9380370834478573, 1.0058100199632474, 1.0776931838204074, 0.9771462618542217, 0.9388641878751702, 1.007772634330934, 1.077710542533709, 0.9751437728454472, 0.9393655315271264, 1.0063535038760971, 1.0750763112496424, 0.9791514023645626, 0.9444790814561057, 1.000968079251066, 1.0730538850342668, 0.9798772947310036, 0.9480146719787091, 0.9925752851644242, 1.0708526999202836, 0.9831871188414208, 0.9484007226855925, 1.0071834343826507, 1.0706814472938433, 0.9841728578885693, 0.9490369191430427, 1.0039097257885858, 1.0735964144756927, 0.9856036411574749, 0.9562521443087967, 0.99316082383913};
        TsData Multd4 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd4, false);
        Assert.assertTrue("Multd4", CompareTsData.compareTS(Multd4, comprest.getData("d-tables.d4", TsData.class), 0.000000001));
        double[] aMultd5 = {1.2177545026402241, 1.3202865058246098, 1.3272127971219494, 1.0614545176569994, 0.8147642314434299, 0.8268910175180719, 0.9372602993467222, 0.8285695845036088, 0.8061982347389991, 0.8465233237835239, 0.9489280118019688, 1.0767864331134926, 1.2177545026402241, 1.3202865058246098, 1.3272127971219494, 1.0614545176569994, 0.8147642314434299, 0.8268910175180719, 0.9206752677803189, 0.822053732247135, 0.817764821467275, 0.8585686548638781, 0.9669557478162273, 1.0713466156310736, 1.2034010280606653, 1.2905832071481769, 1.3049449904039452, 1.0497563322241488, 0.8259636780203827, 0.8408099254447111, 0.9196032317274325, 0.843097592359965, 0.8678351028971777, 0.9175835110153477, 1.0248703918152993, 1.0417867964588274, 1.1224243761552564, 1.1780520006163884, 1.2156936278725041, 1.0173239362451516, 0.8805595754209566, 0.8991621075639126, 0.976414940204927, 0.8948300729007665, 0.9129774328072254, 0.9557806823328651, 1.053097644225287, 1.0094257082605753, 1.0463361305516696, 1.091301290191585, 1.1442086210894344, 0.9910621131956938, 0.9124714962013233, 0.9408296323852885, 1.0287298138033685, 0.9478257953722152, 0.9516317002050392, 1.0000373677256398, 1.0825728748880945, 0.980888752035408, 0.9667818064463788, 1.0115296238619704, 1.078585860121453, 0.9749211557597497, 0.9499281899795207, 0.9899293091592694, 1.0708800166059056, 0.9774376572799225, 0.9489887432948138, 0.9975250043025606, 1.0724850783292108, 0.9797165927013457, 0.9488524745223558, 1.0086257297996375, 1.0769164351114562, 0.980665661795554, 0.9410049422660922, 0.9955146220517676, 1.0727679464273259, 0.982932587413552, 0.9407106565413478, 1.0005131134963627, 1.0745804737877611, 0.9847364019449251, 0.9397532614772638, 1.005834441185355, 1.0767649879849657, 0.9853880132706493, 0.935359266398877, 0.9992567591619643, 1.0747331777974374, 0.9867018775533063, 0.9356448366659648, 1.002241143924897, 1.0762486026369271, 0.9878939886502968, 0.9345115654238597, 1.0016677053362337, 1.0759587137069413, 0.9882298193719806, 0.9342720882216149, 1.0017292057482723, 1.0759597025854735, 0.9880263428157388, 0.9340649031037183, 1.001543753566606, 1.075776301108839, 0.9880785700633126, 0.9351438676975081, 1.0011333785473377, 1.0754756130270147, 0.9881572822060904, 0.9359378709357258, 1.0011445873649234, 1.0750253743282634, 0.9875336522128542, 0.9362446005730288, 1.000946773043186, 1.0744948120098572, 0.9873178263454377, 0.93829378179051, 1.000254035076672, 1.0740630248173886, 0.9867656646924486, 0.9399560835947012, 0.9995758993210964, 1.0734428102599634, 0.9863377208264102, 0.940594268877682, 0.9997502706835363, 1.0728354527665047, 0.9861616631608955, 0.9423854717104526, 0.9989918643260688, 1.0725970675558996, 0.985347985321443, 0.9446840498585134, 0.9976542697155361, 1.071984864830778, 0.9844459365578567, 0.9446568300183346, 0.9988635314778799, 1.0715195745166768, 0.9847492363065977, 0.9463223734515585, 0.9985709075096743, 1.0713618227505388, 0.9831354699564712, 0.9487956179359823, 0.9965334348704497, 1.0709165128605567, 0.9823006586194643, 0.9475749872305744, 0.9984267238748283, 1.070626993589785, 0.9834911083842495, 0.9495022108159807, 0.9983895675698381, 1.0706627500511012, 0.9810317823545601, 0.9515156282725511, 0.9969905693286797, 1.070588667146295, 0.9796096074506401, 0.9486723279652755, 0.9996235052304826, 1.0708851309165703, 0.9810622924511657, 0.9511408320554015, 0.9994059907041556, 1.0708021840326822, 0.9778110838416291, 0.9515624186907043, 0.9995193056127876, 1.0711721461246473, 0.9774807517405811, 0.9482447498951723, 1.0021401776685168, 1.0717679447929496, 0.9789223535072662, 0.95017908490703, 1.0000230363300837, 1.0722195629709517, 0.9764595004764575, 0.9492475476070174, 1.0018639698715015, 1.0728783107060416, 0.9762037997090863, 0.9461951557642337, 1.005466485523117, 1.073667881356744, 0.9767250705592301, 0.9465946369133718, 1.002041446517838, 1.0739427843841822, 0.9759245361344437, 0.9458249909507371, 1.0038009225991549, 1.0745156372395162, 0.9764243690671703, 0.9440418078949253, 1.0059926774194383, 1.074527674282621, 0.9771165779299603, 0.943223141425638, 1.003891213312693, 1.0745758795709133, 0.9777067408541467, 0.9437892461353216, 1.0039948059377597, 1.075221762763612, 0.9780460962735688, 0.9443788031404148, 1.0033268333896415, 1.073639087888243, 0.9770519213459145, 0.9419937611021111, 1.0061160723219413, 1.073815038282748, 0.9790617651945208, 0.9440017617522578, 1.0036556697679413, 1.0747321260297382, 0.9800725268294196, 0.9468925284809396, 0.9986009326846825, 1.0711476486743183, 0.9776998050327143, 0.9429818067797267, 1.0072957575056327, 1.0724866395387112, 0.9804129000179042, 0.9450005054429239, 1.0030254835493901, 1.074077788883596, 0.981589291470302, 0.9495777945929006, 0.9955600136496839};
        TsData Multd5 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd5, false);
        Assert.assertTrue("Multd5", CompareTsData.compareTS(Multd5, comprest.getData("d-tables.d5", TsData.class), 0.000000001));
        double[] aMultd6 = {0.753892675419844, 0.7780702866143402, 0.8038392956378134, 0.9220851046547393, 1.143132656118161, 1.2396319203910053, 1.1363763094866703, 1.1764386700049747, 1.168261302761246, 1.199743907185853, 1.1227457581074536, 0.904404318304925, 0.7805197993021195, 0.7650642459373773, 0.8021063406776235, 0.9138141897413251, 1.177357648973577, 1.2193666137847043, 1.1559088608579102, 1.1726868478108048, 1.1800960064147472, 1.1736504638173164, 1.318069236127475, 1.8800826376610982, 2.1599472044869805, 2.254034832190051, 2.131421949215535, 1.8608343167121524, 1.1949526211964898, 1.184911083766116, 1.1608242154551311, 1.14066794723973, 1.1291611698220312, 1.075640187679322, 1.0435782012451285, 0.9247550489934382, 0.8767402249146098, 0.8321564748305409, 0.881844056282601, 0.9503390862583841, 1.108610169315714, 1.0957975116071768, 1.0989565560875114, 1.0803623271914868, 1.0635822585606358, 1.0361449214298972, 1.0189591685863097, 0.9587877464184453, 0.9232427054685334, 0.9095077673973535, 0.9375074442094721, 0.9787012207260861, 1.0571869959948466, 1.0551765865230025, 1.0424680859934543, 1.0245567326205174, 1.011657240708323, 0.9939909568186371, 0.9903830262797128, 0.9907102084548329, 1.0121433625481702, 1.0300529127720575, 1.01288491866531, 0.9999660939148214, 0.9985034137291258, 0.9944859008561034, 1.0006266653440983, 1.0018816982406795, 0.9986488319235886, 1.0033452752392633, 0.9991118959615787, 1.003634425838228, 0.9929415007051257, 0.9944699707385557, 0.9958495989421932, 1.002749497927264, 0.9997235484593039, 1.0066865697406968, 1.0010223586343407, 1.0020566136603195, 0.9971161626346171, 1.00174499112514, 1.0009300617651427, 1.0010281919639359, 0.9944004860712142, 0.9976143775882965, 0.9997041248661309, 1.001317234137081, 0.9972961550820854, 1.0041884538679986, 1.0020412714968552, 1.0011185976958212, 0.995946606535575, 1.0002687537592483, 1.001217560106338, 1.0014688937946528, 0.9961326691315795, 0.9991467176872325, 1.0020127968345527, 1.002540887330859, 0.9958141870329672, 0.999107238020874, 1.0019003475777144, 1.001875109097781, 0.9973659184757474, 0.9995282746610683, 1.0015269892908663, 1.0013628773839323, 0.9993185514152109, 1.0005669788509957, 1.0007019098934848, 1.0017115876433493, 0.9993062169767957, 1.0012031355413378, 1.0001960192538415, 1.000942396023731, 0.9983675200133668, 1.0013786217149376, 0.9994893302380577, 1.0003567986368342, 0.9995422736472893, 1.0007223814131103, 0.9994852957372008, 0.9993268263010999, 1.0007195191531848, 1.0002792190959118, 0.9995970812270301, 1.0002353952086465, 1.0006033750588288, 0.9992171338118256, 0.9999969680657957, 1.0008414815441564, 0.9994253182729254, 0.999266496202586, 0.9999607797213211, 1.0008395152685954, 0.9991374366290661, 1.0004337477396728, 1.0001171986408985, 1.0002242514636357, 1.0011268324621596, 0.9991096566749573, 1.0001386120112552, 0.9987228867408777, 1.0016659508352226, 0.9985080603706055, 0.9999605896442806, 0.9999659559058808, 1.0015446762572597, 0.9977164490514605, 1.0001520073110168, 1.0028121139452537, 1.0038101604813119, 1.000477625624198, 1.0001086339228427, 1.003562535254263, 1.0021611210175654, 0.9991212086642794, 1.0000310554830616, 1.0035487307425293, 1.0034833602612143, 0.9962389119375477, 0.9986205092659615, 0.9980343113869092, 0.9984681725168465, 0.9972189477178794, 0.9970651092018803, 0.9976238246495733, 0.9974526471685944, 1.001391035583912, 0.9953640512629636, 0.9928413839081364, 0.9967862578255173, 1.0001391612812591, 0.9959173265095913, 0.9963282635139463, 0.9980566510354487, 0.9947330944451339, 0.9965725371701994, 0.9989188585759898, 1.0044450802317975, 0.9946643865828683, 0.9985576060870719, 1.000797984476737, 1.0046952477298658, 0.9986037327286249, 0.9985926542731134, 0.9980487683927742, 1.0033700703457846, 1.0017136468511791, 0.9987004534819642, 0.9928850289925996, 0.9994806257143238, 0.9984297747822191, 0.9981957284760813, 0.9940172258015251, 0.9965951513424275, 1.000963129541198, 0.999900943982733, 0.9973364357245047, 0.9953651455619548, 1.0042202320910052, 1.0011334521637072, 1.0021329308263862, 0.9935713937875795, 1.002003689902484, 1.003239808835535, 1.0012774373886, 0.9940137629683148, 1.0018407406605199, 1.0022501750989203, 0.9991227445446204, 0.9941039515902954, 1.0042823200450475, 1.0039046753783925, 0.9981856426386507, 0.9969692356573883, 0.9999926724936176, 1.0015285329956607, 1.0003147245826907, 0.9999647651587047, 0.9970130495365661, 0.9990400156422703, 1.0010315289357727, 1.0024776534279176, 0.9954587137501558, 1.001784209047228, 1.0080665813030636, 1.0082177547483517, 1.0022874736304532, 1.0008579691600492, 1.0061875341069693, 1.0055630600479013, 1.0004684587804105, 0.9973787849327725, 1.0005550087208812, 1.0022312078264295, 0.9911616441710764};
        TsData Multd6 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd6, false);
        Assert.assertTrue("Multd6", CompareTsData.compareTS(Multd6, comprest.getData("d-tables.d6", TsData.class), 0.000000001));
        double[] aMultd7 = {0.7048109050403336, 0.7939693573175074, 0.8826500181741886, 0.9735863664010176, 1.0613887656778525, 1.1386801111555682, 1.193638556628966, 1.210229743447384, 1.1849806860324885, 1.121494751575149, 1.0299332468982332, 0.9315680393353282, 0.8561464610619098, 0.8312229262256661, 0.8684470186363309, 0.9527878044413617, 1.050153384682011, 1.1177459122794955, 1.1436857220152412, 1.1573070655931437, 1.2087104876086892, 1.3383144841114474, 1.555808540550916, 1.806736712000932, 2.0011228792856794, 2.066736123459334, 1.979559585542382, 1.7721927143768603, 1.5190760315499678, 1.3016727493372051, 1.164576938377483, 1.1008297677725065, 1.075755221932055, 1.0494471047644063, 0.9999933311029321, 0.9390530837446138, 0.8974041900358972, 0.8888919728671157, 0.9161275604934745, 0.9686755017762461, 1.0272823482664861, 1.073595617897145, 1.0956966285634713, 1.0923566888666822, 1.0685864133590468, 1.0336794437920245, 0.9955763501164593, 0.9625093030355035, 0.941388952186976, 0.9392207416062589, 0.9559207810369388, 0.9848640338939948, 1.0148554307438336, 1.0351399858400245, 1.0396713305535583, 1.0304290794062434, 1.0153358657690634, 1.0032813907053886, 0.9988818470070705, 1.0013591654292602, 1.0060867139262326, 1.0096232871503725, 1.010042214306174, 1.0072422420003428, 1.002902975218576, 0.9993133115634831, 0.9981320630179119, 0.9991837995689206, 1.0006203677636818, 1.0008195036093057, 0.9999159959625761, 0.9984545301097513, 0.9972853076137906, 0.9970673977364752, 0.997934213783891, 0.9994929102915115, 1.0011170115166241, 1.0020931017280055, 1.002318441731683, 1.0018048091357459, 1.0009913889828088, 1.00009218838501, 0.9993806906532736, 0.9987797659522468, 0.9984255595696672, 0.9983551985638334, 0.9988725155627902, 0.9997539467242996, 1.0006275157902773, 1.0010113283832835, 1.0009443895895818, 1.0005753897865877, 1.0001288845219105, 0.9996629859623904, 0.9994607403472201, 0.9995608827171877, 0.9997810278986954, 0.9997962041021038, 0.9997656162455709, 0.9998014858410252, 0.9999110765584467, 0.9999162800980047, 0.9998711212916574, 0.9998861135486382, 1.0000651696511893, 1.0002212246427422, 1.0003005469273947, 1.0003562686462955, 1.0005333602081827, 1.000661518888636, 1.0006917250933995, 1.0006270580668846, 1.0005932979216465, 1.0005122107695912, 1.0003628183258448, 1.0001881467785385, 1.0000899459867316, 1.0000594772656468, 1.000035133418217, 0.9999928690716191, 0.9999864976244225, 0.9999659670256342, 0.9999421598030512, 0.9999594154708181, 1.0000376074416861, 1.000065837264539, 1.0000895574580064, 1.000102751423913, 1.000090992257619, 1.0000132285846424, 0.999955037435071, 0.9999131442230919, 0.9998695548386161, 0.9998543798573504, 0.9998671225276271, 0.99993517690113, 1.0000427193370987, 1.0001929277718922, 1.0002396882301152, 1.0002035146770782, 1.0001298985851443, 1.000028680213741, 0.9998728848303704, 0.9997898635497698, 0.9998126626297865, 0.9998131240780455, 0.9997542996016711, 0.9997751377688014, 0.9999946098483014, 1.0003781295323766, 1.0008361540707695, 1.0013532240101175, 1.0017675352235982, 1.0019335215936394, 1.0017660128427888, 1.0015498254352355, 1.0014284885289308, 1.0014579354612096, 1.0013958463861983, 1.0010568670567233, 1.0004386113649164, 0.9996816480464895, 0.9988774015842562, 0.9980362148586017, 0.9975286437238435, 0.9975799948975609, 0.9978503933603365, 0.9978438376968083, 0.9975673449230572, 0.9972521084991224, 0.996902505164146, 0.9966819709114904, 0.99662595379982, 0.996676083202636, 0.9966437082339211, 0.996718069738315, 0.9969149976690594, 0.997160661222616, 0.9975405529423065, 0.9981817446717898, 0.9989288889882352, 0.9996062048786339, 1.000039317066016, 1.0001660823507825, 1.0001755805637604, 1.0003967898167954, 1.00056859144096, 1.0004097245566814, 0.999886131997701, 0.9994127855557283, 0.9989004133976864, 0.9981682868531639, 0.9973334841073703, 0.9968850289881992, 0.9970177731664823, 0.9973678599450368, 0.9976328735304515, 0.9978636776501171, 0.9984303838444922, 0.9991819972527153, 0.9996593075573152, 0.9998525633760441, 1.000079605634218, 1.0003181554310014, 1.0003291807291268, 1.000117206564098, 1.0000224636484436, 0.9999790273316377, 0.9998378180838092, 0.999590277053619, 0.9995376290335829, 0.9997294575441369, 1.00009547031289, 1.0002468286775203, 1.0001494185872806, 1.0000561357806013, 1.000066382998462, 0.9998967433057216, 0.9995846621202571, 0.9995202081128042, 0.9996366547494726, 0.999444154812828, 0.9991086027077497, 0.9992624380166917, 1.0001779519145302, 1.0014905534226388, 1.0027811749697433, 1.0038870442049175, 1.0047166434968922, 1.005049308972463, 1.0046320920574232, 1.0037812656354352, 1.0029313255534686, 1.0022067672534452, 1.0010150686517705, 0.9988400678930459, 0.9958943839688705, 0.9928510211855666};
        TsData Multd7 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd7, false);
        Assert.assertTrue("Multd7", CompareTsData.compareTS(Multd7, comprest.getData("d-tables.d7", TsData.class), 0.000000001));
        double[] aMultd8 = {1.3025567473980317, 1.2938480440488758, 1.2087076168727353, 1.0053051622097746, 0.8775140929677873, 0.9002005830766262, 0.8922972486813465, 0.8054349228133796, 0.7948232499497273, 0.9055871180614669, 1.0344407302207148, 1.0453882688964298, 1.1101856320483798, 1.2152022858495724, 1.2258269959537917, 1.018035910491858, 0.9134559903270406, 0.9020684297952287, 0.9305149828440525, 0.8329782377211394, 0.7984054162624464, 0.7529317749774034, 0.6844331241573818, 0.5322150668732877, 0.48366400185554376, 4.840202716956493, 0.538702652745771, 0.5420301597040255, 0.641414175303542, 0.7653882287289915, 0.9166399100151028, 0.8736086433654111, 0.910918841035282, 0.9404854189593218, 1.0695395326490533, 1.0259245368305578, 1.0965790119172898, 1.1028602236534684, 1.1701997038737009, 0.9980666365848915, 0.9502716576872066, 0.9177567266247876, 0.979319979661543, 0.8850046050461698, 0.908701989713333, 0.9580603599574464, 1.0778314489636847, 1.0055227486609555, 1.0261669183134108, 1.0567771302649709, 1.122168406922151, 0.9848605153799336, 0.9505324312970982, 0.9590407225882422, 1.031497136146869, 0.9424241992079363, 0.9481838793026252, 0.9907769736475599, 1.0733619829136916, 0.9704574877321078, 0.9545445603314211, 0.9867945922800543, 1.0608840747671808, 0.967878489750302, 0.9518582790044536, 0.9991764228956428, 1.073556435768731, 0.9800768391385959, 0.9471189379425279, 1.0000424615932653, 1.0716226206267274, 0.9847992776315182, 0.944719623168117, 1.0059981925766521, 1.074666831928307, 0.9838609057398848, 0.9396951496956741, 1.0000779351458062, 1.0713807661213017, 0.983179648388509, 0.9370688003152335, 1.00216661187854, 1.0762464294731535, 0.9869532139151588, 0.9359647206976316, 1.005088070301506, 1.0776614465095204, 0.986928837073245, 0.9322452014157014, 1.0024283157920324, 1.0759109209269593, 0.9872375535947258, 0.9317322141390321, 1.0028484740133379, 1.0781403976164665, 0.9897797293853504, 0.9311013852268508, 1.001017003158968, 1.0783771540860654, 0.990937515127412, 0.9304441382949503, 1.0009186968152026, 1.0781433497223203, 0.989991746646903, 0.9315437916160327, 1.0008498873412344, 1.0770952823223867, 0.9890728243637763, 0.9314143206640263, 1.001038793929558, 1.075486558959554, 0.9892282964167414, 0.9319785590578917, 1.0018359488376418, 1.0748461261279774, 0.988278358610528, 0.9346321335905131, 1.0022670878941642, 1.0739083699281127, 0.9876771430549706, 0.9378769635670076, 1.0010106673703825, 1.0735722956330183, 0.9861414220853221, 0.9405970265521738, 0.9997891766154959, 1.0729142125304667, 0.9864685389529773, 0.9410761693547589, 0.9989543852473608, 1.07288043945642, 0.9870772333599719, 0.9419667750079842, 0.998404487803936, 1.072697537337382, 0.9862391310767032, 0.9438288802559008, 0.9978944784416907, 1.0718535893102354, 0.9844663466493673, 0.9455984680968795, 0.9979455787075008, 1.0718043425908181, 0.9836983108711439, 0.9480765101601746, 0.9972674652770089, 1.0715828883425083, 0.9833231122290049, 0.9502663220796301, 0.9938819838702017, 1.0701844609065387, 0.9837317905215504, 0.949507112733187, 0.9895564711948193, 1.0688556871294415, 0.9859127074091354, 0.9501968546928451, 0.9885862051151, 1.0692035560801354, 0.983473798940749, 0.9544114842761897, 0.993557100843978, 1.0703133320509097, 0.9796077391224876, 0.9624997798717853, 0.9992617184573388, 1.070042370183668, 0.9717052542390034, 0.9675397905837076, 1.003553857114638, 1.0691496856299938, 0.9732822789127635, 0.965779685277321, 1.002992262830047, 1.07039144599668, 0.9770984690341693, 0.9630618480460621, 0.999700488362377, 1.0707278985797524, 0.9796452451868167, 0.9585531167987646, 0.9950791573175247, 1.0706309059339927, 0.9770764248504666, 0.9535370774223797, 1.0000682830891703, 1.0707595752701755, 0.9738999692668401, 0.9494920167591471, 1.0077812837264708, 1.0734529544869678, 0.9715553106353693, 0.9486325437541863, 1.0176135366679366, 1.0752116249596648, 0.9726459403388632, 0.9448411585158417, 1.0142648967676664, 1.0760982612157182, 0.9746208425267479, 0.9395180867119084, 1.010387168072949, 1.0756599714057733, 0.9788892610652431, 0.9352502336461723, 1.005784815417563, 1.078033083443803, 0.978976231743843, 0.9382916739416257, 1.0062551858395532, 1.0781397004952507, 0.9774525424113136, 0.9387210800047756, 1.0073747510224378, 1.0776702760298014, 0.9752244550139564, 0.9390764612887147, 1.00621259818663, 1.0759032633802208, 0.9798400192920061, 0.9443116111389251, 1.0012143201611892, 1.0746583475410925, 0.9818076439931308, 0.9490697112278644, 0.9925864967999298, 1.0700827127437622, 0.9817703153850227, 0.9462677921717347, 0.9826120879677738, 1.0684576060095101, 0.9858939729997135, 0.947480226999191, 0.983973000603993, 1.070176097791258, 0.9932426940908736, 0.9556199084156577, 0.9938660271726424};
        TsData Multd8 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd8, false);
        Assert.assertTrue("Multd8", CompareTsData.compareTS(Multd8, comprest.getData("d-tables.d8", TsData.class), 0.000000001));
        double[] aMultd9 = {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0.8191976009091048, 1.1148387906139587, 1.2989120824825269, 1.4075427771022737, 1.4050541420321776, 1.1022630842241348, 0.6497288098585106, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0.9726018392672844, 1.0319978240151886, 1.0816214765371253, Double.NaN, 0.9457610196892279, 0.9851472300142335, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0.9340084522897337, Double.NaN, Double.NaN, Double.NaN, 0.9347339574158693, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0.9969759235854441, Double.NaN, 0.9854675274904191, Double.NaN, 0.9960600002722945, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 0.9495658411218714, Double.NaN, Double.NaN, 0.9808459795409336, 0.9510314723032305, Double.NaN, Double.NaN, 0.9740432133975563, 0.9517154743941374, Double.NaN, Double.NaN, Double.NaN, 0.9493306667621167, Double.NaN, Double.NaN, Double.NaN, 0.9554260745634097, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 1.0035941825555263, Double.NaN, Double.NaN, Double.NaN, 1.0069188160925282, Double.NaN, Double.NaN, 0.9399865578483875, Double.NaN, Double.NaN, Double.NaN, 0.9368511379383007, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, 1.0045277490128157, Double.NaN, 0.9827631497497566, Double.NaN, 1.001285755028596, Double.NaN, 0.9832746138819862, Double.NaN, Double.NaN};
        TsData Multd9 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd9, false);
        Assert.assertTrue("Multd9", CompareTsData.compareTS(Multd9, comprest.getData("d-tables.d9", TsData.class), 0.000000001));
        double[] aMultd10 = {1.2299206498673345, 1.2895850813116765, 1.2586044486592514, 1.0338368986517752, 0.8544292413822384, 0.8805872963228253, 0.9171569844282185, 0.8345331380926453, 0.8229698990292976, 0.8546915560814837, 0.9588410547169358, 1.0771788613836226, 1.2153893502873385, 1.2800863195400127, 1.266917436464903, 1.0371248322716498, 0.8410698207908308, 0.8688954942594141, 0.9248034236224408, 0.8461851030412394, 0.8439575946311002, 0.8691203743388124, 0.9746201590542174, 1.0685354715797122, 1.1888210852534293, 1.2501316268061586, 1.261174393643796, 1.0343376331339982, 0.8291555049434444, 0.8605541216016592, 0.941270310077216, 0.8703325830832519, 0.8847421360938215, 0.9154956482614193, 1.0235604844525628, 1.045285434998638, 1.119030130771578, 1.1671060223412513, 1.206972611936757, 1.0131951690381389, 0.8729172449872681, 0.8923416575296574, 0.9785022236833207, 0.9017408269868045, 0.916631002952194, 0.9533220419610422, 1.05598419420603, 1.0189427785599394, 1.054779091567834, 1.0952277313246703, 1.147580841050674, 0.9923222112942834, 0.9080417652416831, 0.9315720862768131, 1.0167629958318134, 0.9358223438304544, 0.9390027750715796, 0.9895225381042264, 1.082315687839482, 0.994376935866195, 0.99000798197705, 1.0360936040701165, 1.0964312031120205, 0.9780976972608189, 0.9414646986636231, 0.9741417905500219, 1.0519048318741042, 0.9632196963849523, 0.9411256159871587, 0.9968122593376435, 1.0775457634713874, 0.9873380331779772, 0.957573222864117, 1.0164110509636899, 1.0815533713515855, 0.9807262296002541, 0.9381669655394781, 0.9912772569025657, 1.068212067550487, 0.9797661479139126, 0.9394623732725816, 1.0012831856104192, 1.0763663949615139, 0.986276297712464, 0.9409245459295611, 1.0066608373269137, 1.0769435680218158, 0.9849998364825154, 0.9349255936700667, 0.9990580839097644, 1.0745833243187728, 0.9862790925471548, 0.9351202056967557, 1.0020057198917671, 1.0763534178516359, 0.9882495737125381, 0.9350475658194907, 1.0023398214231378, 1.0764520508522222, 0.9882379818798444, 0.9338720907744574, 1.0011508530905124, 1.0754656317036007, 0.9877874110081379, 0.9339743398423934, 1.0016181494495744, 1.0760526836316577, 0.9883999418539663, 0.9353066294144565, 1.0011991413413839, 1.07555213754637, 0.9881928747313916, 0.9357683062272729, 1.00084623854733, 1.0748824570945612, 0.9875942309496021, 0.9362616427006387, 1.0009032383845922, 1.0746062244684493, 0.9875205022059689, 0.9383075495888324, 1.000138370675733, 1.0741040865399762, 0.9869381606959234, 0.9399546118936093, 0.9994076908650684, 1.0733756618278727, 0.9863857333419863, 0.9405153246176783, 0.9995709968375719, 1.072866728915141, 0.9863638253920286, 0.9424475157119018, 0.998905923207449, 1.0726174549824552, 0.9855069157009693, 0.9447149316957808, 0.9975134131093143, 1.0719158605028427, 0.9845196316654976, 0.9446441744215113, 0.9986887943098083, 1.0714605395497416, 0.984870720079163, 0.9463700649022507, 0.9984775475058096, 1.0713307233792435, 0.9832497574147425, 0.9488615530171856, 0.9964879471228095, 1.0709564950955055, 0.9824663297841942, 0.9476663591892266, 0.9983300925546392, 1.0705267311405626, 0.9835315738328922, 0.9495247632977277, 0.9982167944147163, 1.0704027143118162, 0.980951437994883, 0.9515685879657715, 0.9969879237298408, 1.0706298063118438, 0.9798552095318336, 0.9489822886486574, 0.9997072215862537, 1.0707024756444405, 0.9809519073189283, 0.9511568689145554, 0.9993168462668124, 1.0705797036807077, 0.9777405232143633, 0.9517002868633326, 0.9996207038769289, 1.071154783793376, 0.9774908741904287, 0.9483870104523048, 1.0022611627290803, 1.0716554326836993, 0.9787859236972426, 0.9502380192911164, 1.000094919322732, 1.0720932023453111, 0.976397100172481, 0.9494533060947391, 1.00206083294096, 1.0727410771288155, 0.9759473458317499, 0.9461183785790815, 1.005454359573836, 1.0734766540157743, 0.9765328835399986, 0.9466813013648021, 1.0023287447972289, 1.0741532229182116, 0.9760043719181684, 0.945979250739024, 1.0040717672614592, 1.0746013759527604, 0.9762749735713531, 0.9438778568008476, 1.0058695253124275, 1.0743485369419437, 0.976854299061256, 0.943059185389626, 1.0039429623329703, 1.0748098729782811, 0.9778439568763213, 0.9438104948188503, 1.004076834945478, 1.075292833432012, 0.9780922984809161, 0.944377326935945, 1.0032776112250097, 1.0736217391081813, 0.9769714717260352, 0.9418116979679172, 1.005991225069511, 1.073974896176404, 0.9791917107848501, 0.9442186486970042, 1.0030575349729531, 1.0745503301974917, 0.9802572786276649, 0.9472136757233786, 0.9988647139283764, 1.0714379525635245, 0.9778615713460477, 0.9428256115276058, 1.006948339580249, 1.0723044215072153, 0.9803710394384616, 0.9457470921279549, 1.0017243498007098, 1.0731655838765581, 0.9816022127328998, 0.9502579584782415, 0.9963011671085779};
        TsData Multd10 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd10, false);
        Assert.assertTrue("Multd10", CompareTsData.compareTS(Multd10, comprest.getData("d-tables.d10", TsData.class), 0.000000001));
        double[] aMultd10a = {1.0696188005654919, 0.9776401560704643, 0.9440434161866712, 1.0076888583786547, 1.0713584920832262, 0.9804905726075648, 0.9469633119014776, 1.0008787817880964, 1.0722972337272438, 0.9819451597724298, 0.9515407900689687, 0.9954912244737029};
        TsData Multd10a = new TsData(TsFrequency.Monthly, 2010, 10, aMultd10a, false);
        Assert.assertTrue("Multd10a", CompareTsData.compareTS(Multd10a, comprest.getData("d-tables.d10a", TsData.class), 0.000000001));
        double[] aMultd11 = {0.7464353087323367, 0.7965939703296865, 0.8476577380101397, 0.9467174186531627, 1.0900652211917161, 1.1640418891805338, 1.1612847288776862, 1.16803186776723, 1.1444527936087614, 1.188278031733795, 1.1111381753616334, 0.9040748337273362, 0.7820386938352637, 0.7890905359905506, 0.8402803287406577, 0.9352511576407219, 1.140534205707239, 1.1604195287712826, 1.1507490919870078, 1.1392443527252905, 1.143470958895543, 1.1594015394778678, 1.0925763130462434, 0.8998975940203658, 0.8141436184181341, 8.001894828912361, 0.8455563365181917, 0.9286927877597168, 1.1751196177205139, 1.1577249762579942, 1.1341032311031134, 1.1049734534734854, 1.107583396362717, 1.0780932731623052, 1.044913726395001, 0.9216598335183492, 0.8793995558649298, 0.8399610500110694, 0.8882158463229266, 0.9542117151208085, 1.1183159750890685, 1.1041730392007987, 1.0966123265012369, 1.072082655091036, 1.0593429601143907, 1.0388171639909172, 1.0161738271156715, 0.9498325326647061, 0.9158526251824876, 0.9062471407654381, 0.9347525347476869, 0.9774584192113284, 1.0623443071952194, 1.0656624587879833, 1.054737440678253, 1.0376983477709496, 1.025263317168165, 1.004553268593968, 0.9906183676781484, 0.977271761792717, 0.9700473304085568, 0.9615837759119852, 0.977295882275728, 0.9967185310119763, 1.0139748217379287, 1.0249948310258103, 1.0186768493979568, 1.0166703439260139, 1.006992567093117, 1.0040626914691513, 0.9944195748568343, 0.9958871905654169, 0.9838986486923675, 0.9868527098844311, 0.9915800998889169, 1.002687570006994, 1.0027477352701708, 1.0109898043373602, 1.0052916762703075, 1.0052950921984123, 0.9984410516969616, 1.0009745638432808, 0.9992693055401993, 0.9994652637261109, 0.9931626335423046, 0.9967954079395004, 0.9995383527637117, 1.0017118414186807, 0.9977587588956238, 1.004388149358723, 1.0021810087949325, 1.0015477439037086, 0.9965053629716826, 1.0005037696873502, 1.0011200616157938, 1.001108552248949, 0.9955616527209998, 0.9984767427268628, 1.0015535751420177, 1.0025326066858862, 0.9962407156085519, 0.9996844101070912, 1.0023606224332597, 1.0021174485203526, 0.997462628531322, 0.9994540340049999, 1.001269748581204, 1.001037290779389, 0.9963696083106112, 1.0005012575799292, 1.0006307108971748, 1.00167550820386, 0.9965410174658268, 1.0015015907486962, 1.0003290061188594, 1.0008809985145026, 0.9983493474151297, 1.001422177050506, 0.9993857057092927, 1.000151488291835, 0.9995276073511007, 1.000838113353956, 0.9994470866022964, 0.999152165019809, 1.000721085994807, 1.000447574237241, 0.9996596142051045, 1.000186708558111, 1.0006873629439101, 0.9993963441921775, 0.9999678162122, 1.0006363520151622, 0.999359523260618, 0.9993524683431928, 0.9999417732928313, 1.0006781122368436, 0.9991047757716047, 1.000575016719723, 1.000181580947096, 1.0001493808043762, 1.0011402447690405, 0.9992844674798799, 1.0001937173069813, 0.9985996943039873, 1.0016154727991182, 0.9986014232274948, 0.999989617231168, 0.9998497254500922, 1.0014750802984522, 0.9977619928778378, 1.0001146684342987, 1.0026430119151015, 1.0037133752577057, 0.9931282322291974, 1.0002023012159693, 1.0039745812652192, 1.0021373183519975, 0.9917960763027254, 1.0002739956506672, 1.0036309259226912, 1.0034275112435151, 0.9962415555488151, 0.9985821370721285, 0.9977841526883641, 1.0117376388206403, 0.9971354397323351, 0.9972352023911604, 0.9884379578302397, 1.0147496501827868, 1.001480365050098, 0.9955709008265285, 0.9921373584996867, 1.0113699799044207, 1.0000377104264897, 0.9959334693180849, 0.996317945992683, 1.0123407315987103, 0.9946130181135835, 0.9966771663959357, 0.9990580946508096, 1.0076700579864408, 0.9945928939161155, 0.9986752995521244, 1.0008619442103732, 1.00447751761774, 0.998407548834858, 0.9987204021938926, 0.9983110299558783, 1.003451493486283, 1.0017257276868334, 0.9988783603152709, 0.9930804342036048, 0.999389127720207, 1.0120868081112668, 0.9980001708579567, 0.9939359165917091, 0.996432637675311, 1.0079937839109172, 0.9998211653576285, 0.9974890541725293, 0.9950418830496677, 1.0043431822693065, 1.001300381589417, 1.002401996839241, 0.9920460078160133, 1.0019520408435114, 1.003021396717096, 1.0011369330616207, 0.9939913840225535, 1.0017588943326412, 1.0021839321299042, 0.9990755489207712, 0.9941055055249939, 1.004331591502061, 1.0039208975922147, 0.9982678391590644, 0.9971619613839111, 1.0001167753033637, 1.0013794585226066, 1.0001819758206563, 0.9997350733356628, 0.9976075799350653, 0.9992090364000583, 1.000842861757162, 1.0021377692578974, 0.9951958319665695, 1.0015127776952437, 1.0078998182159042, 1.0083847833318673, 0.9807589537430238, 1.0010280462065384, 1.0094360810238103, 1.0047692537567272, 0.9844468692372215, 0.9982265701536166, 1.0106849670172393, 1.0015138431716606, 0.9904243140291955};
        TsData Multd11 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd11, false);
        Assert.assertTrue("Multd11", CompareTsData.compareTS(Multd11, comprest.getData("d-tables.d11", TsData.class), 0.000000001));
        double[] aMultd11a = {0.9863234895262258, 0.9849017973097742, 0.9863610506808953, 1.0353335212926515, 0.9842928104596214, 0.9824333154474152, 0.9840252447653061, 0.9819261406415086, 0.9831825938765412, 0.9811812415450256, 0.9799367404537221, 0.9867342821966111};
        TsData Multd11a = new TsData(TsFrequency.Monthly, 2010, 10, aMultd11a, false);
        Assert.assertTrue("Multd11a", CompareTsData.compareTS(Multd11a, comprest.getData("d-tables.d11a", TsData.class), 0.000000001));
        double[] aMultd12 = {0.7257555152645129, 0.8082753426174571, 0.8890252319114726, 0.9702518856172822, 1.0484966805786615, 1.1186094987220758, 1.1707564647993842, 1.1892968395810077, 1.169051345008212, 1.1111182935677255, 1.025605296178923, 0.9350535172767016, 0.8676525366237356, 0.8470536863586586, 0.8806916177768717, 0.9546806400829784, 1.0383534145986464, 1.0930862093148417, 1.1109429936217015, 1.122768566375551, 1.1790724067964147, 1.3200333181729758, 1.554090489918891, 1.824412718880577, 2.0367377867261194, 2.1127170632946117, 2.0231827456107974, 1.8015656981874126, 1.5274608440874284, 1.289881383303542, 1.1402945787068939, 1.074352889480873, 1.0551815238236555, 1.0377445180578788, 0.9961127894160314, 0.9405200546658726, 0.9019255926856766, 0.895056342132145, 0.9229898157700279, 0.9754377895029319, 1.032839738077145, 1.0769110187481346, 1.0965121859979983, 1.0909796454989955, 1.065485982062839, 1.029393541291118, 0.9906052342023848, 0.9571904594654345, 0.9360203089181875, 0.9345983357614275, 0.9534435481442269, 0.9859072597333383, 1.0201283112455837, 1.044489071279399, 1.0521239420953667, 1.0438586670946304, 1.0264193873961747, 1.0083908769928054, 0.9956139125373041, 0.9897566179948757, 0.988954360561335, 0.9918598993070047, 0.9970223955412907, 1.0027992391095417, 1.0078566620185756, 1.0113448814891501, 1.0130066836006484, 1.0124836120249092, 1.0091677359332953, 1.0033347508547894, 0.9969699015918916, 0.9919185461109961, 0.9895798258833726, 0.9904252442288968, 0.9938536018217664, 0.9985050123717001, 1.0028255213944932, 1.0054430208449165, 1.0060008652568238, 1.004707844190645, 1.0025126551709933, 1.0001946089106786, 0.9984548052803686, 0.9974060199155118, 0.9971429969536896, 0.997495343866581, 0.998511306972912, 0.9997901913668003, 1.0009076040478557, 1.0014099161321943, 1.0013723190426516, 1.0009654317961267, 1.000420841838244, 0.999792591722795, 0.999370356245287, 0.999242706929224, 0.9993162796168088, 0.999340396617334, 0.9994769269889328, 0.9997684738988095, 1.0001265239627457, 1.0002920084773033, 1.0002711172916958, 1.0001807451806837, 1.0001831360518187, 1.0001664406773403, 1.0001264552436517, 1.0001319324271987, 1.0003255714667108, 1.000525024781177, 1.0006543540248403, 1.0006818311804344, 1.0007086245156969, 1.0006489614388245, 1.0004812484477956, 1.0002549116642825, 1.0000920838565557, 1.0000123722549716, 0.9999673234837898, 0.999925226378345, 0.9999275269325977, 0.999920634988053, 0.9999148756136936, 0.9999508666156172, 1.0000479035741265, 1.0000992403145401, 1.0001471711451062, 1.000170873107636, 1.000145219014739, 1.0000373763170383, 0.9999480145819065, 0.9998800594035856, 0.9998172547820477, 0.9997970394959677, 0.9998229098543019, 0.9999123379969924, 1.0000383194834175, 1.0002051074724316, 1.000270703926747, 1.0002487280203796, 1.0001750322409746, 1.00006252876834, 0.9998942071601381, 0.9998001091887646, 0.9998106793708048, 0.9998000968567884, 0.9997350416686314, 0.999749163016446, 0.9999544226564225, 1.0003216387060516, 1.0007749065849543, 1.0013011413675523, 1.001730549243364, 1.0019169219559805, 1.0017817539873632, 1.0016058764291158, 1.0015184195812707, 1.0015668008097154, 1.0015070356476472, 1.0011447181983963, 1.000466848644248, 0.9996264397255409, 0.9987516057963484, 0.9978822284039454, 0.997392290879399, 0.9974953861817171, 0.9978381253426618, 0.9979036903854759, 0.997671511769283, 0.997356744263797, 0.9969754380708553, 0.996714097493477, 0.9966178382572711, 0.9966297057613631, 0.9965722788743692, 0.9966473433012177, 0.9968650971602316, 0.9971362677388983, 0.9975412297934223, 0.9982052931167279, 0.9989605093738834, 0.9996191881385617, 1.000018321848582, 1.000121743043522, 1.000133950288342, 1.0003818227114702, 1.0005978386537486, 1.0004939695040513, 1.000017167659296, 0.9995529353091113, 0.9989996316515154, 0.9981958399985309, 0.9972842155792645, 0.996764549921984, 0.9968402353972232, 0.9971660308121809, 0.9974536982452589, 0.9977448629832061, 0.9983892336358119, 0.9992243848813328, 0.9997843722193062, 1.000038047288495, 1.0002762615594145, 1.0004727302689118, 1.000409365685694, 1.0001184178095603, 0.9999577780849961, 0.9998729639700003, 0.9997239546057132, 0.9994977110672938, 0.9994771019667341, 0.9996983730759889, 1.0000965081408892, 1.000285972661537, 1.0002260133868057, 1.0001348648133064, 1.00011458244386, 0.999914272486952, 0.9995963261677991, 0.9995498957646449, 0.9996891759677867, 0.9994983159308483, 0.9991205549560858, 0.9991869829291341, 1.0000061580450348, 1.0012694513301286, 1.0026107889619567, 1.0038064928409534, 1.0047151509983672, 1.0051063236363191, 1.004766223367049, 1.0040137060815588, 1.003239426606198, 1.0025176825764333, 1.001225110222443, 0.9988490504428938, 0.995655507278447, 0.9924180991640802};
        TsData Multd12 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd12, false);
        Assert.assertTrue("Multd12", CompareTsData.compareTS(Multd12, comprest.getData("d-tables.d12", TsData.class), 0.000000001));
        double[] aMultd12a = {0.9896299587424044, 0.9875141392991756, 0.9861694490821122, 0.9855078774727912, 0.9851701459772637, 0.9844863431673784, 0.9834492813804567, 0.9825839087222524, 0.9822074804742437, 0.9822292081108301, 0.9825107267690585, 0.9831003321356437};
        TsData Multd12a = new TsData(TsFrequency.Monthly, 2010, 10, aMultd12a, false);
        Assert.assertTrue("Multd12a", CompareTsData.compareTS(Multd12a, comprest.getData("d-tables.d12a", TsData.class), 0.000000001));
        double[] aMultd13 = {1.0284941595797406, 0.9855477809703528, 0.9534687066053348, 0.9757439616320389, 1.0396458485592086, 1.040615058704902, 0.9919097299852868, 0.9821197104826499, 0.978958536334195, 1.0694433154532224, 1.083397462455955, 0.9668696144370545, 0.9013270414426287, 0.9315708658121991, 0.9541141436792324, 0.9796481863918727, 1.0984065633839017, 1.061599276326655, 1.0358309099511376, 1.0146742497458097, 0.9698055457021488, 0.8783123300876722, 0.7030326227034989, 0.4932532999290451, 0.3997292256883002, 3.7874900373238107, 0.4179337424424895, 0.5154920459987061, 0.7693287996672553, 0.8975437518858678, 0.994570396352492, 1.0285014023719974, 1.0496614765857284, 1.0388812028416574, 1.0489913767773016, 0.9799470292483836, 0.9750245064521668, 0.9384448894135187, 0.9623246444836553, 0.978239438116356, 1.0827584705164965, 1.0253150167265956, 1.0000913263933746, 0.9826788790369079, 0.9942345351775016, 1.0091545383974136, 1.025811081983505, 0.992312996093967, 0.9784537968422833, 0.969664834709029, 0.9803963082733949, 0.9914303901927904, 1.0413830255314547, 1.0202715261373188, 1.002484021585595, 0.9940985120707703, 0.9988736862902188, 0.9961943245556903, 0.9949824477176854, 0.9873859330918631, 0.9808817970709524, 0.9694754033143462, 0.9802145735604534, 0.9939362657445124, 1.0060704661187627, 1.0134968296043199, 1.0055973626720351, 1.004135110782417, 0.9978445913769065, 1.00072552118198, 0.9974419220369791, 1.0040009781750534, 0.9942590005955977, 0.9963929288300328, 0.9977124377990058, 1.0041888198691755, 0.9999224330427747, 1.0055167556763012, 0.9992950413752028, 1.0005844962903025, 0.9959386014201116, 1.0007798031759556, 1.0008157607690635, 1.00206459934017, 0.9960082320955519, 0.9992983065721716, 1.0010285770262466, 1.0019220533152595, 0.9968540101608806, 1.002974040079443, 1.00080758149282, 1.0005817504671835, 0.996086168237592, 1.0007113254993516, 1.0017508077556758, 1.0018672593823164, 0.9962428042328614, 0.9991357760644975, 1.0020777349601668, 1.0027647729041678, 0.9961146832314802, 0.9993925790018687, 1.0020889387941356, 1.0019363533531322, 0.9972799906112836, 0.9992877118813766, 1.0011431487803948, 1.000905238921822, 0.9960453243734445, 0.9999762452705738, 0.9999763723331935, 1.0009929999650873, 0.9958353441273807, 1.0008520763451807, 0.999847830902206, 1.0006259272940519, 0.9982574240216905, 1.001409787353286, 0.9994183632196393, 1.0002262788331777, 0.9996000514330036, 1.0009175511873638, 0.9995321711649603, 0.9992012591593511, 1.0006731501743813, 1.0003482993573631, 0.9995125148037529, 1.0000158327450848, 1.0005420652109953, 0.9993589918336637, 1.000019802659743, 1.0007563833326447, 0.9995421848150345, 0.999555338598523, 1.0001188844918014, 1.00076584137504, 0.9990664920597293, 1.000369833391699, 0.9999109011397602, 0.9999006774882884, 1.0009650436143194, 0.999221987359712, 1.0002995418362246, 0.9987993451153439, 1.001805135177641, 0.9988010867041701, 1.0002546430323296, 1.0001005876647526, 1.0015207269527244, 0.9974411771882444, 0.9993402730760821, 1.0013401268530628, 1.001979400564193, 0.9912281252724773, 0.9984233564195921, 1.0023649070875544, 1.0006179604474827, 0.9902445603237938, 0.9987688154420377, 1.002483364971219, 1.0029592810629149, 0.9966138508924842, 0.999830319447562, 0.9999017161416551, 1.014382854241427, 0.9996391497601209, 0.999395770780662, 0.9905143826539216, 1.0171179974691442, 1.0041345494578722, 0.9985912017581451, 0.9954081727094061, 1.0148022050989431, 1.003419529485651, 0.9993589932513417, 0.9996694946203903, 1.0155243016156992, 0.9974695037108253, 0.9991338068325601, 1.0008543348146541, 1.008718611527513, 0.9949717909759157, 0.9986570023097426, 1.0007401110634777, 1.0043429855852266, 0.9980264796582758, 0.998123685273614, 0.9978181382250059, 1.0034342668686635, 1.0021737641909383, 0.9998786072262669, 0.9948753485138411, 1.0021106441955665, 1.015371993506874, 1.0011636122013787, 0.9967607057193465, 0.9989763328646291, 1.0102720858888388, 1.0014342419505087, 0.9982633222977143, 0.9952564879973957, 1.0043049711883307, 1.0010238371831457, 1.0019283549785616, 0.991640064401088, 1.0018334059260372, 1.0030637479894071, 1.0012641296816365, 0.9942658465301848, 1.0022623196034464, 1.0027082462998338, 0.9993769879275674, 0.9940095755088354, 1.0040444622348943, 1.0036940493008155, 0.9981332261078705, 0.9970477172198271, 1.000202520177963, 1.0017838524493616, 1.000632364686035, 1.0000459116383167, 0.9981083149759766, 1.0000885593270339, 1.0016572261812036, 1.0021315980863856, 0.9939340810253517, 0.998904847944186, 1.0040778032460878, 1.0036524106657032, 0.975776324035839, 0.9962795553099072, 1.0054006981273331, 1.0015248873897475, 0.981974568974414, 0.9970051289782772, 1.0118495548142108, 1.0058838984471918, 0.9979909826951322};
        TsData Multd13 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd13, false);
        Assert.assertTrue("Multd13", CompareTsData.compareTS(Multd13, comprest.getData("d-tables.d13", TsData.class), 0.000000001));
        double[] aMultd16 = {1.2299206498673345, 1.2895850813116765, 1.2586044486592514, 1.0338368986517752, 0.8544292413822385, 0.8805872963228253, 0.9171569844282186, 0.8345331380926453, 0.8229698990292976, 0.8546915560814836, 0.9588410547169358, 1.0771788613836226, 1.2153893502873385, 1.2800863195400127, 1.266917436464903, 1.0371248322716498, 0.8410698207908308, 0.868895494259414, 0.924803423622441, 0.8461851030412394, 0.8439575946311002, 0.8691203743388124, 0.9746201590542173, 1.0685354715797122, 1.1888210852534293, 1.2501316268061589, 1.261174393643796, 1.0343376331339982, 0.8291555049434444, 0.8605541216016592, 0.941270310077216, 0.8703325830832518, 0.8847421360938215, 0.9154956482614193, 1.0235604844525628, 1.045285434998638, 1.119030130771578, 1.1671060223412513, 1.206972611936757, 1.0131951690381389, 0.8729172449872681, 0.8923416575296574, 0.9785022236833206, 0.9017408269868046, 0.916631002952194, 0.9533220419610422, 1.05598419420603, 1.0189427785599394, 1.054779091567834, 1.0952277313246703, 1.147580841050674, 0.9923222112942834, 0.9080417652416831, 0.9315720862768132, 1.0167629958318134, 0.9358223438304543, 0.9390027750715795, 0.9895225381042265, 1.082315687839482, 0.994376935866195, 0.99000798197705, 1.0360936040701165, 1.0964312031120205, 0.9780976972608189, 0.941464698663623, 0.9741417905500219, 1.0519048318741042, 0.9632196963849522, 0.9411256159871587, 0.9968122593376435, 1.0775457634713874, 0.9873380331779772, 0.957573222864117, 1.0164110509636899, 1.0815533713515855, 0.980726229600254, 0.9381669655394781, 0.9912772569025657, 1.068212067550487, 0.9797661479139126, 0.9394623732725816, 1.0012831856104192, 1.0763663949615139, 0.986276297712464, 0.9409245459295611, 1.0066608373269137, 1.0769435680218158, 0.9849998364825154, 0.9349255936700667, 0.9990580839097644, 1.0745833243187728, 0.9862790925471548, 0.9351202056967557, 1.0020057198917671, 1.0763534178516359, 0.9882495737125382, 0.9350475658194907, 1.0023398214231378, 1.0764520508522222, 0.9882379818798445, 0.9338720907744574, 1.0011508530905124, 1.0754656317036007, 0.9877874110081379, 0.9339743398423934, 1.0016181494495744, 1.0760526836316577, 0.9883999418539663, 0.9353066294144565, 1.0011991413413839, 1.07555213754637, 0.9881928747313915, 0.9357683062272729, 1.00084623854733, 1.0748824570945612, 0.987594230949602, 0.9362616427006387, 1.0009032383845922, 1.0746062244684493, 0.9875205022059688, 0.9383075495888324, 1.000138370675733, 1.0741040865399762, 0.9869381606959234, 0.9399546118936093, 0.9994076908650684, 1.0733756618278727, 0.9863857333419863, 0.9405153246176783, 0.9995709968375719, 1.072866728915141, 0.9863638253920287, 0.9424475157119018, 0.998905923207449, 1.0726174549824552, 0.9855069157009693, 0.9447149316957808, 0.9975134131093142, 1.0719158605028427, 0.9845196316654976, 0.9446441744215113, 0.9986887943098083, 1.0714605395497416, 0.984870720079163, 0.9463700649022506, 0.9984775475058096, 1.0713307233792435, 0.9832497574147425, 0.9488615530171856, 0.9964879471228095, 1.0709564950955055, 0.9824663297841943, 0.9476663591892267, 0.9983300925546392, 1.0705267311405626, 0.9835315738328921, 0.9495247632977277, 0.9982167944147163, 1.0704027143118162, 0.9809514379948832, 0.9515685879657715, 0.9969879237298408, 1.0706298063118438, 0.9798552095318336, 0.9489822886486574, 0.9997072215862537, 1.0707024756444405, 0.9809519073189283, 0.9511568689145555, 0.9993168462668123, 1.0705797036807077, 0.9777405232143633, 0.9517002868633325, 0.9996207038769288, 1.071154783793376, 0.9774908741904287, 0.9483870104523049, 1.0022611627290803, 1.0716554326836993, 0.9787859236972426, 0.9502380192911165, 1.000094919322732, 1.0720932023453111, 0.9763971001724812, 0.9494533060947392, 1.00206083294096, 1.0727410771288155, 0.9759473458317499, 0.9461183785790815, 1.005454359573836, 1.0734766540157743, 0.9765328835399986, 0.9466813013648021, 1.0023287447972289, 1.0741532229182116, 0.9760043719181684, 0.945979250739024, 1.0040717672614592, 1.0746013759527604, 0.9762749735713531, 0.9438778568008476, 1.0058695253124275, 1.0743485369419437, 0.9768542990612559, 0.943059185389626, 1.0039429623329703, 1.0748098729782811, 0.9778439568763213, 0.9438104948188503, 1.004076834945478, 1.075292833432012, 0.9780922984809161, 0.944377326935945, 1.0032776112250097, 1.0736217391081813, 0.9769714717260352, 0.9418116979679172, 1.005991225069511, 1.073974896176404, 0.9791917107848501, 0.9442186486970042, 1.0030575349729531, 1.0745503301974917, 0.980257278627665, 0.9472136757233786, 0.9988647139283764, 1.0714379525635245, 0.9778615713460478, 0.9428256115276057, 1.006948339580249, 1.0723044215072153, 0.9803710394384616, 0.9457470921279549, 1.0017243498007098, 1.0731655838765581, 0.9816022127328999, 0.9502579584782416, 0.9963011671085779};
        TsData Multd16 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd16, false);
        Assert.assertTrue("Multd16", CompareTsData.compareTS(Multd16, comprest.getData("d-tables.d16", TsData.class), 0.000000001));
        double[] aMultd16a = {1.0696188005654919, 0.9776401560704643, 0.9440434161866712, 1.0076888583786547, 1.0713584920832262, 0.9804905726075648, 0.9469633119014776, 1.0008787817880964, 1.0722972337272438, 0.9819451597724298, 0.9515407900689687, 0.9954912244737029};
        TsData Multd16a = new TsData(TsFrequency.Monthly, 2010, 10, aMultd16a, false);
        Assert.assertTrue("Multd16a", CompareTsData.compareTS(Multd16a, comprest.getData("d-tables.d16a", TsData.class), 0.000000001));
        double[] aMultd18 = {1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0000000000000002, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0000000000000002, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 0.9999999999999999, 0.9999999999999999, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0000000000000002, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 0.9999999999999999, 1.0, 1.0, 0.9999999999999999, 0.9999999999999999, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0000000000000002, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0000000000000002, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0000000000000002, 1.0000000000000002, 1.0};
        TsData Multd18 = new TsData(TsFrequency.Monthly, 1991, 0, aMultd18, false);
        Assert.assertTrue("Multd18", CompareTsData.compareTS(Multd18, comprest.getData("d-tables.d18", TsData.class), 0.000000001));
        double[] aMultSeriesValue = {0.9180562, 1.0272757, 1.0668658, 0.9787514, 0.9313836, 1.0250405, 1.0650804, 0.9747613, 0.9418502, 1.0156112, 1.0654049, 0.9738503, 0.9504815, 1.010104, 1.0645658, 0.9699722, 0.9592689, 1.0082833, 1.0642167, 0.9640116, 0.965041, 1.0076595, 1.0648469, 0.9615725, 0.9678711, 10.0034218, 1.066394, 0.9605819, 0.9743569, 0.996285, 1.0674977, 0.9616944, 0.9799257, 0.9869897, 1.0695324, 0.9633976, 0.9840746, 0.9803236, 1.0720522, 0.9668027, 0.9761973, 0.9852996, 1.0730376, 0.9667407, 0.9710266, 0.9903273, 1.0730635, 0.967825, 0.9660222, 0.992547, 1.0727041, 0.9699537, 0.964653, 0.9927414, 1.072418, 0.9711013, 0.9627251, 0.9940281, 1.0721618, 0.9717765, 0.9603546, 0.9962908, 1.0715377, 0.9748881, 0.9546215, 0.9984903, 1.0715511, 0.9792769, 0.9477065, 1.000862, 1.0715326, 0.9832773, 0.942155, 1.003048, 1.0724468, 0.983362, 0.9407448, 1.0021712, 1.0738647, 0.9849541, 0.9379978, 1.002259, 1.0755799, 0.9857489, 0.9344911, 1.0034349, 1.0764464, 0.986686, 0.9328302, 1.0034421, 1.076927, 0.9878056, 0.9318523, 1.0025105, 1.077559, 0.9893451, 0.9308975, 1.000813, 1.0781244, 0.9907408, 0.9303614, 1.0008349, 1.0780044, 0.989879, 0.9316045, 1.0010713, 1.077419, 0.9894252, 0.9319111, 1.001701, 1.0762305, 0.9898486, 0.9325315, 1.0023491, 1.0752361, 0.9884643, 0.9347162, 1.0023267, 1.0739461, 0.9876701, 0.9378643, 1.0009766, 1.0735102, 0.9861014, 0.9406324, 0.999855, 1.0730103, 0.9865699, 0.9411618, 0.9989676, 1.0728322, 0.9869915, 0.9418439, 0.9982591, 1.072555, 0.9861752, 0.9438692, 0.998087, 1.0721105, 0.9846667, 0.9457213, 0.9979742, 1.0716681, 0.9834916, 0.9478989, 0.9970811, 1.0713196, 0.983102, 0.9502612, 0.9942578, 1.0710793, 0.985063, 0.9511854, 0.9914698, 1.0707433, 0.9874407, 0.9515542, 0.9900275, 1.070696, 0.9845132, 0.9548301, 0.9932408, 1.0691118, 0.977684, 0.9601211, 0.9968435, 1.0677422, 0.9696101, 0.9651861, 1.0007962, 1.065838, 0.9700529, 0.9625211, 0.9996584, 1.0667989, 0.9738917, 0.9600908, 0.996862, 1.0680945, 0.977864, 0.9575264, 0.9946873, 1.070673, 0.9772387, 0.9537045, 1.0004651, 1.0713684, 0.974299, 0.9493839, 1.0071895, 1.0722726, 0.9697757, 0.946103, 1.0144437, 1.0720051, 0.9700858, 0.9426046, 1.0120981, 1.0744092, 0.9738236, 0.939198, 1.0102382, 1.0757456, 0.9792007, 0.9355581, 1.0059027, 1.0780573, 0.9789557, 0.9381395, 1.0058429, 1.0776412, 0.9771881, 0.9388107, 1.0076234, 1.0778313, 0.9752792, 0.9391388, 1.0061087, 1.0754564, 0.9793699, 0.9439685, 1.0006578, 1.0737004, 0.9810835, 0.9492386, 0.994066, 1.0730588, 0.9855865, 0.950731, 0.9875736, 1.0734068, 0.9896219, 0.9502576, 0.9861444, 1.0712624, 0.9920906, 0.9516965, 0.9867609};
        TsData MultSeriesValue = new TsData(TsFrequency.Monthly, 1991, 0, aMultSeriesValue, false);
        DefaultSeriesDecomposition dsdMultSeriesValue = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataMultSeriesValue = dsdMultSeriesValue.getSeries(ComponentType.Series, ComponentInformation.Value);
        Assert.assertTrue("MultSeriesValue", CompareTsData.compareTS(MultSeriesValue, tsDataMultSeriesValue, 0.000000001));
        double[] aMultSeriesForecast = {1.0549901478366122, 0.9628795468360084, 0.9311676558782668, 1.0432940541125446, 1.0545304611823807, 0.9632666040117844, 0.9318358047776164, 0.9827890394511601, 1.0542639756625913, 0.9634661709946413, 0.9324497802289448, 0.9822853188140847};
        TsData MultSeriesForecast = new TsData(TsFrequency.Monthly, 2010, 10, aMultSeriesForecast, false);
        DefaultSeriesDecomposition dsdMultSeriesForecast = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataMultSeriesForecast = dsdMultSeriesForecast.getSeries(ComponentType.Series, ComponentInformation.Forecast);
        Assert.assertTrue("MultSeriesForecast", CompareTsData.compareTS(MultSeriesForecast, tsDataMultSeriesForecast, 0.000000001));
        double[] aMultTrendValue = {0.7257555152645129, 0.8082753426174571, 0.8890252319114726, 0.9702518856172822, 1.0484966805786615, 1.1186094987220758, 1.1707564647993842, 1.1892968395810077, 1.169051345008212, 1.1111182935677255, 1.025605296178923, 0.9350535172767016, 0.8676525366237356, 0.8470536863586586, 0.8806916177768717, 0.9546806400829784, 1.0383534145986464, 1.0930862093148417, 1.1109429936217015, 1.122768566375551, 1.1790724067964147, 1.3200333181729758, 1.554090489918891, 1.824412718880577, 2.0367377867261194, 2.1127170632946117, 2.0231827456107974, 1.8015656981874126, 1.5274608440874284, 1.289881383303542, 1.1402945787068939, 1.074352889480873, 1.0551815238236555, 1.0377445180578788, 0.9961127894160314, 0.9405200546658726, 0.9019255926856766, 0.895056342132145, 0.9229898157700279, 0.9754377895029319, 1.032839738077145, 1.0769110187481346, 1.0965121859979983, 1.0909796454989955, 1.065485982062839, 1.029393541291118, 0.9906052342023848, 0.9571904594654345, 0.9360203089181875, 0.9345983357614275, 0.9534435481442269, 0.9859072597333383, 1.0201283112455837, 1.044489071279399, 1.0521239420953667, 1.0438586670946304, 1.0264193873961747, 1.0083908769928054, 0.9956139125373041, 0.9897566179948757, 0.988954360561335, 0.9918598993070047, 0.9970223955412907, 1.0027992391095417, 1.0078566620185756, 1.0113448814891501, 1.0130066836006484, 1.0124836120249092, 1.0091677359332953, 1.0033347508547894, 0.9969699015918916, 0.9919185461109961, 0.9895798258833726, 0.9904252442288968, 0.9938536018217664, 0.9985050123717001, 1.0028255213944932, 1.0054430208449165, 1.0060008652568238, 1.004707844190645, 1.0025126551709933, 1.0001946089106786, 0.9984548052803686, 0.9974060199155118, 0.9971429969536896, 0.997495343866581, 0.998511306972912, 0.9997901913668003, 1.0009076040478557, 1.0014099161321943, 1.0013723190426516, 1.0009654317961267, 1.000420841838244, 0.999792591722795, 0.999370356245287, 0.999242706929224, 0.9993162796168088, 0.999340396617334, 0.9994769269889328, 0.9997684738988095, 1.0001265239627457, 1.0002920084773033, 1.0002711172916958, 1.0001807451806837, 1.0001831360518187, 1.0001664406773403, 1.0001264552436517, 1.0001319324271987, 1.0003255714667108, 1.000525024781177, 1.0006543540248403, 1.0006818311804344, 1.0007086245156969, 1.0006489614388245, 1.0004812484477956, 1.0002549116642825, 1.0000920838565557, 1.0000123722549716, 0.9999673234837898, 0.999925226378345, 0.9999275269325977, 0.999920634988053, 0.9999148756136936, 0.9999508666156172, 1.0000479035741265, 1.0000992403145401, 1.0001471711451062, 1.000170873107636, 1.000145219014739, 1.0000373763170383, 0.9999480145819065, 0.9998800594035856, 0.9998172547820477, 0.9997970394959677, 0.9998229098543019, 0.9999123379969924, 1.0000383194834175, 1.0002051074724316, 1.000270703926747, 1.0002487280203796, 1.0001750322409746, 1.00006252876834, 0.9998942071601381, 0.9998001091887646, 0.9998106793708048, 0.9998000968567884, 0.9997350416686314, 0.999749163016446, 0.9999544226564225, 1.0003216387060516, 1.0007749065849543, 1.0013011413675523, 1.001730549243364, 1.0019169219559805, 1.0017817539873632, 1.0016058764291158, 1.0015184195812707, 1.0015668008097154, 1.0015070356476472, 1.0011447181983963, 1.000466848644248, 0.9996264397255409, 0.9987516057963484, 0.9978822284039454, 0.997392290879399, 0.9974953861817171, 0.9978381253426618, 0.9979036903854759, 0.997671511769283, 0.997356744263797, 0.9969754380708553, 0.996714097493477, 0.9966178382572711, 0.9966297057613631, 0.9965722788743692, 0.9966473433012177, 0.9968650971602316, 0.9971362677388983, 0.9975412297934223, 0.9982052931167279, 0.9989605093738834, 0.9996191881385617, 1.000018321848582, 1.000121743043522, 1.000133950288342, 1.0003818227114702, 1.0005978386537486, 1.0004939695040513, 1.000017167659296, 0.9995529353091113, 0.9989996316515154, 0.9981958399985309, 0.9972842155792645, 0.996764549921984, 0.9968402353972232, 0.9971660308121809, 0.9974536982452589, 0.9977448629832061, 0.9983892336358119, 0.9992243848813328, 0.9997843722193062, 1.000038047288495, 1.0002762615594145, 1.0004727302689118, 1.000409365685694, 1.0001184178095603, 0.9999577780849961, 0.9998729639700003, 0.9997239546057132, 0.9994977110672938, 0.9994771019667341, 0.9996983730759889, 1.0000965081408892, 1.000285972661537, 1.0002260133868057, 1.0001348648133064, 1.00011458244386, 0.999914272486952, 0.9995963261677991, 0.9995498957646449, 0.9996891759677867, 0.9994983159308483, 0.9991205549560858, 0.9991869829291341, 1.0000061580450348, 1.0012694513301286, 1.0026107889619567, 1.0038064928409534, 1.0047151509983672, 1.0051063236363191, 1.004766223367049, 1.0040137060815588, 1.003239426606198, 1.0025176825764333, 1.001225110222443, 0.9988490504428938, 0.995655507278447, 0.9924180991640802};
        TsData MultTrendValue = new TsData(TsFrequency.Monthly, 1991, 0, aMultTrendValue, false);
        DefaultSeriesDecomposition dsdMultTrendValue = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataMultTrendValue = dsdMultTrendValue.getSeries(ComponentType.Trend, ComponentInformation.Value);
        Assert.assertTrue("MultTrendValue", CompareTsData.compareTS(MultTrendValue, tsDataMultTrendValue, 0.000000001));
        double[] aMultTrendForecast = {0.9896299587424044, 0.9875141392991756, 0.9861694490821122, 0.9855078774727912, 0.9851701459772637, 0.9844863431673784, 0.9834492813804567, 0.9825839087222524, 0.9822074804742437, 0.9822292081108301, 0.9825107267690585, 0.9831003321356437};
        TsData MultTrendForecast = new TsData(TsFrequency.Monthly, 2010, 10, aMultTrendForecast, false);
        DefaultSeriesDecomposition dsdMultTrendForecast = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataMultTrendForecast = dsdMultTrendForecast.getSeries(ComponentType.Trend, ComponentInformation.Forecast);
        Assert.assertTrue("MultTrendForecast", CompareTsData.compareTS(MultTrendForecast, tsDataMultTrendForecast, 0.000000001));
        double[] aMultSeasonalValue = {1.2299206498673345, 1.2895850813116765, 1.2586044486592514, 1.0338368986517752, 0.8544292413822384, 0.8805872963228253, 0.9171569844282185, 0.8345331380926453, 0.8229698990292976, 0.8546915560814837, 0.9588410547169358, 1.0771788613836226, 1.2153893502873385, 1.2800863195400127, 1.266917436464903, 1.0371248322716498, 0.8410698207908308, 0.8688954942594141, 0.9248034236224408, 0.8461851030412394, 0.8439575946311002, 0.8691203743388124, 0.9746201590542174, 1.0685354715797122, 1.1888210852534293, 1.2501316268061586, 1.261174393643796, 1.0343376331339982, 0.8291555049434444, 0.8605541216016592, 0.941270310077216, 0.8703325830832519, 0.8847421360938215, 0.9154956482614193, 1.0235604844525628, 1.045285434998638, 1.119030130771578, 1.1671060223412513, 1.206972611936757, 1.0131951690381389, 0.8729172449872681, 0.8923416575296574, 0.9785022236833207, 0.9017408269868045, 0.916631002952194, 0.9533220419610422, 1.05598419420603, 1.0189427785599394, 1.054779091567834, 1.0952277313246703, 1.147580841050674, 0.9923222112942834, 0.9080417652416831, 0.9315720862768131, 1.0167629958318134, 0.9358223438304544, 0.9390027750715796, 0.9895225381042264, 1.082315687839482, 0.994376935866195, 0.99000798197705, 1.0360936040701165, 1.0964312031120205, 0.9780976972608189, 0.9414646986636231, 0.9741417905500219, 1.0519048318741042, 0.9632196963849523, 0.9411256159871587, 0.9968122593376435, 1.0775457634713874, 0.9873380331779772, 0.957573222864117, 1.0164110509636899, 1.0815533713515855, 0.9807262296002541, 0.9381669655394781, 0.9912772569025657, 1.068212067550487, 0.9797661479139126, 0.9394623732725816, 1.0012831856104192, 1.0763663949615139, 0.986276297712464, 0.9409245459295611, 1.0066608373269137, 1.0769435680218158, 0.9849998364825154, 0.9349255936700667, 0.9990580839097644, 1.0745833243187728, 0.9862790925471548, 0.9351202056967557, 1.0020057198917671, 1.0763534178516359, 0.9882495737125381, 0.9350475658194907, 1.0023398214231378, 1.0764520508522222, 0.9882379818798444, 0.9338720907744574, 1.0011508530905124, 1.0754656317036007, 0.9877874110081379, 0.9339743398423934, 1.0016181494495744, 1.0760526836316577, 0.9883999418539663, 0.9353066294144565, 1.0011991413413839, 1.07555213754637, 0.9881928747313916, 0.9357683062272729, 1.00084623854733, 1.0748824570945612, 0.9875942309496021, 0.9362616427006387, 1.0009032383845922, 1.0746062244684493, 0.9875205022059689, 0.9383075495888324, 1.000138370675733, 1.0741040865399762, 0.9869381606959234, 0.9399546118936093, 0.9994076908650684, 1.0733756618278727, 0.9863857333419863, 0.9405153246176783, 0.9995709968375719, 1.072866728915141, 0.9863638253920286, 0.9424475157119018, 0.998905923207449, 1.0726174549824552, 0.9855069157009693, 0.9447149316957808, 0.9975134131093143, 1.0719158605028427, 0.9845196316654976, 0.9446441744215113, 0.9986887943098083, 1.0714605395497416, 0.984870720079163, 0.9463700649022507, 0.9984775475058096, 1.0713307233792435, 0.9832497574147425, 0.9488615530171856, 0.9964879471228095, 1.0709564950955055, 0.9824663297841942, 0.9476663591892266, 0.9983300925546392, 1.0705267311405626, 0.9835315738328922, 0.9495247632977277, 0.9982167944147163, 1.0704027143118162, 0.980951437994883, 0.9515685879657715, 0.9969879237298408, 1.0706298063118438, 0.9798552095318336, 0.9489822886486574, 0.9997072215862537, 1.0707024756444405, 0.9809519073189283, 0.9511568689145554, 0.9993168462668124, 1.0705797036807077, 0.9777405232143633, 0.9517002868633326, 0.9996207038769289, 1.071154783793376, 0.9774908741904287, 0.9483870104523048, 1.0022611627290803, 1.0716554326836993, 0.9787859236972426, 0.9502380192911164, 1.000094919322732, 1.0720932023453111, 0.976397100172481, 0.9494533060947391, 1.00206083294096, 1.0727410771288155, 0.9759473458317499, 0.9461183785790815, 1.005454359573836, 1.0734766540157743, 0.9765328835399986, 0.9466813013648021, 1.0023287447972289, 1.0741532229182116, 0.9760043719181684, 0.945979250739024, 1.0040717672614592, 1.0746013759527604, 0.9762749735713531, 0.9438778568008476, 1.0058695253124275, 1.0743485369419437, 0.976854299061256, 0.943059185389626, 1.0039429623329703, 1.0748098729782811, 0.9778439568763213, 0.9438104948188503, 1.004076834945478, 1.075292833432012, 0.9780922984809161, 0.944377326935945, 1.0032776112250097, 1.0736217391081813, 0.9769714717260352, 0.9418116979679172, 1.005991225069511, 1.073974896176404, 0.9791917107848501, 0.9442186486970042, 1.0030575349729531, 1.0745503301974917, 0.9802572786276649, 0.9472136757233786, 0.9988647139283764, 1.0714379525635245, 0.9778615713460477, 0.9428256115276058, 1.006948339580249, 1.0723044215072153, 0.9803710394384616, 0.9457470921279549, 1.0017243498007098, 1.0731655838765581, 0.9816022127328998, 0.9502579584782415, 0.9963011671085779};
        TsData MultSeasonalValue = new TsData(TsFrequency.Monthly, 1991, 0, aMultSeasonalValue, false);
        DefaultSeriesDecomposition dsdMultSeasonalValue = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataMultSeasonalValue = dsdMultSeasonalValue.getSeries(ComponentType.Seasonal, ComponentInformation.Value);
        Assert.assertTrue("MultSeasonalValue", CompareTsData.compareTS(MultSeasonalValue, tsDataMultSeasonalValue, 0.000000001));
        double[] aMultSeasonalForecast = {1.0696188005654919, 0.9776401560704643, 0.9440434161866712, 1.0076888583786547, 1.0713584920832262, 0.9804905726075648, 0.9469633119014776, 1.0008787817880964, 1.0722972337272438, 0.9819451597724298, 0.9515407900689687, 0.9954912244737029};
        TsData MultSeasonalForecast = new TsData(TsFrequency.Monthly, 2010, 10, aMultSeasonalForecast, false);
        DefaultSeriesDecomposition dsdMultSeasonalForecast = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataMultSeasonalForecast = dsdMultSeasonalForecast.getSeries(ComponentType.Seasonal, ComponentInformation.Forecast);
        Assert.assertTrue("MultSeasonalForecast", CompareTsData.compareTS(MultSeasonalForecast, tsDataMultSeasonalForecast, 0.000000001));
        double[] aMultIrregularValue = {1.0284941595797406, 0.9855477809703528, 0.9534687066053348, 0.9757439616320389, 1.0396458485592086, 1.040615058704902, 0.9919097299852868, 0.9821197104826499, 0.978958536334195, 1.0694433154532224, 1.083397462455955, 0.9668696144370545, 0.9013270414426287, 0.9315708658121991, 0.9541141436792324, 0.9796481863918727, 1.0984065633839017, 1.061599276326655, 1.0358309099511376, 1.0146742497458097, 0.9698055457021488, 0.8783123300876722, 0.7030326227034989, 0.4932532999290451, 0.3997292256883002, 3.7874900373238107, 0.4179337424424895, 0.5154920459987061, 0.7693287996672553, 0.8975437518858678, 0.994570396352492, 1.0285014023719974, 1.0496614765857284, 1.0388812028416574, 1.0489913767773016, 0.9799470292483836, 0.9750245064521668, 0.9384448894135187, 0.9623246444836553, 0.978239438116356, 1.0827584705164965, 1.0253150167265956, 1.0000913263933746, 0.9826788790369079, 0.9942345351775016, 1.0091545383974136, 1.025811081983505, 0.992312996093967, 0.9784537968422833, 0.969664834709029, 0.9803963082733949, 0.9914303901927904, 1.0413830255314547, 1.0202715261373188, 1.002484021585595, 0.9940985120707703, 0.9988736862902188, 0.9961943245556903, 0.9949824477176854, 0.9873859330918631, 0.9808817970709524, 0.9694754033143462, 0.9802145735604534, 0.9939362657445124, 1.0060704661187627, 1.0134968296043199, 1.0055973626720351, 1.004135110782417, 0.9978445913769065, 1.00072552118198, 0.9974419220369791, 1.0040009781750534, 0.9942590005955977, 0.9963929288300328, 0.9977124377990058, 1.0041888198691755, 0.9999224330427747, 1.0055167556763012, 0.9992950413752028, 1.0005844962903025, 0.9959386014201116, 1.0007798031759556, 1.0008157607690635, 1.00206459934017, 0.9960082320955519, 0.9992983065721716, 1.0010285770262466, 1.0019220533152595, 0.9968540101608806, 1.002974040079443, 1.00080758149282, 1.0005817504671835, 0.996086168237592, 1.0007113254993516, 1.0017508077556758, 1.0018672593823164, 0.9962428042328614, 0.9991357760644975, 1.0020777349601668, 1.0027647729041678, 0.9961146832314802, 0.9993925790018687, 1.0020889387941356, 1.0019363533531322, 0.9972799906112836, 0.9992877118813766, 1.0011431487803948, 1.000905238921822, 0.9960453243734445, 0.9999762452705738, 0.9999763723331935, 1.0009929999650873, 0.9958353441273807, 1.0008520763451807, 0.999847830902206, 1.0006259272940519, 0.9982574240216905, 1.001409787353286, 0.9994183632196393, 1.0002262788331777, 0.9996000514330036, 1.0009175511873638, 0.9995321711649603, 0.9992012591593511, 1.0006731501743813, 1.0003482993573631, 0.9995125148037529, 1.0000158327450848, 1.0005420652109953, 0.9993589918336637, 1.000019802659743, 1.0007563833326447, 0.9995421848150345, 0.999555338598523, 1.0001188844918014, 1.00076584137504, 0.9990664920597293, 1.000369833391699, 0.9999109011397602, 0.9999006774882884, 1.0009650436143194, 0.999221987359712, 1.0002995418362246, 0.9987993451153439, 1.001805135177641, 0.9988010867041701, 1.0002546430323296, 1.0001005876647526, 1.0015207269527244, 0.9974411771882444, 0.9993402730760821, 1.0013401268530628, 1.001979400564193, 0.9912281252724773, 0.9984233564195921, 1.0023649070875544, 1.0006179604474827, 0.9902445603237938, 0.9987688154420377, 1.002483364971219, 1.0029592810629149, 0.9966138508924842, 0.999830319447562, 0.9999017161416551, 1.014382854241427, 0.9996391497601209, 0.999395770780662, 0.9905143826539216, 1.0171179974691442, 1.0041345494578722, 0.9985912017581451, 0.9954081727094061, 1.0148022050989431, 1.003419529485651, 0.9993589932513417, 0.9996694946203903, 1.0155243016156992, 0.9974695037108253, 0.9991338068325601, 1.0008543348146541, 1.008718611527513, 0.9949717909759157, 0.9986570023097426, 1.0007401110634777, 1.0043429855852266, 0.9980264796582758, 0.998123685273614, 0.9978181382250059, 1.0034342668686635, 1.0021737641909383, 0.9998786072262669, 0.9948753485138411, 1.0021106441955665, 1.015371993506874, 1.0011636122013787, 0.9967607057193465, 0.9989763328646291, 1.0102720858888388, 1.0014342419505087, 0.9982633222977143, 0.9952564879973957, 1.0043049711883307, 1.0010238371831457, 1.0019283549785616, 0.991640064401088, 1.0018334059260372, 1.0030637479894071, 1.0012641296816365, 0.9942658465301848, 1.0022623196034464, 1.0027082462998338, 0.9993769879275674, 0.9940095755088354, 1.0040444622348943, 1.0036940493008155, 0.9981332261078705, 0.9970477172198271, 1.000202520177963, 1.0017838524493616, 1.000632364686035, 1.0000459116383167, 0.9981083149759766, 1.0000885593270339, 1.0016572261812036, 1.0021315980863856, 0.9939340810253517, 0.998904847944186, 1.0040778032460878, 1.0036524106657032, 0.975776324035839, 0.9962795553099072, 1.0054006981273331, 1.0015248873897475, 0.981974568974414, 0.9970051289782772, 1.0118495548142108, 1.0058838984471918, 0.9979909826951322};
        TsData MultIrregularValue = new TsData(TsFrequency.Monthly, 1991, 0, aMultIrregularValue, false);
        DefaultSeriesDecomposition dsdMultIrregularValue = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataMultIrregularValue = dsdMultIrregularValue.getSeries(ComponentType.Irregular, ComponentInformation.Value);
        Assert.assertTrue("MultIrregularValue", CompareTsData.compareTS(MultIrregularValue, tsDataMultIrregularValue, 0.000000001));
        double[] aMultIrregularForecast = {0.9966588832654375, 0.9973546282676465, 1.0001942887188011, 1.0505583414996456, 0.9991094578726073, 0.9979146204168176, 1.0005856564194555, 0.9993305731196034, 1.0009927774138176, 0.9989330733018822, 0.9973801952027529, 1.0036964183025685};
        TsData MultIrregularForecast = new TsData(TsFrequency.Monthly, 2010, 10, aMultIrregularForecast, false);
        DefaultSeriesDecomposition dsdMultIrregularForecast = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataMultIrregularForecast = dsdMultIrregularForecast.getSeries(ComponentType.Irregular, ComponentInformation.Forecast);
        Assert.assertTrue("MultIrregularForecast", CompareTsData.compareTS(MultIrregularForecast, tsDataMultIrregularForecast, 0.000000001));
        double[] aMultSeasonallyAdjustedValue = {0.7464353087323367, 0.7965939703296865, 0.8476577380101397, 0.9467174186531627, 1.0900652211917161, 1.1640418891805338, 1.1612847288776862, 1.16803186776723, 1.1444527936087614, 1.188278031733795, 1.1111381753616334, 0.9040748337273362, 0.7820386938352637, 0.7890905359905506, 0.8402803287406577, 0.9352511576407219, 1.140534205707239, 1.1604195287712826, 1.1507490919870078, 1.1392443527252905, 1.143470958895543, 1.1594015394778678, 1.0925763130462434, 0.8998975940203658, 0.8141436184181341, 8.001894828912363, 0.8455563365181917, 0.9286927877597168, 1.1751196177205139, 1.1577249762579942, 1.1341032311031134, 1.1049734534734854, 1.107583396362717, 1.0780932731623052, 1.044913726395001, 0.9216598335183492, 0.8793995558649298, 0.8399610500110694, 0.8882158463229266, 0.9542117151208085, 1.1183159750890685, 1.1041730392007987, 1.0966123265012369, 1.072082655091036, 1.0593429601143907, 1.0388171639909172, 1.0161738271156715, 0.9498325326647061, 0.9158526251824876, 0.9062471407654381, 0.9347525347476869, 0.9774584192113284, 1.0623443071952194, 1.0656624587879833, 1.054737440678253, 1.0376983477709496, 1.025263317168165, 1.004553268593968, 0.9906183676781484, 0.977271761792717, 0.9700473304085568, 0.9615837759119852, 0.977295882275728, 0.9967185310119763, 1.0139748217379287, 1.0249948310258103, 1.0186768493979568, 1.0166703439260139, 1.006992567093117, 1.0040626914691513, 0.9944195748568343, 0.9958871905654169, 0.9838986486923675, 0.9868527098844311, 0.9915800998889169, 1.002687570006994, 1.0027477352701708, 1.0109898043373602, 1.0052916762703075, 1.0052950921984123, 0.9984410516969616, 1.0009745638432808, 0.9992693055401993, 0.9994652637261109, 0.9931626335423046, 0.9967954079395004, 0.9995383527637117, 1.0017118414186807, 0.9977587588956238, 1.004388149358723, 1.0021810087949325, 1.0015477439037086, 0.9965053629716826, 1.0005037696873502, 1.0011200616157938, 1.001108552248949, 0.9955616527209998, 0.9984767427268628, 1.0015535751420177, 1.0025326066858862, 0.9962407156085519, 0.9996844101070912, 1.0023606224332597, 1.0021174485203526, 0.997462628531322, 0.9994540340049999, 1.001269748581204, 1.001037290779389, 0.9963696083106112, 1.0005012575799292, 1.0006307108971748, 1.00167550820386, 0.9965410174658268, 1.0015015907486962, 1.0003290061188594, 1.0008809985145026, 0.9983493474151297, 1.001422177050506, 0.9993857057092927, 1.000151488291835, 0.9995276073511007, 1.000838113353956, 0.9994470866022964, 0.999152165019809, 1.000721085994807, 1.000447574237241, 0.9996596142051045, 1.000186708558111, 1.0006873629439101, 0.9993963441921775, 0.9999678162122, 1.0006363520151622, 0.999359523260618, 0.9993524683431928, 0.9999417732928313, 1.0006781122368436, 0.9991047757716047, 1.000575016719723, 1.000181580947096, 1.0001493808043762, 1.0011402447690405, 0.9992844674798799, 1.0001937173069813, 0.9985996943039873, 1.0016154727991182, 0.9986014232274948, 0.999989617231168, 0.9998497254500922, 1.0014750802984522, 0.9977619928778378, 1.0001146684342987, 1.0026430119151015, 1.0037133752577057, 0.9931282322291974, 1.0002023012159693, 1.0039745812652192, 1.0021373183519975, 0.9917960763027254, 1.0002739956506672, 1.0036309259226912, 1.0034275112435151, 0.9962415555488151, 0.9985821370721285, 0.9977841526883641, 1.0117376388206403, 0.9971354397323351, 0.9972352023911604, 0.9884379578302397, 1.0147496501827868, 1.001480365050098, 0.9955709008265285, 0.9921373584996867, 1.0113699799044207, 1.0000377104264897, 0.9959334693180849, 0.996317945992683, 1.0123407315987103, 0.9946130181135835, 0.9966771663959357, 0.9990580946508096, 1.0076700579864408, 0.9945928939161155, 0.9986752995521244, 1.0008619442103732, 1.00447751761774, 0.998407548834858, 0.9987204021938926, 0.9983110299558783, 1.003451493486283, 1.0017257276868334, 0.9988783603152709, 0.9930804342036048, 0.999389127720207, 1.0120868081112668, 0.9980001708579567, 0.9939359165917091, 0.996432637675311, 1.0079937839109172, 0.9998211653576285, 0.9974890541725293, 0.9950418830496677, 1.0043431822693065, 1.001300381589417, 1.002401996839241, 0.9920460078160133, 1.0019520408435114, 1.003021396717096, 1.0011369330616207, 0.9939913840225535, 1.0017588943326412, 1.0021839321299042, 0.9990755489207712, 0.9941055055249939, 1.004331591502061, 1.0039208975922147, 0.9982678391590644, 0.9971619613839111, 1.0001167753033637, 1.0013794585226066, 1.0001819758206563, 0.9997350733356628, 0.9976075799350653, 0.9992090364000583, 1.000842861757162, 1.0021377692578974, 0.9951958319665695, 1.0015127776952437, 1.0078998182159042, 1.0083847833318673, 0.9807589537430238, 1.0010280462065384, 1.0094360810238103, 1.0047692537567272, 0.9844468692372215, 0.9982265701536166, 1.0106849670172393, 1.0015138431716606, 0.9904243140291955};
        TsData MultSeasonallyAdjustedValue = new TsData(TsFrequency.Monthly, 1991, 0, aMultSeasonallyAdjustedValue, false);
        DefaultSeriesDecomposition dsdMultSeasonallyAdjustedValue = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataMultSeasonallyAdjustedValue = dsdMultSeasonallyAdjustedValue.getSeries(ComponentType.SeasonallyAdjusted, ComponentInformation.Value);
        Assert.assertTrue("MultSeasonallyAdjustedValue", CompareTsData.compareTS(MultSeasonallyAdjustedValue, tsDataMultSeasonallyAdjustedValue, 0.000000001));
        double[] aMultSeasonallyAdjustedForecast = {0.9863234895262258, 0.9849017973097742, 0.9863610506808952, 1.0353335212926515, 0.9842928104596214, 0.9824333154474152, 0.9840252447653061, 0.9819261406415086, 0.9831825938765413, 0.9811812415450256, 0.9799367404537221, 0.9867342821966111};
        TsData MultSeasonallyAdjustedForecast = new TsData(TsFrequency.Monthly, 2010, 10, aMultSeasonallyAdjustedForecast, false);
        DefaultSeriesDecomposition dsdMultSeasonallyAdjustedForecast = comprest.get("final", DefaultSeriesDecomposition.class);
        TsData tsDataMultSeasonallyAdjustedForecast = dsdMultSeasonallyAdjustedForecast.getSeries(ComponentType.SeasonallyAdjusted, ComponentInformation.Forecast);
        Assert.assertTrue("MultSeasonallyAdjustedForecast", CompareTsData.compareTS(MultSeasonallyAdjustedForecast, tsDataMultSeasonallyAdjustedForecast, 0.000000001));

    }

    /**
     *
     * @param mode x11 Decompositionsmode Transormation Type is Log
     * @return
     */
    private X13Specification getX13Spec(DecompositionMode mode) {
        X13Specification x13Spec = X13Specification.RSA0;
        x13Spec.getRegArimaSpecification().getOutliers().clearTypes();
        x13Spec.getRegArimaSpecification().getTransform().setFunction(DefaultTransformationType.Log);
        x13Spec.getX11Specification().setMode(mode);

        return x13Spec;
    }

    private static final double[] unemploySeasonal = {0.9180562, 1.0272757, 1.0668658, 0.9787514, 0.9313836, 1.0250405, 1.0650804, 0.9747613, 0.9418502, 1.0156112, 1.0654049, 0.9738503, 0.9504815, 1.010104, 1.0645658, 0.9699722, 0.9592689, 1.0082833, 1.0642167, 0.9640116, 0.965041, 1.0076595, 1.0648469, 0.9615725, 0.9678711, 10.0034218, 1.066394, 0.9605819, 0.9743569, 0.996285, 1.0674977, 0.9616944, 0.9799257, 0.9869897, 1.0695324, 0.9633976, 0.9840746, 0.9803236, 1.0720522, 0.9668027, 0.9761973, 0.9852996, 1.0730376, 0.9667407, 0.9710266, 0.9903273, 1.0730635, 0.967825, 0.9660222, 0.992547, 1.0727041, 0.9699537, 0.964653, 0.9927414, 1.072418, 0.9711013, 0.9627251, 0.9940281, 1.0721618, 0.9717765, 0.9603546, 0.9962908, 1.0715377, 0.9748881, 0.9546215, 0.9984903, 1.0715511, 0.9792769, 0.9477065, 1.000862, 1.0715326, 0.9832773, 0.942155, 1.003048, 1.0724468, 0.983362, 0.9407448, 1.0021712, 1.0738647, 0.9849541, 0.9379978, 1.002259, 1.0755799, 0.9857489, 0.9344911, 1.0034349, 1.0764464, 0.986686, 0.9328302, 1.0034421, 1.076927, 0.9878056, 0.9318523, 1.0025105, 1.077559, 0.9893451, 0.9308975, 1.000813, 1.0781244, 0.9907408, 0.9303614, 1.0008349, 1.0780044, 0.989879, 0.9316045, 1.0010713, 1.077419, 0.9894252, 0.9319111, 1.001701, 1.0762305, 0.9898486, 0.9325315, 1.0023491, 1.0752361, 0.9884643, 0.9347162, 1.0023267, 1.0739461, 0.9876701, 0.9378643, 1.0009766, 1.0735102, 0.9861014, 0.9406324, 0.999855, 1.0730103, 0.9865699, 0.9411618, 0.9989676, 1.0728322, 0.9869915, 0.9418439, 0.9982591, 1.072555, 0.9861752, 0.9438692, 0.998087, 1.0721105, 0.9846667, 0.9457213, 0.9979742, 1.0716681, 0.9834916, 0.9478989, 0.9970811, 1.0713196, 0.983102, 0.9502612, 0.9942578, 1.0710793, 0.985063, 0.9511854, 0.9914698, 1.0707433, 0.9874407, 0.9515542, 0.9900275, 1.070696, 0.9845132, 0.9548301, 0.9932408, 1.0691118, 0.977684, 0.9601211, 0.9968435, 1.0677422, 0.9696101, 0.9651861, 1.0007962, 1.065838, 0.9700529, 0.9625211, 0.9996584, 1.0667989, 0.9738917, 0.9600908, 0.996862, 1.0680945, 0.977864, 0.9575264, 0.9946873, 1.070673, 0.9772387, 0.9537045, 1.0004651, 1.0713684, 0.974299, 0.9493839, 1.0071895, 1.0722726, 0.9697757, 0.946103, 1.0144437, 1.0720051, 0.9700858, 0.9426046, 1.0120981, 1.0744092, 0.9738236, 0.939198, 1.0102382, 1.0757456, 0.9792007, 0.9355581, 1.0059027, 1.0780573, 0.9789557, 0.9381395, 1.0058429, 1.0776412, 0.9771881, 0.9388107, 1.0076234, 1.0778313, 0.9752792, 0.9391388, 1.0061087, 1.0754564, 0.9793699, 0.9439685, 1.0006578, 1.0737004, 0.9810835, 0.9492386, 0.994066, 1.0730588, 0.9855865, 0.950731, 0.9875736, 1.0734068, 0.9896219, 0.9502576, 0.9861444, 1.0712624, 0.9920906, 0.9516965, 0.9867609};
    private static final TsData TsdUEMPLOMENSEASONAL = new TsData(TsFrequency.Monthly, 1991, 0, unemploySeasonal, false);

    private static final double[] d1 = {0.9180562, 1.0272757, 1.0668658, 0.9787514, 0.9313836, 1.0250405, 1.0650804, 0.9747613, 0.9418502, 1.0156112, 1.0654049, 0.9738503, 0.9504815, 1.010104, 1.0645658, 0.9699722, 0.9592689, 1.0082833, 1.0642167, 0.9640116, 0.965041, 1.0076595, 1.0648469, 1.306222148, 1.455813396, 1.570548076, 1.606004249, 1.308897041, 0.9743569, 0.996285, 1.0674977, 0.9616944, 0.9799257, 0.9869897, 1.0695324, 0.9633976, 0.9840746, 0.9803236, 1.0720522, 0.9668027, 0.9761973, 0.9852996, 1.0730376, 0.9667407, 0.9710266, 0.9903273, 1.0730635, 0.967825, 0.9660222, 0.992547, 1.0727041, 0.9699537, 0.964653, 0.9927414, 1.072418, 0.9711013, 0.9627251, 0.9940281, 1.0721618, 0.9717765, 0.9603546, 1.003722921, 1.073057047, 0.9748881, 0.9546215, 0.9984903, 1.0715511, 0.9792769, 0.9477065, 1.000862, 1.0715326, 0.9832773, 0.942509545, 1.003048, 1.0724468, 0.983362, 0.9407448, 1.0021712, 1.0738647, 0.9849541, 0.9379978, 1.002259, 1.0755799, 0.9857489, 0.934925391, 1.0034349, 1.0764464, 0.986686, 0.9328302, 1.0034421, 1.076927, 0.9878056, 0.9318523, 1.0025105, 1.077559, 0.9893451, 0.938312409, 1.000813, 1.0781244, 0.9907408, 0.936630433, 1.0008349, 1.0780044, 0.989879, 0.9316045, 1.0010713, 1.077419, 0.9894252, 0.935786514, 1.001701, 1.0762305, 0.9898486, 0.936437429, 1.0023491, 1.0752361, 0.9884643, 0.9347162, 1.0023267, 1.0739461, 0.9876701, 0.9378643, 1.0009766, 1.0735102, 0.9861014, 0.9406324, 0.999855, 1.0730103, 0.9865699, 0.9411618, 0.9989676, 1.0728322, 0.9869915, 0.9418439, 0.9982591, 1.072555, 0.9861752, 0.9438692, 0.998087, 1.0721105, 0.9846667, 0.9457213, 0.9979742, 1.0716681, 0.9834916, 0.9478989, 0.9970811, 1.0713196, 0.983102, 0.9502612, 0.9942578, 1.0710793, 0.985063, 0.9511854, 0.995087439, 1.0707433, 0.9874407, 0.9515542, 0.994346016, 1.070696, 0.9845132, 0.9548301, 0.9932408, 1.0691118, 0.977684, 0.946950689, 0.9968435, 1.0677422, 0.975765373, 0.948442514, 1.0007962, 1.065838, 0.970148342, 0.948981578, 0.9996584, 1.0667989, 0.9738917, 0.94704498, 0.996862, 1.0680945, 0.977864, 0.955431714, 0.9946873, 1.070673, 0.9772387, 0.9537045, 1.0004651, 1.0713684, 0.974299, 0.9493839, 1.0071895, 1.0722726, 0.9697757, 0.946103, 0.999808941, 1.0720051, 0.9700858, 0.9426046, 1.005456089, 1.0744092, 0.9738236, 0.939198, 1.0102382, 1.0757456, 0.9792007, 0.93800928, 1.0059027, 1.0780573, 0.9789557, 0.9381395, 1.0058429, 1.0776412, 0.9771881, 0.9388107, 1.0076234, 1.0778313, 0.9752792, 0.9391388, 1.0061087, 1.0754564, 0.9793699, 0.9439685, 1.0006578, 1.0737004, 0.9810835, 0.9492386, 0.994066, 1.0730588, 0.9855865, 0.950731, 1.010119435, 1.0734068, 0.988097951, 0.9502576, 1.003455161, 1.0712624, 0.981869659, 0.9516965, 0.9867609};
    private static final TsData TsD1 = new TsData(TsFrequency.Monthly, 1991, 0, d1, false);
    private static final double[] d11 = {0.873291618, 0.920549768, 0.922486519, 0.966177005, 1.02173774, 1.074306794, 1.053525169, 1.061165471, 1.025301084, 1.060373883, 1.041648553, 0.963833197, 0.908140063, 0.914064661, 0.925525462, 0.961284234, 1.045776617, 1.054994152, 1.048112467, 1.044690388, 1.04468243, 1.046724887, 1.033462423, 0.954106455, 0.934057548, 9.217269415, 0.935985029, 0.957735697, 1.052893454, 1.039226267, 1.041859494, 1.032458043, 1.050618375, 1.019129923, 1.030384963, 0.960476715, 0.963216909, 0.920962511, 0.951755749, 0.96948943, 1.050850914, 1.023634472, 1.035837674, 1.024397396, 1.030547914, 1.011523374, 1.018277064, 0.972373315, 0.966525852, 0.955396513, 0.967935266, 0.979761528, 1.029048228, 1.021010176, 1.021771006, 1.014376558, 1.016397486, 1.005798213, 1.00587129, 0.982321667, 0.98288725, 0.976379838, 0.980850036, 0.98928601, 1.013808656, 1.014907746, 1.009848752, 1.00976031, 1.001186127, 1.003550438, 0.994641778, 0.998041596, 0.985064889, 0.996021351, 0.992921027, 1.000176059, 0.994763772, 1.00633326, 1.003254293, 1.005573186, 0.995853293, 1.001903768, 0.999040615, 0.999580479, 0.988364573, 0.999285355, 0.99951333, 1.001170872, 0.991009624, 1.00294751, 1.002132187, 1.002314663, 0.992684157, 1.000447467, 1.001061585, 1.001898614, 0.990024177, 0.99812447, 1.001858946, 1.003261275, 0.99054812, 0.99876543, 1.001877841, 1.002059703, 0.994021175, 0.998929737, 1.001291098, 1.001152546, 0.991958367, 0.999875002, 1.000286463, 1.001598287, 0.992299402, 1.000965764, 0.999668263, 1.000426857, 0.995949907, 1.001085292, 0.998665621, 0.999474546, 0.996509187, 1.000293595, 0.998515722, 0.998309625, 0.998155882, 0.999769323, 0.998512261, 0.999468009, 0.999710272, 0.998628639, 0.998705439, 0.999825494, 0.997787416, 0.998240063, 0.998768341, 1.000101729, 0.997877577, 0.998970268, 0.998778201, 0.999214399, 1.000888633, 0.998462626, 0.998687163, 0.997701596, 1.000869846, 0.997723914, 0.998604688, 0.999044576, 1.001261738, 0.995482308, 0.998624249, 1.001875052, 1.00373397, 0.991680493, 0.998385728, 1.004025837, 1.001874853, 0.990651118, 0.998433067, 1.003060188, 1.003955571, 0.993790775, 0.996932898, 0.996575384, 1.011880451, 0.995874201, 0.995527965, 0.987772771, 1.015205235, 1.001031464, 0.993538577, 0.99011151, 1.011945019, 0.998793195, 0.99414058, 0.994604128, 1.012485575, 0.993616546, 0.99505633, 0.998255201, 1.008207818, 0.993232583, 0.997148315, 0.998914782, 1.004124471, 0.997632959, 0.997409804, 0.995959398, 1.002384984, 1.002625162, 0.998265692, 0.990846111, 0.998040576, 1.01145454, 0.997756096, 0.991506463, 0.994333283, 1.007993122, 0.999476653, 0.995356199, 0.992029476, 1.005577481, 1.001276798, 1.001319435, 0.988856351, 1.000955083, 1.003101017, 1.000010055, 0.991017153, 1.001325278, 1.002092629, 0.99779217, 0.991270819, 1.004406253, 1.003586352, 0.997004374, 0.994289363, 0.999781028, 1.000872866, 0.999070922, 0.997943066, 0.996598789, 0.998403471, 1.000508914, 1.001360687, 0.992667208, 0.999634784, 1.007527466, 1.007591712, 0.979993847, 0.999335281, 1.00873242, 1.004557143, 0.982736014, 0.996407092, 1.010669781, 1.00276733, 0.987388679};
    private static final TsData TsD11 = new TsData(TsFrequency.Monthly, 1991, 0, d11, false);

    private static final double[] d11a = {0.983062816, 0.984007505, 0.987063288, 1.034936904, 0.982146959, 0.981243649, 0.98477214, 0.980086181, 0.981048958, 0.980962081, 0.981346638, 0.984400019};
    private static final TsData TsD11a = new TsData(TsFrequency.Monthly, 2010, 10, d11a, false);
    private static final double[] A6 = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
    private static final TsData tsA6 = new TsData(TsFrequency.Monthly, 1991, 0, A6, false);
    private static final double[] D10 = {1.0512596033862516, 1.1159371672748457, 1.156510993041138, 1.0130145878129475, 0.9115681682395123, 0.9541413180861085, 1.0109681583031285, 0.9185761570926883, 0.9186084117397356, 0.9577859437490683, 1.0228064897820093, 1.010392984452154, 1.046624347023645, 1.105068429698562, 1.1502285394358112, 1.0090378743790847, 0.91727897166468, 0.9557240651467512, 1.0153649859264255, 0.9227725372614647, 0.923764938072131, 0.9626784575115412, 1.0303682809831687, 1.007825169543336, 1.0362007162346774, 1.0852912451501031, 1.1393280518840592, 1.002971804502489, 0.9254088302444021, 0.9586795788116844, 1.024608122341918, 0.9314609990997849, 0.9327132700164633, 0.968463076319649, 1.0379930200157752, 1.0030410784521362, 1.0216541993499944, 1.0644554891981746, 1.1263942473221826, 0.9972287161945778, 0.9289588915048118, 0.9625502333691227, 1.0359128918115654, 0.9437164752285452, 0.9422430402518382, 0.9790453937414992, 1.0538030741436168, 0.9953224597503153, 0.9994789045240806, 1.0388848885478432, 1.1082395051560405, 0.9899895768211115, 0.937422536299475, 0.9723129340007545, 1.0495678521238425, 0.957338073785317, 0.9471935077485946, 0.9882977390703278, 1.0659035715232383, 0.9892650573136479, 0.9770750408909029, 1.0203926396301204, 1.0924582362081292, 0.9854461598677873, 0.9416190072163207, 0.9838237064095614, 1.0611005837813217, 0.9698112418702888, 0.9465837315452004, 0.997321073645305, 1.0773050394839414, 0.9852067325614005, 0.9564395306114757, 1.007054716799598, 1.0800927470384536, 0.9831889009361329, 0.9456966834092325, 0.9958641334421948, 1.070381364990636, 0.97949519094592, 0.9419035983228063, 1.000354556539786, 1.0766127861054116, 0.9861626155101145, 0.945492306931101, 1.004152512991354, 1.076970529356945, 0.9855320680048105, 0.9412927757234862, 1.0004931365691123, 1.0746356753894222, 0.9855244434681618, 0.9387198268983887, 1.0020621100637057, 1.0764162927125949, 0.9874702747510798, 0.9402775418740478, 1.0026935820853553, 1.0761239442123454, 0.9875202245028666, 0.9392389744486221, 1.0020720283122035, 1.075983873803601, 0.9878443340047534, 0.937207902261047, 1.002143857847663, 1.076029739790685, 0.9882861549822421, 0.9394659405825995, 1.001826225859284, 1.0759222877123753, 0.9882690625738927, 0.9397682775834645, 1.0013820011022665, 1.0755929142775709, 0.9880425474469828, 0.9385172823444655, 1.0012400626210207, 1.075381065604198, 0.9881893480564414, 0.9411496778135849, 1.0006828046790723, 1.0751059559246663, 0.9877711031269836, 0.9423702420585995, 1.0000856964774139, 1.074609037943195, 0.9870950254492831, 0.9414345595907878, 1.0003394260695204, 1.0742228465444958, 0.9871637656994168, 0.94393243014495, 1.0000190704048442, 1.073877650914278, 0.9860748878166314, 0.9458767509740087, 0.9991158214763354, 1.0734220063268547, 0.985440863261321, 0.9448816471414132, 0.9995108214777062, 1.0730768755043916, 0.9857572687451541, 0.9470750909197095, 0.9993557192428031, 1.0728165136916508, 0.9840421774748517, 0.9490637303778523, 0.9987699348167001, 1.0725548683442403, 0.9832194124034136, 0.9476469150217466, 0.9997875392446746, 1.0724745660471058, 0.9834813646458989, 0.9497735143651032, 0.9993704966791753, 1.0723763420773706, 0.981509595952121, 0.9510680824886939, 0.999446588279575, 1.072400962965477, 0.9810436975086038, 0.9488483533178284, 1.0009733145678261, 1.07253863067065, 0.9816125005430739, 0.9507300269350653, 0.9997649784752043, 1.0727696183951703, 0.9797410598806083, 0.9511594815735777, 1.0008662507241495, 1.0730865653746922, 0.9791752041814734, 0.948251336543869, 1.0032663042452574, 1.073401040619045, 0.9795731579141528, 0.9497311789193169, 1.001464628904672, 1.073734954136104, 0.97830036927795, 0.9497871304847594, 1.0028388611424, 1.0741506605344495, 0.9782517260438485, 0.947125021570826, 1.0045523874904576, 1.0741354821413522, 0.9787349304277189, 0.9479604564675507, 1.0029553083146363, 1.0744159861576346, 0.9783958416360196, 0.9479765149223338, 1.0040724268464327, 1.0749717829469814, 0.9783669418086671, 0.9467440460089226, 1.0046348676997825, 1.074373841756277, 0.9779104103454007, 0.9461011185153719, 1.004942896357635, 1.0747245603426332, 0.9789458568581906, 0.9466430499663707, 1.0045116428803975, 1.0753908056815453, 0.9793503390847433, 0.9470779149245515, 1.0032030340739737, 1.0739796309778349, 0.9782095503351115, 0.9445326835457447, 1.006329057895586, 1.0745184892331854, 0.9802806576687733, 0.9459141830305966, 1.0040728635884875, 1.0754173352794811, 0.9805844665573497, 0.9479487386681411, 1.0014091249768557, 1.0734508419048718, 0.9782229598379752, 0.9435677057087097, 1.0077344909059263, 1.0741207886448905, 0.9810549159863645, 0.945946785102395, 1.0034682618876793, 1.0751252262015816, 0.9816169615671447, 0.9490701096153467, 0.9993642027214473};
    private static final TsData tsD10 = new TsData(TsFrequency.Monthly, 1991, 0, D10, false);
    private static final double[] D10a = {1.0731665677990674, 0.9785286617169339, 0.9433717851165182, 1.0080750330256278, 1.0736992585015883, 0.9816793261313984, 0.9462450928226486, 1.0027577761195896, 1.0746293215016223, 0.9821645401607163, 0.9501737148255468, 0.997851787977935};
    private static final TsData tsD10a = new TsData(TsFrequency.Monthly, 2010, 10, D10a, false);
    private static final double[] D12 = {0.9576373681089738, 0.9665783644580039, 0.9812029446674865, 0.9995145944026871, 1.017412929224329, 1.0308615085305584, 1.0406130182882314, 1.043873879375186, 1.0394782097342574, 1.0274756965328153, 1.0093831302675451, 0.9894291150770764, 0.9741955640541708, 0.9693214497834096, 0.9772744825871957, 0.9948087646318663, 1.015815213325959, 1.0271273055199814, 1.0254418102597807, 1.0221628024304636, 1.0359456298698146, 1.0817514420289511, 1.1671531876408812, 1.2771814641882726, 1.3740265972206709, 1.4155081880177227, 1.3806044699480922, 1.2871866667927527, 1.1769674298968849, 1.0884276825617571, 1.0367297609966601, 1.015965838142027, 1.0134660027053433, 1.0140337281639393, 1.0066325877124858, 0.9929872203709723, 0.982727543489891, 0.9806928156261263, 0.987724690664252, 1.0011562105270981, 1.0156584704319949, 1.0269606171324503, 1.0312766467494578, 1.0289306778669327, 1.0219024619052488, 1.0135627928474416, 1.0045058622816312, 0.9960834135177018, 0.9901593984087346, 0.9899791174651056, 0.9955131748488655, 1.0047053878114376, 1.0142537679009573, 1.021269767621667, 1.0232296999103807, 1.0204291094538782, 1.0150692057329391, 1.0096686805703887, 1.0050636200523904, 1.0014482499427755, 0.9994394932374883, 1.0002653989505041, 1.003822595560607, 1.0085885310672689, 1.013198750850149, 1.0161043867718123, 1.0163485076870786, 1.0139354752391199, 1.010279405629698, 1.0069474387197401, 1.0050609173886205, 1.0042037837083824, 1.0042049742755637, 1.0050963535749866, 1.0066855644565538, 1.0081173403738848, 1.0094429193472272, 1.0103781109468715, 1.0107786445786238, 1.0100545122531526, 1.0089376222879338, 1.007787144413413, 1.0070941874161756, 1.006492433879409, 1.0064428093252484, 1.0068446942926732, 1.0075962247445098, 1.0080451307732183, 1.0084427877026334, 1.0086711742289494, 1.0086366832614535, 1.008259797144667, 1.0081861116406325, 1.008380609018534, 1.0087143022008167, 1.0089167734594615, 1.0093624976102349, 1.0097826932087675, 1.010006331269708, 1.0097339244949914, 1.0094800982950087, 1.0092716718419357, 1.0089776119044318, 1.0083605421906512, 1.008038771626997, 1.0082105301871744, 1.00851273074986, 1.008484928688492, 1.008622076353453, 1.0089907173334132, 1.0092257021210422, 1.0089508227420847, 1.008795878579788, 1.008852108409343, 1.008808323917304, 1.0083379758240354, 1.0080546515286906, 1.0081473930521274, 1.0082443628067992, 1.0079483345914115, 1.007815110978465, 1.0079684770535882, 1.0080895969609467, 1.007879907830796, 1.007874506433058, 1.0081391009748488, 1.0083888523557416, 1.0082387888534687, 1.0081449918342955, 1.0082225306925725, 1.0082527978578686, 1.007933089025768, 1.0077612836079664, 1.0079429453709614, 1.0081122555327362, 1.0079190685325488, 1.0078640256957747, 1.0081893715104664, 1.0084289526020627, 1.0082209439029377, 1.0080974011933368, 1.0082514795061706, 1.0082780182101898, 1.007974287990197, 1.0078771918031761, 1.008055698453101, 1.0080990555667102, 1.0078659325976669, 1.0078825213720959, 1.008235788489814, 1.008565300001538, 1.008661911884377, 1.0088833487753888, 1.009253082626586, 1.0092950913236223, 1.0089524581087332, 1.0088475549976341, 1.0092294263367692, 1.0094226866318623, 1.0088422491012212, 1.0080524908763697, 1.0075539862092584, 1.0069048680573203, 1.0056621410090545, 1.0048620997924944, 1.0051262677073944, 1.0056268688944763, 1.005438805030279, 1.0050871025341186, 1.005079963147047, 1.004994987468088, 1.0045848506667368, 1.0043905855119981, 1.0046061052713686, 1.0047388762068976, 1.004687595738453, 1.0049020280783194, 1.0055333261338089, 1.0062854845673481, 1.0068049406775217, 1.0073309620196818, 1.0080220656565393, 1.008444366906344, 1.0081272622277642, 1.007807026815647, 1.0081982069416333, 1.0087233726863096, 1.0085721958042484, 1.00803567936312, 1.0077874468621784, 1.007401867839915, 1.0062638702458313, 1.00501520567488, 1.0045350694326403, 1.0048516467743545, 1.0051073083169, 1.00534318076356, 1.0057732686650676, 1.0065695695588521, 1.00723375877716, 1.0077056951629422, 1.008145425763507, 1.0085874161508317, 1.0086353494247136, 1.0084525595858418, 1.0082485315841692, 1.0082073952152022, 1.0079384732437997, 1.0077270478508917, 1.0076439458498905, 1.0077495100361398, 1.007714442120687, 1.0079428285707641, 1.0082055286150284, 1.0082005166341954, 1.0078801155433668, 1.007852733215121, 1.0079570544522796, 1.0079005496528246, 1.0077978511889751, 1.0080024322001455, 1.00800274385217, 1.0076108001123938, 1.0071889109966912, 1.007668579814826, 1.008902736315165, 1.0103251331628498, 1.0114844366874496, 1.012716149720518, 1.0137779595395728, 1.0138615266410078, 1.0129616006560842, 1.012036538466985, 1.0113825573248159, 1.0099660192957647, 1.0069786865645507, 1.0033553495809384, 1.0000681325349492};
    private static final TsData tsD12 = new TsData(TsFrequency.Monthly, 1991, 0, D12, false);
    private static final double[] D13 = {0.9119230797605978, 0.9523798601929145, 0.9401587346213489, 0.9666462200174899, 1.0042507919561328, 1.0421446378897508, 1.012408215785385, 1.016564827936786, 0.9863613051636391, 1.032018456797465, 1.0319654863314953, 0.9741306192495243, 0.9321948242066386, 0.942994361250896, 0.9470476086010247, 0.9663005273255509, 1.0294949351647322, 1.0271308597198492, 1.0221081842121513, 1.022039136553981, 1.0084336470981867, 0.9676205149252911, 0.8854556828559677, 0.7470406375118064, 0.6797958275740983, 6.511632707431587, 0.677953063061745, 0.7440534628365788, 0.8945816406179438, 0.9547958800709068, 1.0049479944555277, 1.0162330306376357, 1.0366587257033504, 1.005025665600237, 1.0235958740426094, 0.9672598954491427, 0.9801464458947368, 0.9390937673416163, 0.9635840407005808, 0.9683697910113876, 1.0346498792364769, 0.9967611756656766, 1.004422699724008, 0.9955941816702241, 1.0084601542987108, 0.9979878712617596, 1.0137094285671995, 0.9761966740176513, 0.9761315741710381, 0.965067339517836, 0.9722977960116079, 0.9751729605421379, 1.0145865469865092, 0.9997458149673907, 0.9985744217215212, 0.9940686211984362, 1.0013085612553576, 0.9961665965160714, 1.0008036003482275, 0.9809010768641434, 0.9834384739306095, 0.9761207763954964, 0.9771149205557511, 0.9808618479868588, 1.000601959851179, 0.9988223246288789, 0.9936047960911566, 0.9958822177734751, 0.9909992437243091, 0.9966264366209655, 0.9896333255679146, 0.9938636086019506, 0.9809400612171105, 0.9909710127755763, 0.9863268754280731, 0.9921226614700969, 0.9854581700268358, 0.9959966958639632, 0.9925558862753542, 0.995563282945206, 0.9870315774909757, 0.9941620847424248, 0.9920031587232374, 0.9931326314789903, 0.982037492458721, 0.9924920499134581, 0.9919780417516334, 0.9931806042503878, 0.9827127888236392, 0.9943255399091191, 0.993551200345011, 0.9941035687419878, 0.9846239156768649, 0.9921327902005203, 0.9924133946752575, 0.9930438671664399, 0.9808410554458031, 0.9884547205274888, 0.9919333320049063, 0.9935897478979592, 0.9812458128478377, 0.9895902734786379, 0.9929634005482764, 0.9937514025297959, 0.9860941887738648, 0.9907947861439006, 0.9928393244913204, 0.9927293083716588, 0.9834787379394994, 0.9909655116124699, 0.9911424780736046, 0.9927126914935097, 0.9836473594053748, 0.9921828540248112, 0.9909397444591609, 0.9921542981199754, 0.9879919758480272, 0.9929949712201791, 0.9904995833600365, 0.991593032786028, 0.9887817476079195, 0.9923857914455475, 0.9905029525054753, 0.9905045409682393, 0.9903573068753231, 0.9916977948023364, 0.9902055724944597, 0.9913008904962282, 0.9916334262245555, 0.9904843514259036, 0.9905307890522643, 0.9919562173229035, 0.9901029458621872, 0.9903735799157496, 0.9907312758742399, 0.9922440798981443, 0.9900914717989936, 0.9908557819451527, 0.9904299138345545, 0.9910668937298656, 0.9928491350657651, 0.9902912584479601, 0.99048788579858, 0.9898085770515114, 0.9930474205769099, 0.989750780487661, 0.9905819101258903, 0.9912474900944553, 0.9934309967772109, 0.9873506966251437, 0.9901433740392752, 0.9932714225328814, 0.9948959619918114, 0.9825885204192497, 0.9891911059750017, 0.9951170925974869, 0.9930884482441686, 0.981591590887775, 0.9891129652993226, 0.9942686173751267, 0.9959358071938378, 0.9863399768798011, 0.9900964130649283, 0.990964404251157, 1.0069843927241746, 0.9907951201034852, 0.9899576030067444, 0.9824295286335407, 1.0100669205709973, 0.9959719630731203, 0.9886005296417295, 0.9855927143746904, 1.007521410457033, 0.9942137415161751, 0.989451690467859, 0.9899635788300888, 1.0075465537929553, 0.988148796497702, 0.988840985158262, 0.991508047912219, 1.0008704749983302, 0.9853282152144052, 0.9887985371016152, 0.9908617883047816, 0.9963459713256637, 0.9895206633880899, 0.9887842704974668, 0.9874944024597972, 0.9943943502701651, 0.9948776052705879, 0.9909309517017686, 0.984678214924213, 0.9930601749769654, 1.006888231945316, 0.9929387082783487, 0.9864682650632204, 0.9890486171491065, 1.0022071108410393, 0.9929533770100741, 0.988207742136317, 0.9844436534405481, 0.9974528036470669, 0.9927516265288067, 0.9927467206193047, 0.9805680414845112, 0.9927662192520369, 0.9949351911615191, 0.9921340254227221, 0.9834182329555449, 0.9937292652458347, 0.9943866202157017, 0.9901536866674773, 0.9834593694168757, 0.9962316452764606, 0.9954233661507645, 0.9892092901163304, 0.9865423091702802, 0.9918885170501779, 0.9930274037931968, 0.9913405950765222, 0.9900204941332805, 0.9886865836009912, 0.9908622164373702, 0.9933676824289982, 0.9937401114361192, 0.9839077367053829, 0.9894189016375512, 0.9960879570159793, 0.9949399071952555, 0.9666750369591943, 0.9856723572229059, 0.9958249353177954, 0.9926095599833522, 0.9716758579819018, 0.9865748676689876, 1.0036655143944384, 0.9994139470404618, 0.9873214103245093};
    private static final TsData tsD13 = new TsData(TsFrequency.Monthly, 1991, 0, D13, false);
}
