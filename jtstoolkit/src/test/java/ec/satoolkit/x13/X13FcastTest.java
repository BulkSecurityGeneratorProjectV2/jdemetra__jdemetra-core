/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.satoolkit.x13;

import ec.satoolkit.algorithm.implementation.X13ProcessingFactory;
import ec.tstoolkit.algorithm.CompositeResults;
import ec.tstoolkit.algorithm.SequentialProcessing;
import ec.tstoolkit.modelling.DefaultTransformationType;
import ec.tstoolkit.timeseries.simplets.TsData;
import ec.tstoolkit.timeseries.simplets.TsFrequency;
import org.junit.Test;
import org.junit.Assert;
import utilities.CompareTsData;

/**
 *
 * @author Christiane Hofer
 */
public class X13FcastTest {

    @Test
    public void FcastWithoutTransformation() {
        X13Specification x13spec = makeX13Spec(DefaultTransformationType.None);
        SequentialProcessing<TsData> processing = X13ProcessingFactory.instance.generateProcessing(x13spec);
        CompositeResults comprest = processing.process(tso);
        Assert.assertTrue("A1a", CompareTsData.compareTS(ta1aNone, comprest.getData("a-tables.a1a", TsData.class), 0.0000000001));
        Assert.assertTrue("D16a is wrong", CompareTsData.compareTS(td16aNone, comprest.getData("d-tables.d16a", TsData.class), 0.000000001));
    }

    @Test
    public void FcastWithLogTransformation() {
        X13Specification x13spec = makeX13Spec(DefaultTransformationType.Log);
        SequentialProcessing<TsData> processing = X13ProcessingFactory.instance.generateProcessing(x13spec);
        CompositeResults comprest = processing.process(tso);
        System.out.println("Specification");

        Assert.assertTrue("A1 is wrong", CompareTsData.compareTS(tso, comprest.getData("a-tables.a1", TsData.class), 0.000000001));
        Assert.assertTrue("A1a", CompareTsData.compareTS(ta1aLog, comprest.getData("a-tables.a1a", TsData.class), 0.000001));
        Assert.assertTrue("D16a is wrong", CompareTsData.compareTS(td16aLog, comprest.getData("d-tables.d16a", TsData.class), 0.00001));
        Assert.assertTrue("D16 is wrong", CompareTsData.compareTS(td16Log, comprest.getData("d-tables.d16", TsData.class), 0.000000001));
    }

    private X13Specification makeX13Spec(DefaultTransformationType trafoType) {
        X13Specification x13Spec = new X13Specification();
        x13Spec.getRegArimaSpecification().getTransform().setFunction(trafoType);
        return x13Spec;
    }

    private static final double[] o = {2.05, 2.42, 2.78, 2.31, 2.08, 1.66, 1.67, 1.4, 0.87, 1.04, 1.19, 2.35, 2.8, 3.49, 3.25, 2.83, 2.79, 2.43, 2.19, 1.93, 1.5, 1.47, 1.57, 2.54, 3.58, 3.65, 3.86, 3.27, 2.76, 2.7, 2.67, 2.12, 1.89, 2, 2.3, 2.99, 3.72, 3.96, 4.04, 3.67, 3.17, 3.09, 2.8, 2.4, 2.04, 2.11, 2.55, 2.91, 4.07, 4.31, 4.24, 3.97, 3.68, 3.31, 3, 2.73, 2.34, 2.17, 2.64, 3.53, 4.3, 4.62, 4.62, 3.94, 3.9, 2.29, 3.37, 2.9, 2.34, 2.37, 3.01, 3.05, 5.35, 4.92, 4.77, 4.41, 3.9, 3.78, 3.39, 2.97, 2.77, 2.72, 2.86, 3.74, 4.54, 5.02, 4.71, 4.35, 4.03, 3.93, 3.66, 3.21, 2.81, 2.64, 3.08, 4.05, 4.63, 4.99, 5, 4.56, 4.32, 2.77, 2.82, 2.46, 1.96, 2.02, 2.29, 3.15, 3.68, 4.43, 4.24, 3.77, 3.58, 3.47, 2.86, 2.52, 2.32, 2.21, 2.39, 3.51, 4.12, 4.66, 4.37, 3.97, 3.74, 3.29, 3.14, 2.89, 2.52, 2.41, 2.64, 3.53, 4.29, 4.69, 4.66, 4.18, 3.93, 3.56, 3.15, 3.13, 2.73, 2.66, 3.02, 3.44, 4.53, 4.85, 4.71, 4.55, 4.21, 3.81, 3.6, 3.26, 2.81, 2.71, 2.91, 3.7, 4.62, 5.02, 4.94, 4.62, 4.11, 3.89, 3.76, 3.25, 3.04, 3.05, 3.29, 4.07, 4.72, 5.23, 4.97, 4.8, 4.22, 4.13, 3.66, 3.47, 3.15, 2.91, 3.51, 4.04, 4.79, 5.37, 5.09, 4.75, 4.43, 4.37, 3.98, 3.74, 3.46, 3.1, 3.57, 4.33, 5.19, 5.44, 5.35, 4.84, 4.7, 4.36, 4.06, 3.85, 3.35, 3.15, 3.55, 4.41, 5.31, 5.77, 5.25, 5.09, 4.79, 4.44, 4.17, 3.84, 3.25, 3.43, 3.99, 4.68, 5.23, 5.81, 5.5, 5.28, 4.75, 4.7, 4.34, 3.87, 3.59, 3.5, 4.05, 4.64, 5.34, 5.83, 5.62, 5.2, 4.88, 4.88, 4.37, 3.93, 3.65, 3.66, 3.81, 4.72, 5.49, 5.88, 6.08, 5.23, 5.14, 4.75, 4.6, 4.24, 3.79, 3.55, 4.1, 4.93, 5.6, 5.94, 6.02, 5.24, 5.31, 4.73, 4.65, 4.34, 3.76, 3.69, 4.19, 4.88, 5.64, 6.03, 6.08, 5.78, 5.12, 4.97, 4.78, 4.41, 4, 3.74, 4.2, 4.84, 5.7, 6.03, 5.92, 5.73, 5.39, 4.92, 4.84, 4.47, 3.95, 4.02, 4.25, 5.11, 5.84, 6.05, 6.04, 5.5, 5.25, 5.05, 4.99, 4.57, 4.09, 5.58};
    private static final TsData tso = new TsData(TsFrequency.Monthly, 1991, 0, o, false);

    private static final double[] a1aNone = {4.93412937307575, 5.69162934974302, 6.51393226163218, 6.88513232968848, 6.79313229622263, 6.38233226948822, 6.07593226269740, 5.71993250197483, 5.52953239293679, 5.18473236930932, 4.78793226050776, 4.78513260524349};
    private static final TsData ta1aNone = new TsData(TsFrequency.Monthly, 2015, 10, a1aNone, false);

    private static final double[] d16aNone = {-0.727503066991608, 0.000132209916580805, 0.780601511384392, 1.07764134969259, 1.00320333149508, 0.607400173066468, 0.248460804717234, -0.0985157419957776, -0.243927519826282, -0.580182568611503, -1.01609335625222, -1.03908466255245};
    private static final TsData td16aNone = new TsData(TsFrequency.Monthly, 2015, 10, d16aNone, false);

    private static final double[] a1aLog = {5.06779622054505, 6.00659156869934, 6.94042771838400, 7.33052733873369, 7.29077955403784, 6.74697396292618, 6.37668990571605, 6.01642622817568, 5.85813701491814, 5.38894867325688, 4.80987692981325, 5.31540171089228};
    private static final TsData ta1aLog = new TsData(TsFrequency.Monthly, 2015, 10, a1aLog, false);

    private static final double[] d16aLog = {0.85615949627030, 1.00434130312557, 1.15871534266988, 1.21487278972702, 1.20200691935004, 1.11670909861162, 1.04545080448945, 0.97994773094862, 0.95205872027666, 0.88202177226033, 0.78595773610880, 0.80503907683633};
    private static final TsData td16aLog = new TsData(TsFrequency.Monthly, 2015, 10, d16aLog, false);

    private static final double[] d16Log = {1.25445370687383, 1.35848599182980, 1.44034466349476, 1.22202947195265, 1.09321094586123, 0.96864012853297, 0.91769445221594, 0.76430147720318, 0.62098198381244, 0.62424421383804, 0.76220923925197, 0.97610441716640, 1.25795422669832, 1.35834752526628, 1.42865529190795, 1.22152014799700, 1.09132832257303, 0.97124911254169, 0.91443591903751, 0.76688098902018, 0.62727237100999, 0.62838856520100, 0.76682525785133, 0.97899738698034, 1.26540850936371, 1.35795441045340, 1.40560978434847, 1.21454029592264, 1.08357920727764, 0.97812547147163, 0.90940887025820, 0.77126488243617, 0.63878877570415, 0.63776353521067, 0.77672922128433, 0.98403595650212, 1.26857759299391, 1.35563264158251, 1.37883056958775, 1.20659062559340, 1.07124187041079, 0.98349973102308, 0.90540293306832, 0.77501936759425, 0.65634373719666, 0.65227794211357, 0.78394036382639, 0.99277764300098, 1.26616422596689, 1.35302368573399, 1.34895961684745, 1.19641555458280, 1.06079438757061, 0.99052605120898, 0.90233632590484, 0.78092507923559, 0.67376387012292, 0.66543259211781, 0.79090013939973, 0.99927329487844, 1.25576074513199, 1.34849887507367, 1.32894716296393, 1.19131274286537, 1.05837638339521, 0.99175009073229, 0.89931366601451, 0.78649335003411, 0.68853979261279, 0.67272958224709, 0.78831758362345, 1.00942471196162, 1.24227451307146, 1.35003564558641, 1.31793720207266, 1.18421798036190, 1.06329663403132, 0.99229097594774, 0.89556178532200, 0.79226468604720, 0.69647438798508, 0.67368868621157, 0.78423500139001, 1.01879021729428, 1.22943110626378, 1.35387358134796, 1.31376845780092, 1.18075525021726, 1.06847743977599, 0.98935082389438, 0.89409354334179, 0.79613731120974, 0.70320800511870, 0.67634874713937, 0.77454164601439, 1.02552728612303, 1.21834684859168, 1.35830691813365, 1.31145939293423, 1.17699359981945, 1.07457792915505, 0.98645438980129, 0.89253215646113, 0.80321101556004, 0.70777224307087, 0.67923799449338, 0.77126746695061, 1.02556118654894, 1.21212015206112, 1.35359990899142, 1.30553962968093, 1.17724528463837, 1.08276679764475, 0.98167496578319, 0.89195660976508, 0.81347714859835, 0.71370740512762, 0.68403135969798, 0.76872125198209, 1.02135989932810, 1.20890957973751, 1.34604607935017, 1.29886057197218, 1.17551717230772, 1.08587420380023, 0.97850945538931, 0.89360430505941, 0.82501032773275, 0.72102484663593, 0.69088525055552, 0.77476712527994, 1.01564454748063, 1.20589965714930, 1.33182261311553, 1.28470864998752, 1.17650475829271, 1.08203670780482, 0.97960077614452, 0.89911426011351, 0.83553463510637, 0.73242450999756, 0.70107992279418, 0.78186442918937, 1.00670377092525, 1.20191039247334, 1.31874279713324, 1.26912587951404, 1.17387675954352, 1.07301747610555, 0.98675228239154, 0.90509275601662, 0.84505539132688, 0.74585982928430, 0.70892841325059, 0.79356113091101, 1.00073921350723, 1.19584372843047, 1.30208510249327, 1.25400420997411, 1.16985202068192, 1.06553608946600, 0.99515170937834, 0.91251493623269, 0.85219371013744, 0.75745717678540, 0.71462258678222, 0.80233124706285, 0.99644009479385, 1.19092433415307, 1.29359452900965, 1.24244313620416, 1.16112565935967, 1.06048091841012, 1.00116445511280, 0.91752400383699, 0.85562000889941, 0.76668852508777, 0.71915074505228, 0.81311626217928, 0.99840029323572, 1.18460946728459, 1.28752565428892, 1.23019422326351, 1.15233813584160, 1.05737723623831, 1.00491968393781, 0.92254426838437, 0.85621940632171, 0.77262532298256, 0.72476259259501, 0.82358997531086, 1.00086685195289, 1.17896523669422, 1.28386665485070, 1.22179258941153, 1.14265148197001, 1.05561386285417, 1.00623482360046, 0.92568532861433, 0.85469586808215, 0.77662734493449, 0.73318532917983, 0.83510662167138, 1.00421714307409, 1.17304151963665, 1.27502504906652, 1.21683033206541, 1.13339185968461, 1.05674257587670, 1.00484743618471, 0.93134831329286, 0.85435806408922, 0.77794250770931, 0.74181788507584, 0.84258401456268, 1.00603458001019, 1.16877772069676, 1.26617566901746, 1.21687028186337, 1.12406240291561, 1.05875778764838, 0.99967977555314, 0.93783877526318, 0.85649648517584, 0.77837506437159, 0.75019789168971, 0.84913492410861, 1.00771016882169, 1.16184579406840, 1.25461940977451, 1.21974377869020, 1.11882144897326, 1.05753144592525, 0.99614063049554, 0.94394827837581, 0.86170907705958, 0.78049467552611, 0.75546594834204, 0.85370611467413, 1.00642996739137, 1.15681329855606, 1.24426377342059, 1.22112661301930, 1.11573857745017, 1.05702119005167, 0.99168218242274, 0.94882551096599, 0.86879612063973, 0.78339648716969, 0.76121258190425, 0.85472213312904, 1.00506256523333, 1.15564230768454, 1.23293454809419, 1.22188853150062, 1.11319714488616, 1.05553973658136, 0.98717903662287, 0.95195357272827, 0.87691111649098, 0.78641797835079, 0.76720958091770, 0.85406464746156, 1.00457293867326, 1.15740755206572, 1.22468269897017, 1.21822773918557, 1.11177680824738, 1.05486440499784, 0.98212647353938, 0.95317862605914, 0.88241094594539, 0.78655547091441, 0.77798435649646, 0.85412684905781, 1.00522810044158, 1.15791321761886, 1.21906663141648, 1.21288749753304, 1.11341990103342, 1.04970348695864, 0.98071645900979, 0.95298355348502, 0.88396803598459, 0.78709904410322, 0.78865737039480, 0.85584509728569, 1.00505183178683, 1.15812549574736, 1.21614935049014, 1.20629753912475, 1.11560125068627, 1.04656512870099, 0.98013379883450, 0.95245138153267, 0.88271680389507, 0.78608934569641, 0.79954240854927};
    private static final TsData td16Log = new TsData(TsFrequency.Monthly, 1991, 0, d16Log, false);

}
